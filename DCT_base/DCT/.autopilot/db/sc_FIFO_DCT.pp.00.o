	.def	 ___cxx_global_var_init;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___cxx_global_var_init:
	.cfi_startproc
	pushl	%ebp
Ltmp2:
	.cfi_def_cfa_offset 8
Ltmp3:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp4:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	leal	__ZStL8__ioinit, %eax
	movl	%eax, (%esp)
	calll	__ZNSt8ios_base4InitC1Ev
	leal	___dtor__ZStL8__ioinit, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, -4(%ebp)
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___dtor__ZStL8__ioinit;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___dtor__ZStL8__ioinit:
	.cfi_startproc
	pushl	%ebp
Ltmp7:
	.cfi_def_cfa_offset 8
Ltmp8:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp9:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZStL8__ioinit, %eax
	movl	%eax, (%esp)
	calll	__ZNSt8ios_base4InitD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,"xr"
	.linkonce discard
	.globl	__ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.align	16, 0x90
__ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi:
Lllvm$workaround$fake$stub$__ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi:
	subl	$12, %esp
	movl	24(%esp), %eax
	movl	20(%esp), %ecx
	movl	16(%esp), %edx
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	addl	$12, %esp
	ret

	.def	 ___cxx_global_var_init1;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___cxx_global_var_init1:
	.cfi_startproc
	pushl	%ebp
Ltmp12:
	.cfi_def_cfa_offset 8
Ltmp13:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp14:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN7sc_coreL17api_version_checkE, %eax
	movl	%eax, (%esp)
	calll	__ZN7sc_core20sc_api_version_2_3_0C1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init2;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init2:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin4:
	.cfi_lsda 0, Lexception4
	pushl	%ebp
Ltmp20:
	.cfi_def_cfa_offset 8
Ltmp21:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp22:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp15:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str, 4(%eax)
	movl	$__ZN3tlmL18tlm_version_stringE, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp16:
	jmp	LBB4_1
LBB4_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL18tlm_version_stringE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB4_2:
Ltmp17:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end4:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table4:
Lexception4:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset0 = Ltmp15-Leh_func_begin4
	.long	Lset0
Lset1 = Ltmp16-Ltmp15
	.long	Lset1
Lset2 = Ltmp17-Leh_func_begin4
	.long	Lset2
	.byte	0
Lset3 = Ltmp16-Leh_func_begin4
	.long	Lset3
Lset4 = Leh_func_end4-Ltmp16
	.long	Lset4
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL18tlm_version_stringE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL18tlm_version_stringE:
	.cfi_startproc
	pushl	%ebp
Ltmp25:
	.cfi_def_cfa_offset 8
Ltmp26:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp27:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL18tlm_version_stringE, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init3;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init3:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin6:
	.cfi_lsda 0, Lexception6
	pushl	%ebp
Ltmp33:
	.cfi_def_cfa_offset 8
Ltmp34:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp35:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp28:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str4, 4(%eax)
	movl	$__ZN3tlmL22tlm_version_originatorE, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp29:
	jmp	LBB6_1
LBB6_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL22tlm_version_originatorE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB6_2:
Ltmp30:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end6:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table6:
Lexception6:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset5 = Ltmp28-Leh_func_begin6
	.long	Lset5
Lset6 = Ltmp29-Ltmp28
	.long	Lset6
Lset7 = Ltmp30-Leh_func_begin6
	.long	Lset7
	.byte	0
Lset8 = Ltmp29-Leh_func_begin6
	.long	Lset8
Lset9 = Leh_func_end6-Ltmp29
	.long	Lset9
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL22tlm_version_originatorE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL22tlm_version_originatorE:
	.cfi_startproc
	pushl	%ebp
Ltmp38:
	.cfi_def_cfa_offset 8
Ltmp39:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp40:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL22tlm_version_originatorE, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init5;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init5:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin8:
	.cfi_lsda 0, Lexception8
	pushl	%ebp
Ltmp46:
	.cfi_def_cfa_offset 8
Ltmp47:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp48:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp41:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str6, 4(%eax)
	movl	$__ZN3tlmL22tlm_version_prereleaseE, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp42:
	jmp	LBB8_1
LBB8_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL22tlm_version_prereleaseE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB8_2:
Ltmp43:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end8:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table8:
Lexception8:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset10 = Ltmp41-Leh_func_begin8
	.long	Lset10
Lset11 = Ltmp42-Ltmp41
	.long	Lset11
Lset12 = Ltmp43-Leh_func_begin8
	.long	Lset12
	.byte	0
Lset13 = Ltmp42-Leh_func_begin8
	.long	Lset13
Lset14 = Leh_func_end8-Ltmp42
	.long	Lset14
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL22tlm_version_prereleaseE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL22tlm_version_prereleaseE:
	.cfi_startproc
	pushl	%ebp
Ltmp51:
	.cfi_def_cfa_offset 8
Ltmp52:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp53:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL22tlm_version_prereleaseE, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init7;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init7:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin10:
	.cfi_lsda 0, Lexception10
	pushl	%ebp
Ltmp59:
	.cfi_def_cfa_offset 8
Ltmp60:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp61:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp54:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str8, 4(%eax)
	movl	$__ZN3tlmL24tlm_version_release_dateE, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp55:
	jmp	LBB10_1
LBB10_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL24tlm_version_release_dateE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB10_2:
Ltmp56:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end10:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table10:
Lexception10:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset15 = Ltmp54-Leh_func_begin10
	.long	Lset15
Lset16 = Ltmp55-Ltmp54
	.long	Lset16
Lset17 = Ltmp56-Leh_func_begin10
	.long	Lset17
	.byte	0
Lset18 = Ltmp55-Leh_func_begin10
	.long	Lset18
Lset19 = Leh_func_end10-Ltmp55
	.long	Lset19
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL24tlm_version_release_dateE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL24tlm_version_release_dateE:
	.cfi_startproc
	pushl	%ebp
Ltmp64:
	.cfi_def_cfa_offset 8
Ltmp65:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp66:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL24tlm_version_release_dateE, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init9;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init9:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin12:
	.cfi_lsda 0, Lexception12
	pushl	%ebp
Ltmp72:
	.cfi_def_cfa_offset 8
Ltmp73:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp74:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp67:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str10, 4(%eax)
	movl	$__ZN3tlmL20tlm_copyright_stringE, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp68:
	jmp	LBB12_1
LBB12_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL20tlm_copyright_stringE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB12_2:
Ltmp69:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end12:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table12:
Lexception12:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset20 = Ltmp67-Leh_func_begin12
	.long	Lset20
Lset21 = Ltmp68-Ltmp67
	.long	Lset21
Lset22 = Ltmp69-Leh_func_begin12
	.long	Lset22
	.byte	0
Lset23 = Ltmp68-Leh_func_begin12
	.long	Lset23
Lset24 = Leh_func_end12-Ltmp68
	.long	Lset24
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL20tlm_copyright_stringE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL20tlm_copyright_stringE:
	.cfi_startproc
	pushl	%ebp
Ltmp77:
	.cfi_def_cfa_offset 8
Ltmp78:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp79:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL20tlm_copyright_stringE, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init11;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init11:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin14:
	.cfi_lsda 0, Lexception14
	pushl	%ebp
Ltmp85:
	.cfi_def_cfa_offset 8
Ltmp86:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp87:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	leal	32(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 20(%esp)
	calll	__ZNSaIcEC1Ev
Ltmp80:
	movl	%esp, %eax
	movl	20(%esp), %ecx
	movl	%ecx, 8(%eax)
	movl	$L_.str12, 4(%eax)
	movl	$__ZN3tlmL20tlm_version_string_2E, (%eax)
	calll	__ZNSsC1EPKcRKSaIcE
Ltmp81:
	jmp	LBB14_1
LBB14_1:
	leal	32(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZNSaIcED1Ev
	leal	___dtor__ZN3tlmL20tlm_version_string_2E, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, 16(%esp)
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB14_2:
Ltmp82:
	leal	32(%esp), %ecx
	movl	%eax, 28(%esp)
	movl	%edx, 24(%esp)
	movl	%ecx, (%esp)
	calll	__ZNSaIcED1Ev
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end14:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table14:
Lexception14:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset25 = Ltmp80-Leh_func_begin14
	.long	Lset25
Lset26 = Ltmp81-Ltmp80
	.long	Lset26
Lset27 = Ltmp82-Leh_func_begin14
	.long	Lset27
	.byte	0
Lset28 = Ltmp81-Leh_func_begin14
	.long	Lset28
Lset29 = Leh_func_end14-Ltmp81
	.long	Lset29
	.long	0
	.byte	0
	.align	4

	.def	 ___dtor__ZN3tlmL20tlm_version_string_2E;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL20tlm_version_string_2E:
	.cfi_startproc
	pushl	%ebp
Ltmp90:
	.cfi_def_cfa_offset 8
Ltmp91:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp92:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL20tlm_version_string_2E, %eax
	movl	%eax, (%esp)
	calll	__ZNSsD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___cxx_global_var_init13;
	.scl	3;
	.type	32;
	.endef
	.align	16, 0x90
___cxx_global_var_init13:
	.cfi_startproc
	pushl	%ebp
Ltmp95:
	.cfi_def_cfa_offset 8
Ltmp96:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp97:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	leal	__ZN3tlmL30global_tlm_endian_context_poolE, %eax
	movl	%eax, (%esp)
	calll	__ZN3tlm23tlm_endian_context_poolC1Ev
	leal	___dtor__ZN3tlmL30global_tlm_endian_context_poolE, %eax
	movl	%eax, (%esp)
	calll	_atexit
	movl	%eax, -4(%ebp)
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN3tlm23tlm_endian_context_poolC1Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm23tlm_endian_context_poolC1Ev,"xr"
	.linkonce discard
	.globl	__ZN3tlm23tlm_endian_context_poolC1Ev
	.align	16, 0x90
__ZN3tlm23tlm_endian_context_poolC1Ev:
Lllvm$workaround$fake$stub$__ZN3tlm23tlm_endian_context_poolC1Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp100:
	.cfi_def_cfa_offset 8
Ltmp101:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp102:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN3tlm23tlm_endian_context_poolC2Ev
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN3tlm23tlm_endian_context_poolD1Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm23tlm_endian_context_poolD1Ev,"xr"
	.linkonce discard
	.globl	__ZN3tlm23tlm_endian_context_poolD1Ev
	.align	16, 0x90
__ZN3tlm23tlm_endian_context_poolD1Ev:
Lllvm$workaround$fake$stub$__ZN3tlm23tlm_endian_context_poolD1Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp105:
	.cfi_def_cfa_offset 8
Ltmp106:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp107:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN3tlm23tlm_endian_context_poolD2Ev
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 ___dtor__ZN3tlmL30global_tlm_endian_context_poolE;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___dtor__ZN3tlmL30global_tlm_endian_context_poolE:
	.cfi_startproc
	pushl	%ebp
Ltmp110:
	.cfi_def_cfa_offset 8
Ltmp111:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp112:
	.cfi_def_cfa_register %ebp
	pushl	%eax
	leal	__ZN3tlmL30global_tlm_endian_context_poolE, %eax
	movl	%eax, (%esp)
	calll	__ZN3tlm23tlm_endian_context_poolD1Ev
	addl	$4, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN11sc_FIFO_DCT4Prc1Ev;
	.scl	2;
	.type	32;
	.endef
	.globl	__ZN11sc_FIFO_DCT4Prc1Ev
	.align	16, 0x90
__ZN11sc_FIFO_DCT4Prc1Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp115:
	.cfi_def_cfa_offset 8
Ltmp116:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp117:
	.cfi_def_cfa_register %ebp
	subl	$40, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	$0, -8(%ebp)
	movl	%eax, %ecx
	movl	%ecx, (%esp)
	movl	%eax, -16(%ebp)
	calll	__ZN7sc_core9sc_module4waitEv
LBB20_1:
	movl	-16(%ebp), %eax
	addl	$264, %eax
	movl	%eax, (%esp)
	calll	__ZNK7sc_core5sc_inIbEcvRKbEv
	movb	(%eax), %cl
	andb	$1, %cl
	movzbl	%cl, %eax
	cmpl	$1, %eax
	jne	LBB20_6
	movl	-16(%ebp), %eax
	addl	$848, %eax
	movl	%eax, (%esp)
	calll	__ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv
	movb	(%eax), %cl
	andb	$1, %cl
	movzbl	%cl, %eax
	cmpl	$1, %eax
	jne	LBB20_4
	leal	-9(%ebp), %eax
	movl	-16(%ebp), %ecx
	addl	$512, %ecx
	movb	$1, -9(%ebp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core6sc_outIbEaSERKb
	movl	%eax, -20(%ebp)
	jmp	LBB20_5
LBB20_4:
	movl	-8(%ebp), %eax
	movl	-16(%ebp), %ecx
	addl	$952, %ecx
	imull	$24, %eax, %eax
	addl	%eax, %ecx
	movl	-16(%ebp), %eax
	addl	$596, %eax
	movl	%eax, (%esp)
	movl	%ecx, -24(%ebp)
	calll	__ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv
	movl	(%eax), %ecx
	movl	%eax, (%esp)
	calll	*20(%ecx)
	movl	-24(%ebp), %ecx
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE
	movl	-8(%ebp), %ecx
	addl	$1, %ecx
	movl	%ecx, -8(%ebp)
	movl	%eax, -28(%ebp)
LBB20_5:
	jmp	LBB20_6
LBB20_6:
	cmpl	$64, -8(%ebp)
	jne	LBB20_8
	leal	-10(%ebp), %eax
	movl	$0, -8(%ebp)
	movl	-16(%ebp), %ecx
	addl	$744, %ecx
	movb	$1, -10(%ebp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb
	movl	%eax, -32(%ebp)
LBB20_8:
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN7sc_core9sc_module4waitEv
	jmp	LBB20_1
	.cfi_endproc

	.def	 __ZN7sc_core9sc_module4waitEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core9sc_module4waitEv,"xr"
	.linkonce discard
	.globl	__ZN7sc_core9sc_module4waitEv
	.align	16, 0x90
__ZN7sc_core9sc_module4waitEv:
Lllvm$workaround$fake$stub$__ZN7sc_core9sc_module4waitEv:
	.cfi_startproc
	pushl	%ebp
Ltmp120:
	.cfi_def_cfa_offset 8
Ltmp121:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp122:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZNK7sc_core9sc_object10simcontextEv
	movl	%eax, (%esp)
	calll	__ZN7sc_core4waitEPNS_13sc_simcontextE
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZNK7sc_core5sc_inIbEcvRKbEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK7sc_core5sc_inIbEcvRKbEv,"xr"
	.linkonce discard
	.globl	__ZNK7sc_core5sc_inIbEcvRKbEv
	.align	16, 0x90
__ZNK7sc_core5sc_inIbEcvRKbEv:
Lllvm$workaround$fake$stub$__ZNK7sc_core5sc_inIbEcvRKbEv:
	.cfi_startproc
	pushl	%ebp
Ltmp125:
	.cfi_def_cfa_offset 8
Ltmp126:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp127:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	movl	(%eax), %ecx
	movl	%eax, (%esp)
	calll	*28(%ecx)
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv,"xr"
	.linkonce discard
	.globl	__ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv
	.align	16, 0x90
__ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv:
Lllvm$workaround$fake$stub$__ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv:
	.cfi_startproc
	pushl	%ebp
Ltmp130:
	.cfi_def_cfa_offset 8
Ltmp131:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp132:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	(%eax), %ecx
	movl	%eax, (%esp)
	calll	*28(%ecx)
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core6sc_outIbEaSERKb;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core6sc_outIbEaSERKb,"xr"
	.linkonce discard
	.globl	__ZN7sc_core6sc_outIbEaSERKb
	.align	16, 0x90
__ZN7sc_core6sc_outIbEaSERKb:
Lllvm$workaround$fake$stub$__ZN7sc_core6sc_outIbEaSERKb:
	.cfi_startproc
	pushl	%ebp
Ltmp135:
	.cfi_def_cfa_offset 8
Ltmp136:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp137:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	12(%ebp), %eax
	movl	8(%ebp), %ecx
	movl	%ecx, -4(%ebp)
	movl	%eax, -8(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %ecx
	movl	%ecx, (%esp)
	movl	%eax, -12(%ebp)
	calll	__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	movl	%eax, %ecx
	addl	$4, %ecx
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	-8(%ebp), %edx
	movl	%ecx, (%esp)
	movl	%edx, 4(%esp)
	calll	*%eax
	movl	-12(%ebp), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi18EEaSERKNS_12sc_uint_baseE:
	.cfi_startproc
	pushl	%ebp
Ltmp140:
	.cfi_def_cfa_offset 8
Ltmp141:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp142:
	.cfi_def_cfa_register %ebp
	subl	$24, %esp
	movl	12(%ebp), %eax
	movl	8(%ebp), %ecx
	movl	%ecx, -4(%ebp)
	movl	%eax, -8(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %ecx
	movl	-8(%ebp), %edx
	movl	%ecx, (%esp)
	movl	%edx, 4(%esp)
	movl	%eax, -12(%ebp)
	calll	__ZN5sc_dt12sc_uint_baseaSERKS0_
	movl	-12(%ebp), %ecx
	movl	%eax, -16(%ebp)
	movl	%ecx, %eax
	addl	$24, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv,"xr"
	.linkonce discard
	.globl	__ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv
	.align	16, 0x90
__ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv:
Lllvm$workaround$fake$stub$__ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi8EEEEEEptEv:
	.cfi_startproc
	pushl	%ebp
Ltmp145:
	.cfi_def_cfa_offset 8
Ltmp146:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp147:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, 48(%eax)
	movl	%eax, -8(%ebp)
	jne	LBB26_2
	leal	__ZN7sc_core13SC_ID_GET_IF_E, %eax
	leal	L_.str15, %ecx
	movl	-8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, 8(%esp)
	calll	__ZNK7sc_core12sc_port_base12report_errorEPKcS2_
LBB26_2:
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb,"xr"
	.linkonce discard
	.globl	__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb
	.align	16, 0x90
__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb:
Lllvm$workaround$fake$stub$__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb:
	.cfi_startproc
	pushl	%ebp
Ltmp150:
	.cfi_def_cfa_offset 8
Ltmp151:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp152:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	12(%ebp), %eax
	movl	8(%ebp), %ecx
	movl	%ecx, -4(%ebp)
	movl	%eax, -8(%ebp)
	movl	-4(%ebp), %eax
	movl	(%eax), %ecx
	movl	56(%ecx), %ecx
	movl	-8(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	movl	%eax, -12(%ebp)
	calll	*%ecx
	movl	-12(%ebp), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN11sc_FIFO_DCT4Prc2Ev;
	.scl	2;
	.type	32;
	.endef
	.text
	.globl	__ZN11sc_FIFO_DCT4Prc2Ev
	.align	16, 0x90
__ZN11sc_FIFO_DCT4Prc2Ev:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin28:
	.cfi_lsda 0, Lexception28
	pushl	%ebp
Ltmp162:
	.cfi_def_cfa_offset 8
Ltmp163:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp164:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	pushl	%edi
	pushl	%esi
	subl	$400, %esp
Ltmp165:
	.cfi_offset %esi, -16
Ltmp166:
	.cfi_offset %edi, -12
	movl	8(%ebp), %eax
	leal	395(%esp), %ecx
	movl	%eax, 396(%esp)
	movl	396(%esp), %eax
	movl	%eax, %edx
	addl	$428, %edx
	movb	$0, 395(%esp)
	movl	%edx, (%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, 80(%esp)
	calll	__ZN7sc_core6sc_outIbEaSERKb
	movl	$0, 132(%esp)
	movl	$0, 128(%esp)
	movl	$0, 124(%esp)
	movl	80(%esp), %ecx
	movl	%ecx, (%esp)
	movl	%eax, 76(%esp)
	calll	__ZN7sc_core9sc_module4waitEv
LBB28_1:
	jmp	LBB28_2
LBB28_2:
	movl	80(%esp), %eax
	addl	$744, %eax
	movl	%eax, (%esp)
	calll	__ZNK7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEcvRKbEv
	movb	(%eax), %cl
	xorb	$1, %cl
	testb	$1, %cl
	jne	LBB28_3
	jmp	LBB28_4
LBB28_3:
	movl	80(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZN7sc_core9sc_module4waitEv
	jmp	LBB28_2
LBB28_4:
	leal	123(%esp), %eax
	movl	80(%esp), %ecx
	addl	$744, %ecx
	movb	$0, 123(%esp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb
	leal	122(%esp), %ecx
	movl	80(%esp), %edx
	addl	$848, %edx
	movb	$1, 122(%esp)
	movl	%edx, (%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, 72(%esp)
	calll	__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb
	movl	$0, 132(%esp)
	movl	%eax, 68(%esp)
LBB28_5:
	cmpl	$8, 132(%esp)
	jge	LBB28_27
	movl	$0, 128(%esp)
LBB28_7:
	cmpl	$8, 128(%esp)
	jge	LBB28_14
	movl	132(%esp), %eax
	movl	128(%esp), %ecx
	shll	$3, %ecx
	addl	%ecx, %eax
	movl	$0, 136(%esp,%eax,4)
	movl	$0, 124(%esp)
LBB28_9:
	cmpl	$8, 124(%esp)
	jge	LBB28_12
	movl	132(%esp), %eax
	movl	124(%esp), %ecx
	leal	(%eax,%ecx,8), %eax
	movl	128(%esp), %edx
	leal	(%ecx,%edx,8), %ecx
	imull	$24, %ecx, %ecx
	movl	%esp, %edx
	movl	80(%esp), %esi
	leal	952(%esi,%ecx), %ecx
	movl	%ecx, (%edx)
	movl	%eax, 64(%esp)
	calll	__ZNK5sc_dt12sc_uint_basecvyEv
	movl	132(%esp), %ecx
	movl	128(%esp), %esi
	leal	(%ecx,%esi,8), %ecx
	movl	64(%esp), %esi
	movl	__ZL3b_a(,%esi,4), %esi
	imull	%eax, %esi
	movl	136(%esp,%ecx,4), %eax
	addl	%esi, %eax
	movl	%eax, 136(%esp,%ecx,4)
	movl	%edx, 60(%esp)
	movl	124(%esp), %eax
	addl	$1, %eax
	movl	%eax, 124(%esp)
	jmp	LBB28_9
LBB28_12:
	jmp	LBB28_13
LBB28_13:
	movl	128(%esp), %eax
	addl	$1, %eax
	movl	%eax, 128(%esp)
	jmp	LBB28_7
LBB28_14:
	movl	$0, 128(%esp)
LBB28_15:
	cmpl	$8, 128(%esp)
	jge	LBB28_25
	xorps	%xmm0, %xmm0
	movl	132(%esp), %eax
	movl	128(%esp), %ecx
	shll	$3, %ecx
	addl	%ecx, %eax
	movl	80(%esp), %ecx
	addl	$2488, %ecx
	imull	$24, %eax, %eax
	addl	%eax, %ecx
	movl	%ecx, (%esp)
	movsd	%xmm0, 4(%esp)
	calll	__ZN5sc_dt7sc_uintILi18EEaSEd
	movl	$0, 124(%esp)
	movl	%eax, 56(%esp)
LBB28_17:
	cmpl	$8, 124(%esp)
	jge	LBB28_20
	movl	132(%esp), %eax
	movl	128(%esp), %ecx
	leal	(%eax,%ecx,8), %edx
	imull	$24, %edx, %edx
	movl	124(%esp), %esi
	leal	(%eax,%esi,8), %eax
	movl	136(%esp,%eax,4), %eax
	leal	(%esi,%ecx,8), %ecx
	movl	__ZL1b(,%ecx,4), %ecx
	imull	%ecx, %eax
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	80(%esp), %esi
	leal	2488(%esi,%edx), %edx
	movl	%esp, %edi
	movl	%ecx, 8(%edi)
	movl	%eax, 4(%edi)
	movl	%edx, (%edi)
	calll	__ZN5sc_dt7sc_uintILi18EEpLEy
	movl	%eax, 52(%esp)
	movl	124(%esp), %eax
	addl	$1, %eax
	movl	%eax, 124(%esp)
	jmp	LBB28_17
LBB28_20:
	movl	80(%esp), %eax
	addl	$668, %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	calll	__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv
	movl	%eax, %ecx
	addl	$4, %ecx
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	132(%esp), %edx
	movl	128(%esp), %esi
	leal	(%edx,%esi,8), %edx
	imull	$24, %edx, %edx
	movl	%esp, %esi
	movl	80(%esp), %edi
	leal	2488(%edi,%edx), %edx
	movl	%edx, (%esi)
	movl	%ecx, 48(%esp)
	movl	%eax, 44(%esp)
	calll	__ZNK5sc_dt12sc_uint_basecvyEv
	movl	%esp, %ecx
	movl	%edx, %esi
	shrl	$19, %esi
	shldl	$13, %eax, %edx
	addl	$127, %edx
	movl	%edx, 4(%ecx)
	leal	96(%esp), %eax
	movl	%eax, (%ecx)
	adcl	$0, %esi
	movl	%esi, 8(%ecx)
	movl	%eax, 40(%esp)
	calll	__ZN5sc_dt7sc_uintILi8EEC1Ey
Ltmp153:
	movl	%esp, %eax
	movl	40(%esp), %ecx
	movl	%ecx, 4(%eax)
	movl	48(%esp), %edx
	movl	%edx, (%eax)
	movl	44(%esp), %eax
	calll	*%eax
Ltmp154:
	jmp	LBB28_21
LBB28_21:
	leal	96(%esp), %eax
	movl	%eax, (%esp)
	calll	__ZN5sc_dt7sc_uintILi8EED1Ev
	leal	87(%esp), %eax
	movl	80(%esp), %ecx
	addl	$344, %ecx
	movb	$1, 87(%esp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core6sc_outIbEaSERKb
	movl	80(%esp), %ecx
	movl	%ecx, (%esp)
	movl	%eax, 36(%esp)
	calll	__ZN7sc_core9sc_module4waitEv
	leal	86(%esp), %eax
	movl	80(%esp), %ecx
	addl	$344, %ecx
	movb	$0, 86(%esp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core6sc_outIbEaSERKb
	movl	%eax, 32(%esp)
	movl	128(%esp), %eax
	addl	$1, %eax
	movl	%eax, 128(%esp)
	jmp	LBB28_15
LBB28_23:
Ltmp155:
	movl	%eax, 92(%esp)
	movl	%edx, 88(%esp)
Ltmp156:
	leal	96(%esp), %eax
	movl	%esp, %edx
	movl	%eax, (%edx)
	calll	__ZN5sc_dt7sc_uintILi8EED1Ev
Ltmp157:
	jmp	LBB28_24
LBB28_24:
	jmp	LBB28_28
LBB28_25:
	jmp	LBB28_26
LBB28_26:
	movl	132(%esp), %eax
	addl	$1, %eax
	movl	%eax, 132(%esp)
	jmp	LBB28_5
LBB28_27:
	leal	85(%esp), %eax
	movl	80(%esp), %ecx
	addl	$848, %ecx
	movb	$0, 85(%esp)
	movl	%ecx, (%esp)
	movl	%eax, 4(%esp)
	calll	__ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EEaSERKb
	leal	84(%esp), %ecx
	movl	80(%esp), %edx
	addl	$428, %edx
	movb	$1, 84(%esp)
	movl	%edx, (%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, 28(%esp)
	calll	__ZN7sc_core6sc_outIbEaSERKb
	movl	80(%esp), %ecx
	movl	%ecx, (%esp)
	movl	%eax, 24(%esp)
	calll	__ZN7sc_core9sc_module4waitEv
	jmp	LBB28_1
LBB28_28:
	movl	92(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
LBB28_29:
Ltmp158:
	movl	%eax, 20(%esp)
	movl	%edx, 16(%esp)
	calll	__ZSt9terminatev
	.cfi_endproc
Leh_func_end28:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table28:
Lexception28:
	.byte	255
	.byte	0
	.byte	73
	.byte	3
	.byte	65
Lset30 = Leh_func_begin28-Leh_func_begin28
	.long	Lset30
Lset31 = Ltmp153-Leh_func_begin28
	.long	Lset31
	.long	0
	.byte	0
Lset32 = Ltmp153-Leh_func_begin28
	.long	Lset32
Lset33 = Ltmp154-Ltmp153
	.long	Lset33
Lset34 = Ltmp155-Leh_func_begin28
	.long	Lset34
	.byte	0
Lset35 = Ltmp154-Leh_func_begin28
	.long	Lset35
Lset36 = Ltmp156-Ltmp154
	.long	Lset36
	.long	0
	.byte	0
Lset37 = Ltmp156-Leh_func_begin28
	.long	Lset37
Lset38 = Ltmp157-Ltmp156
	.long	Lset38
Lset39 = Ltmp158-Leh_func_begin28
	.long	Lset39
	.byte	1
Lset40 = Ltmp157-Leh_func_begin28
	.long	Lset40
Lset41 = Leh_func_end28-Ltmp157
	.long	Lset41
	.long	0
	.byte	0
	.byte	1
	.byte	0
	.long	0
	.align	4

	.def	 __ZNK5sc_dt12sc_uint_basecvyEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK5sc_dt12sc_uint_basecvyEv,"xr"
	.linkonce discard
	.globl	__ZNK5sc_dt12sc_uint_basecvyEv
	.align	16, 0x90
__ZNK5sc_dt12sc_uint_basecvyEv:
Lllvm$workaround$fake$stub$__ZNK5sc_dt12sc_uint_basecvyEv:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	movl	8(%eax), %ecx
	movl	12(%eax), %edx
	movl	%ecx, %eax
	popl	%ecx
	ret

	.def	 __ZN5sc_dt7sc_uintILi18EEaSEd;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi18EEaSEd,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi18EEaSEd
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi18EEaSEd:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi18EEaSEd:
	.cfi_startproc
	pushl	%ebp
Ltmp169:
	.cfi_def_cfa_offset 8
Ltmp170:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp171:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	subl	$40, %esp
	movsd	12(%ebp), %xmm0
	movl	8(%ebp), %eax
	movl	%eax, 36(%esp)
	movsd	%xmm0, 24(%esp)
	movl	36(%esp), %eax
	movl	%eax, %ecx
	movsd	24(%esp), %xmm0
	movl	%ecx, (%esp)
	movsd	%xmm0, 4(%esp)
	movl	%eax, 20(%esp)
	calll	__ZN5sc_dt12sc_uint_baseaSEd
	movl	20(%esp), %ecx
	movl	%eax, 16(%esp)
	movl	%ecx, %eax
	movl	%ebp, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi18EEpLEy;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi18EEpLEy,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi18EEpLEy
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi18EEpLEy:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi18EEpLEy:
	.cfi_startproc
	pushl	%ebp
Ltmp175:
	.cfi_def_cfa_offset 8
Ltmp176:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp177:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	pushl	%edi
	pushl	%esi
	subl	$40, %esp
Ltmp178:
	.cfi_offset %esi, -16
Ltmp179:
	.cfi_offset %edi, -12
	movl	16(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	%eax, 28(%esp)
	movl	%ecx, 24(%esp)
	movl	36(%esp), %edx
	movl	%edx, %esi
	movl	%esp, %edi
	movl	%eax, 8(%edi)
	movl	%ecx, 4(%edi)
	movl	%edx, (%edi)
	movl	%esi, 20(%esp)
	calll	__ZN5sc_dt12sc_uint_basepLEy
	movl	20(%esp), %ecx
	movl	%eax, 16(%esp)
	movl	%ecx, %eax
	addl	$40, %esp
	popl	%esi
	popl	%edi
	movl	%ebp, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv,"xr"
	.linkonce discard
	.globl	__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv
	.align	16, 0x90
__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv:
Lllvm$workaround$fake$stub$__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi8EEEEEEptEv:
	.cfi_startproc
	pushl	%ebp
Ltmp182:
	.cfi_def_cfa_offset 8
Ltmp183:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp184:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, 48(%eax)
	movl	%eax, -8(%ebp)
	jne	LBB32_2
	leal	__ZN7sc_core13SC_ID_GET_IF_E, %eax
	leal	L_.str15, %ecx
	movl	-8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, 8(%esp)
	calll	__ZNK7sc_core12sc_port_base12report_errorEPKcS2_
LBB32_2:
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi8EEC1Ey;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi8EEC1Ey,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi8EEC1Ey
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi8EEC1Ey:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi8EEC1Ey:
	.cfi_startproc
	pushl	%ebp
Ltmp188:
	.cfi_def_cfa_offset 8
Ltmp189:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp190:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	pushl	%esi
	subl	$28, %esp
Ltmp191:
	.cfi_offset %esi, -12
	movl	16(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 20(%esp)
	movl	%ecx, 16(%esp)
	movl	24(%esp), %edx
	movl	%esp, %esi
	movl	%eax, 8(%esi)
	movl	%ecx, 4(%esi)
	movl	%edx, (%esi)
	calll	__ZN5sc_dt7sc_uintILi8EEC2Ey
	addl	$28, %esp
	popl	%esi
	movl	%ebp, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi8EED1Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi8EED1Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi8EED1Ev
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi8EED1Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi8EED1Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp194:
	.cfi_def_cfa_offset 8
Ltmp195:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp196:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN5sc_dt7sc_uintILi8EED2Ev
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core18sc_process_monitorD1Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core18sc_process_monitorD1Ev,"xr"
	.linkonce discard
	.globl	__ZN7sc_core18sc_process_monitorD1Ev
	.align	16, 0x90
__ZN7sc_core18sc_process_monitorD1Ev:
Lllvm$workaround$fake$stub$__ZN7sc_core18sc_process_monitorD1Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp199:
	.cfi_def_cfa_offset 8
Ltmp200:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp201:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN7sc_core18sc_process_monitorD2Ev
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN7sc_core18sc_process_monitorD0Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core18sc_process_monitorD0Ev,"xr"
	.linkonce discard
	.globl	__ZN7sc_core18sc_process_monitorD0Ev
	.align	16, 0x90
__ZN7sc_core18sc_process_monitorD0Ev:
Lllvm$workaround$fake$stub$__ZN7sc_core18sc_process_monitorD0Ev:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin36:
	.cfi_lsda 0, Lexception36
	pushl	%ebp
Ltmp207:
	.cfi_def_cfa_offset 8
Ltmp208:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp209:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	%eax, %ecx
Ltmp202:
	movl	%esp, %edx
	movl	%eax, (%edx)
	movl	%ecx, -16(%ebp)
	calll	__ZN7sc_core18sc_process_monitorD1Ev
Ltmp203:
	jmp	LBB36_1
LBB36_1:
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZdlPv
	addl	$20, %esp
	popl	%ebp
	ret
LBB36_2:
Ltmp204:
	movl	%eax, -8(%ebp)
	movl	%edx, -12(%ebp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZdlPv
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end36:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table36:
Lexception36:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset42 = Ltmp202-Leh_func_begin36
	.long	Lset42
Lset43 = Ltmp203-Ltmp202
	.long	Lset43
Lset44 = Ltmp204-Leh_func_begin36
	.long	Lset44
	.byte	0
Lset45 = Ltmp203-Leh_func_begin36
	.long	Lset45
Lset46 = Leh_func_end36-Ltmp203
	.long	Lset46
	.long	0
	.byte	0
	.align	4

	.def	 ___cxx_global_var_init14;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
___cxx_global_var_init14:
	.cfi_startproc
	pushl	%ebp
Ltmp212:
	.cfi_def_cfa_offset 8
Ltmp213:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp214:
	.cfi_def_cfa_register %ebp
	cmpb	$0, __ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE
	jne	LBB37_2
	calll	__ZN3tlm18tlm_extension_base18register_extensionEv
	movl	%eax, __ZN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE
	movl	$0, __ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE+4
	movl	$1, __ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE
LBB37_2:
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN3tlm18tlm_extension_base18register_extensionEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm18tlm_extension_base18register_extensionEv,"xr"
	.linkonce discard
	.globl	__ZN3tlm18tlm_extension_base18register_extensionEv
	.align	16, 0x90
__ZN3tlm18tlm_extension_base18register_extensionEv:
Lllvm$workaround$fake$stub$__ZN3tlm18tlm_extension_base18register_extensionEv:
	.cfi_startproc
	pushl	%ebp
Ltmp217:
	.cfi_def_cfa_offset 8
Ltmp218:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp219:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	$1, %eax
	movl	$1, (%esp)
	movl	%eax, -4(%ebp)
	calll	__ZN3tlm18max_num_extensionsEb
	subl	$1, %eax
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi8EEC2Ey;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi8EEC2Ey,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi8EEC2Ey
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi8EEC2Ey:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi8EEC2Ey:
	.cfi_startproc
	pushl	%ebp
Ltmp223:
	.cfi_def_cfa_offset 8
Ltmp224:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp225:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	pushl	%edi
	pushl	%esi
	subl	$40, %esp
Ltmp226:
	.cfi_offset %esi, -16
Ltmp227:
	.cfi_offset %edi, -12
	movl	16(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	%eax, 28(%esp)
	movl	%ecx, 24(%esp)
	movl	36(%esp), %edx
	movl	%edx, %esi
	movl	%esp, %edi
	movl	%eax, 8(%edi)
	movl	%ecx, 4(%edi)
	movl	%edx, (%edi)
	movl	$8, 12(%edi)
	movl	%esi, 20(%esp)
	calll	__ZN5sc_dt12sc_uint_baseC2Eyi
	leal	__ZTVN5sc_dt7sc_uintILi8EEE, %eax
	addl	$8, %eax
	movl	20(%esp), %ecx
	movl	%eax, (%ecx)
	addl	$40, %esp
	popl	%esi
	popl	%edi
	movl	%ebp, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt12sc_uint_baseC2Eyi;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_baseC2Eyi,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_baseC2Eyi
	.align	16, 0x90
__ZN5sc_dt12sc_uint_baseC2Eyi:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_baseC2Eyi:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin40:
	.cfi_lsda 0, Lexception40
	pushl	%ebp
Ltmp239:
	.cfi_def_cfa_offset 8
Ltmp240:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp241:
	.cfi_def_cfa_register %ebp
	andl	$-8, %esp
	pushl	%esi
	subl	$44, %esp
Ltmp242:
	.cfi_offset %esi, -12
	movl	16(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	20(%ebp), %edx
	movl	8(%ebp), %esi
	movl	%esi, 40(%esp)
	movl	%eax, 36(%esp)
	movl	%ecx, 32(%esp)
	movl	%edx, 28(%esp)
	movl	40(%esp), %eax
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	movl	%eax, 16(%esp)
	calll	__ZN5sc_dt13sc_value_baseC2Ev
	movl	16(%esp), %eax
	movl	$__ZTVN5sc_dt12sc_uint_baseE+8, (%eax)
	movsd	32(%esp), %xmm0
	movsd	%xmm0, 8(%eax)
	movl	28(%esp), %ecx
	movl	%ecx, 16(%eax)
	movl	$64, %edx
	subl	%ecx, %edx
	movl	%edx, 20(%eax)
Ltmp228:
	movl	%esp, %ecx
	movl	%eax, (%ecx)
	calll	__ZNK5sc_dt12sc_uint_base12check_lengthEv
Ltmp229:
	jmp	LBB40_1
LBB40_1:
Ltmp230:
	movl	%esp, %eax
	movl	16(%esp), %ecx
	movl	%ecx, (%eax)
	calll	__ZN5sc_dt12sc_uint_base11extend_signEv
Ltmp231:
	jmp	LBB40_2
LBB40_2:
	addl	$44, %esp
	popl	%esi
	movl	%ebp, %esp
	popl	%ebp
	ret
LBB40_3:
Ltmp232:
	movl	%eax, 24(%esp)
	movl	%edx, 20(%esp)
Ltmp233:
	movl	%esp, %eax
	movl	16(%esp), %edx
	movl	%edx, (%eax)
	calll	__ZN5sc_dt13sc_value_baseD2Ev
Ltmp234:
	jmp	LBB40_4
LBB40_4:
	jmp	LBB40_5
LBB40_5:
	movl	24(%esp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
LBB40_6:
Ltmp235:
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	calll	__ZSt9terminatev
	.cfi_endproc
Leh_func_end40:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table40:
Lexception40:
	.byte	255
	.byte	0
	.asciz	 "\257\200"
	.byte	3
	.byte	39
Lset47 = Ltmp228-Leh_func_begin40
	.long	Lset47
Lset48 = Ltmp231-Ltmp228
	.long	Lset48
Lset49 = Ltmp232-Leh_func_begin40
	.long	Lset49
	.byte	0
Lset50 = Ltmp233-Leh_func_begin40
	.long	Lset50
Lset51 = Ltmp234-Ltmp233
	.long	Lset51
Lset52 = Ltmp235-Leh_func_begin40
	.long	Lset52
	.byte	1
Lset53 = Ltmp234-Leh_func_begin40
	.long	Lset53
Lset54 = Leh_func_end40-Ltmp234
	.long	Lset54
	.long	0
	.byte	0
	.byte	1
	.byte	0
	.long	0
	.align	4

	.def	 __ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,"xr"
	.linkonce discard
	.globl	__ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.align	16, 0x90
__ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev:
Lllvm$workaround$fake$stub$__ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	movl	8(%eax), %ecx
	movl	12(%eax), %edx
	movl	%ecx, %eax
	popl	%ecx
	ret

	.def	 __ZNK5sc_dt12sc_uint_base13concat_lengthEPb;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK5sc_dt12sc_uint_base13concat_lengthEPb,"xr"
	.linkonce discard
	.globl	__ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.align	16, 0x90
__ZNK5sc_dt12sc_uint_base13concat_lengthEPb:
Lllvm$workaround$fake$stub$__ZNK5sc_dt12sc_uint_base13concat_lengthEPb:
	.cfi_startproc
	pushl	%ebp
Ltmp245:
	.cfi_def_cfa_offset 8
Ltmp246:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp247:
	.cfi_def_cfa_register %ebp
	subl	$16, %esp
	movl	12(%ebp), %eax
	movl	8(%ebp), %ecx
	movl	%ecx, -4(%ebp)
	movl	%eax, -8(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, -8(%ebp)
	movl	%eax, -12(%ebp)
	je	LBB42_2
	movl	-8(%ebp), %eax
	movb	$0, (%eax)
LBB42_2:
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZNK5sc_dt12sc_uint_base6lengthEv
	addl	$16, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt7sc_uintILi8EED0Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi8EED0Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi8EED0Ev
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi8EED0Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi8EED0Ev:
	.cfi_startproc
	.cfi_personality 0, ___gxx_personality_v0
Leh_func_begin43:
	.cfi_lsda 0, Lexception43
	pushl	%ebp
Ltmp253:
	.cfi_def_cfa_offset 8
Ltmp254:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp255:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	%eax, %ecx
Ltmp248:
	movl	%esp, %edx
	movl	%eax, (%edx)
	movl	%ecx, -16(%ebp)
	calll	__ZN5sc_dt7sc_uintILi8EED1Ev
Ltmp249:
	jmp	LBB43_1
LBB43_1:
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZdlPv
	addl	$20, %esp
	popl	%ebp
	ret
LBB43_2:
Ltmp250:
	movl	%eax, -8(%ebp)
	movl	%edx, -12(%ebp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZdlPv
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	calll	__Unwind_Resume
	.cfi_endproc
Leh_func_end43:
	.section	.gcc_except_table,"r"
	.align	4
GCC_except_table43:
Lexception43:
	.byte	255
	.byte	0
	.asciz	 "\234"
	.byte	3
	.byte	26
Lset55 = Ltmp248-Leh_func_begin43
	.long	Lset55
Lset56 = Ltmp249-Ltmp248
	.long	Lset56
Lset57 = Ltmp250-Leh_func_begin43
	.long	Lset57
	.byte	0
Lset58 = Ltmp249-Leh_func_begin43
	.long	Lset58
Lset59 = Leh_func_end43-Ltmp249
	.long	Lset59
	.long	0
	.byte	0
	.align	4

	.def	 __ZNK5sc_dt12sc_uint_base6lengthEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK5sc_dt12sc_uint_base6lengthEv,"xr"
	.linkonce discard
	.globl	__ZNK5sc_dt12sc_uint_base6lengthEv
	.align	16, 0x90
__ZNK5sc_dt12sc_uint_base6lengthEv:
Lllvm$workaround$fake$stub$__ZNK5sc_dt12sc_uint_base6lengthEv:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	movl	(%esp), %eax
	movl	16(%eax), %eax
	popl	%edx
	ret

	.def	 __ZN5sc_dt13sc_value_baseC2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt13sc_value_baseC2Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt13sc_value_baseC2Ev
	.align	16, 0x90
__ZN5sc_dt13sc_value_baseC2Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt13sc_value_baseC2Ev:
	pushl	%eax
	movl	8(%esp), %eax
	leal	__ZTVN5sc_dt13sc_value_baseE, %ecx
	addl	$8, %ecx
	movl	%eax, (%esp)
	movl	(%esp), %eax
	movl	%ecx, (%eax)
	popl	%eax
	ret

	.def	 __ZNK5sc_dt12sc_uint_base12check_lengthEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK5sc_dt12sc_uint_base12check_lengthEv,"xr"
	.linkonce discard
	.globl	__ZNK5sc_dt12sc_uint_base12check_lengthEv
	.align	16, 0x90
__ZNK5sc_dt12sc_uint_base12check_lengthEv:
Lllvm$workaround$fake$stub$__ZNK5sc_dt12sc_uint_base12check_lengthEv:
	.cfi_startproc
	pushl	%ebp
Ltmp258:
	.cfi_def_cfa_offset 8
Ltmp259:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp260:
	.cfi_def_cfa_register %ebp
	subl	$12, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, 16(%eax)
	movl	%eax, -8(%ebp)
	jle	LBB46_2
	movl	-8(%ebp), %eax
	cmpl	$64, 16(%eax)
	jle	LBB46_3
LBB46_2:
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZNK5sc_dt12sc_uint_base14invalid_lengthEv
LBB46_3:
	addl	$12, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt12sc_uint_base11extend_signEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_base11extend_signEv,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_base11extend_signEv
	.align	16, 0x90
__ZN5sc_dt12sc_uint_base11extend_signEv:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_base11extend_signEv:
	pushl	%ebp
	pushl	%ebx
	pushl	%edi
	pushl	%esi
	subl	$8, %esp
	movl	28(%esp), %eax
	movl	%eax, 4(%esp)
	movl	__ZN5sc_dt9UINT_ZEROE+4, %ecx
	notl	%ecx
	movl	__ZN5sc_dt9UINT_ZEROE, %edx
	notl	%edx
	movb	20(%eax), %bl
	movl	%ecx, (%esp)
	movb	%bl, %cl
	movl	(%esp), %esi
	shrdl	%cl, %esi, %edx
	movb	%bl, %cl
	shrl	%cl, %esi
	xorl	%edi, %edi
	testb	$32, %bl
	cmovnel	%esi, %edx
	cmovnel	%edi, %esi
	movl	8(%eax), %edi
	movl	12(%eax), %ebp
	andl	%esi, %ebp
	movl	%ebp, 12(%eax)
	andl	%edx, %edi
	movl	%edi, 8(%eax)
	addl	$8, %esp
	popl	%esi
	popl	%edi
	popl	%ebx
	popl	%ebp
	ret

	.def	 __ZN5sc_dt13sc_value_baseD2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt13sc_value_baseD2Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt13sc_value_baseD2Ev
	.align	16, 0x90
__ZN5sc_dt13sc_value_baseD2Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt13sc_value_baseD2Ev:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	popl	%eax
	ret

	.def	 __ZN5sc_dt12sc_uint_basepLEy;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_basepLEy,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_basepLEy
	.align	16, 0x90
__ZN5sc_dt12sc_uint_basepLEy:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_basepLEy:
	pushl	%ebp
	movl	%esp, %ebp
	andl	$-8, %esp
	pushl	%edi
	pushl	%esi
	subl	$24, %esp
	movl	16(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	20(%esp), %edx
	movl	8(%edx), %esi
	movl	12(%edx), %edi
	addl	%ecx, %esi
	movl	%esi, 8(%edx)
	adcl	%eax, %edi
	movl	%edi, 12(%edx)
	movl	%edx, (%esp)
	movl	%edx, 4(%esp)
	calll	__ZN5sc_dt12sc_uint_base11extend_signEv
	movl	4(%esp), %eax
	addl	$24, %esp
	popl	%esi
	popl	%edi
	movl	%ebp, %esp
	popl	%ebp
	ret

	.def	 __ZN5sc_dt12sc_uint_baseaSEd;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_baseaSEd,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_baseaSEd
	.align	16, 0x90
__ZN5sc_dt12sc_uint_baseaSEd:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_baseaSEd:
	pushl	%ebp
	movl	%esp, %ebp
	andl	$-8, %esp
	subl	$32, %esp
	movsd	12(%ebp), %xmm0
	movl	8(%ebp), %eax
	movl	%eax, 28(%esp)
	movsd	%xmm0, 16(%esp)
	movl	28(%esp), %eax
	movl	%esp, %ecx
	movsd	%xmm0, (%ecx)
	movl	%eax, 12(%esp)
	calll	___fixunsdfdi
	movl	12(%esp), %ecx
	movl	%edx, 12(%ecx)
	movl	%eax, 8(%ecx)
	movl	%ecx, (%esp)
	calll	__ZN5sc_dt12sc_uint_base11extend_signEv
	movl	12(%esp), %eax
	movl	%ebp, %esp
	popl	%ebp
	ret

	.def	 __ZN5sc_dt12sc_uint_baseaSERKS0_;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_baseaSERKS0_,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_baseaSERKS0_
	.align	16, 0x90
__ZN5sc_dt12sc_uint_baseaSERKS0_:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_baseaSERKS0_:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$16, %esp
	movl	12(%ebp), %eax
	movl	8(%ebp), %ecx
	movl	%ecx, -4(%ebp)
	movl	%eax, -8(%ebp)
	movl	-4(%ebp), %ecx
	movsd	8(%eax), %xmm0
	movsd	%xmm0, 8(%ecx)
	movl	%ecx, (%esp)
	movl	%ecx, -12(%ebp)
	calll	__ZN5sc_dt12sc_uint_base11extend_signEv
	movl	-12(%ebp), %eax
	addl	$16, %esp
	popl	%ebp
	ret

	.def	 __ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv,"xr"
	.linkonce discard
	.globl	__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	.align	16, 0x90
__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv:
Lllvm$workaround$fake$stub$__ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv:
	.cfi_startproc
	pushl	%ebp
Ltmp263:
	.cfi_def_cfa_offset 8
Ltmp264:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp265:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, 48(%eax)
	movl	%eax, -8(%ebp)
	jne	LBB52_2
	leal	__ZN7sc_core13SC_ID_GET_IF_E, %eax
	leal	L_.str15, %ecx
	movl	-8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, 8(%esp)
	calll	__ZNK7sc_core12sc_port_base12report_errorEPKcS2_
LBB52_2:
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN3tlm18max_num_extensionsEb;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm18max_num_extensionsEb,"xr"
	.linkonce discard
	.globl	__ZN3tlm18max_num_extensionsEb
	.align	16, 0x90
__ZN3tlm18max_num_extensionsEb:
Lllvm$workaround$fake$stub$__ZN3tlm18max_num_extensionsEb:
	subl	$1, %esp
	movb	5(%esp), %al
	andb	$1, %al
	movb	%al, (%esp)
	testb	$1, (%esp)
	jne	LBB53_1
	jmp	LBB53_2
LBB53_1:
	movl	__ZZN3tlm18max_num_extensionsEbE7max_num, %eax
	addl	$1, %eax
	movl	%eax, __ZZN3tlm18max_num_extensionsEbE7max_num
LBB53_2:
	movl	__ZZN3tlm18max_num_extensionsEbE7max_num, %eax
	addl	$1, %esp
	ret

	.def	 __ZN7sc_core18sc_process_monitorD2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN7sc_core18sc_process_monitorD2Ev,"xr"
	.linkonce discard
	.globl	__ZN7sc_core18sc_process_monitorD2Ev
	.align	16, 0x90
__ZN7sc_core18sc_process_monitorD2Ev:
Lllvm$workaround$fake$stub$__ZN7sc_core18sc_process_monitorD2Ev:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	popl	%eax
	ret

	.def	 __ZN5sc_dt7sc_uintILi8EED2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt7sc_uintILi8EED2Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt7sc_uintILi8EED2Ev
	.align	16, 0x90
__ZN5sc_dt7sc_uintILi8EED2Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt7sc_uintILi8EED2Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp268:
	.cfi_def_cfa_offset 8
Ltmp269:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp270:
	.cfi_def_cfa_register %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN5sc_dt12sc_uint_baseD2Ev
	addl	$8, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN5sc_dt12sc_uint_baseD2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN5sc_dt12sc_uint_baseD2Ev,"xr"
	.linkonce discard
	.globl	__ZN5sc_dt12sc_uint_baseD2Ev
	.align	16, 0x90
__ZN5sc_dt12sc_uint_baseD2Ev:
Lllvm$workaround$fake$stub$__ZN5sc_dt12sc_uint_baseD2Ev:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$8, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	calll	__ZN5sc_dt13sc_value_baseD2Ev
	addl	$8, %esp
	popl	%ebp
	ret

	.def	 __ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,"xr"
	.linkonce discard
	.globl	__ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.align	16, 0x90
__ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv:
Lllvm$workaround$fake$stub$__ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv:
	.cfi_startproc
	pushl	%ebp
Ltmp273:
	.cfi_def_cfa_offset 8
Ltmp274:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp275:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	cmpl	$0, 48(%eax)
	movl	%eax, -8(%ebp)
	jne	LBB57_2
	leal	__ZN7sc_core13SC_ID_GET_IF_E, %eax
	leal	L_.str15, %ecx
	movl	-8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, 8(%esp)
	calll	__ZNK7sc_core12sc_port_base12report_errorEPKcS2_
LBB57_2:
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZNK7sc_core9sc_object10simcontextEv;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZNK7sc_core9sc_object10simcontextEv,"xr"
	.linkonce discard
	.globl	__ZNK7sc_core9sc_object10simcontextEv
	.align	16, 0x90
__ZNK7sc_core9sc_object10simcontextEv:
Lllvm$workaround$fake$stub$__ZNK7sc_core9sc_object10simcontextEv:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	movl	(%esp), %eax
	movl	40(%eax), %eax
	popl	%edx
	ret

	.def	 __ZN3tlm23tlm_endian_context_poolD2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm23tlm_endian_context_poolD2Ev,"xr"
	.linkonce discard
	.globl	__ZN3tlm23tlm_endian_context_poolD2Ev
	.align	16, 0x90
__ZN3tlm23tlm_endian_context_poolD2Ev:
Lllvm$workaround$fake$stub$__ZN3tlm23tlm_endian_context_poolD2Ev:
	.cfi_startproc
	pushl	%ebp
Ltmp278:
	.cfi_def_cfa_offset 8
Ltmp279:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp280:
	.cfi_def_cfa_register %ebp
	subl	$20, %esp
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, -12(%ebp)
LBB59_1:
	movl	-12(%ebp), %eax
	cmpl	$0, (%eax)
	je	LBB59_5
	movl	-12(%ebp), %eax
	movl	(%eax), %ecx
	movl	64(%ecx), %ecx
	movl	%ecx, -8(%ebp)
	movl	(%eax), %ecx
	cmpl	$0, %ecx
	movl	%ecx, -16(%ebp)
	je	LBB59_4
	movl	-16(%ebp), %eax
	movl	(%eax), %ecx
	movl	%eax, (%esp)
	calll	*16(%ecx)
LBB59_4:
	movl	-8(%ebp), %eax
	movl	-12(%ebp), %ecx
	movl	%eax, (%ecx)
	jmp	LBB59_1
LBB59_5:
	addl	$20, %esp
	popl	%ebp
	ret
	.cfi_endproc

	.def	 __ZN3tlm23tlm_endian_context_poolC2Ev;
	.scl	2;
	.type	32;
	.endef
	.section	.text$_ZN3tlm23tlm_endian_context_poolC2Ev,"xr"
	.linkonce discard
	.globl	__ZN3tlm23tlm_endian_context_poolC2Ev
	.align	16, 0x90
__ZN3tlm23tlm_endian_context_poolC2Ev:
Lllvm$workaround$fake$stub$__ZN3tlm23tlm_endian_context_poolC2Ev:
	pushl	%eax
	movl	8(%esp), %eax
	movl	%eax, (%esp)
	movl	(%esp), %eax
	movl	$0, (%eax)
	popl	%eax
	ret

	.def	 __GLOBAL__I_a;
	.scl	3;
	.type	32;
	.endef
	.text
	.align	16, 0x90
__GLOBAL__I_a:
	.cfi_startproc
	pushl	%ebp
Ltmp283:
	.cfi_def_cfa_offset 8
Ltmp284:
	.cfi_offset %ebp, -8
	movl	%esp, %ebp
Ltmp285:
	.cfi_def_cfa_register %ebp
	calll	___cxx_global_var_init
	calll	___cxx_global_var_init1
	calll	___cxx_global_var_init2
	calll	___cxx_global_var_init3
	calll	___cxx_global_var_init5
	calll	___cxx_global_var_init7
	calll	___cxx_global_var_init9
	calll	___cxx_global_var_init11
	calll	___cxx_global_var_init13
	calll	___cxx_global_var_init14
	popl	%ebp
	ret
	.cfi_endproc

	.lcomm	__ZStL8__ioinit,1
	.data
__ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE:
	.byte	1

	.lcomm	__ZN7sc_coreL17api_version_checkE,1
	.lcomm	__ZN3tlmL18tlm_version_stringE,4,4
L_.str:
	.asciz	 "2.0.2_-ASI"

	.lcomm	__ZN3tlmL22tlm_version_originatorE,4,4
L_.str4:
	.asciz	 "ASI"

	.lcomm	__ZN3tlmL22tlm_version_prereleaseE,4,4
L_.str6:
	.zero	1

	.lcomm	__ZN3tlmL24tlm_version_release_dateE,4,4
L_.str8:
	.asciz	 "20120511"

	.lcomm	__ZN3tlmL20tlm_copyright_stringE,4,4
L_.str10:
	.asciz	 "        Copyright (c) 1996-2012 by all Contributors\n                    ALL RIGHTS RESERVED"

	.lcomm	__ZN3tlmL20tlm_version_string_2E,4,4
L_.str12:
	.asciz	 "             TLM 2.0.2 --- 2012-05-11"

	.lcomm	__ZN3tlmL30global_tlm_endian_context_poolE,4,4
	.align	4
__ZL3b_a:
	.long	90
	.long	125
	.long	118
	.long	106
	.long	90
	.long	71
	.long	48
	.long	24
	.long	90
	.long	106
	.long	48
	.long	4294967272
	.long	4294967206
	.long	4294967171
	.long	4294967178
	.long	4294967225
	.long	90
	.long	71
	.long	4294967248
	.long	4294967171
	.long	4294967206
	.long	24
	.long	118
	.long	106
	.long	90
	.long	24
	.long	4294967178
	.long	4294967225
	.long	90
	.long	106
	.long	4294967248
	.long	4294967171
	.long	90
	.long	4294967272
	.long	4294967178
	.long	71
	.long	90
	.long	4294967190
	.long	4294967248
	.long	125
	.long	90
	.long	4294967225
	.long	4294967248
	.long	125
	.long	4294967206
	.long	4294967272
	.long	118
	.long	4294967190
	.long	90
	.long	4294967190
	.long	48
	.long	24
	.long	4294967206
	.long	125
	.long	4294967178
	.long	71
	.long	90
	.long	4294967171
	.long	118
	.long	4294967190
	.long	90
	.long	4294967225
	.long	48
	.long	4294967272

	.align	4
__ZL1b:
	.long	90
	.long	90
	.long	90
	.long	90
	.long	90
	.long	90
	.long	90
	.long	90
	.long	125
	.long	106
	.long	71
	.long	24
	.long	4294967272
	.long	4294967225
	.long	4294967190
	.long	4294967171
	.long	118
	.long	48
	.long	4294967248
	.long	4294967178
	.long	4294967178
	.long	4294967248
	.long	48
	.long	118
	.long	106
	.long	4294967272
	.long	4294967171
	.long	4294967225
	.long	71
	.long	125
	.long	24
	.long	4294967190
	.long	90
	.long	4294967206
	.long	4294967206
	.long	90
	.long	90
	.long	4294967206
	.long	4294967206
	.long	90
	.long	71
	.long	4294967171
	.long	24
	.long	106
	.long	4294967190
	.long	4294967272
	.long	125
	.long	4294967225
	.long	48
	.long	4294967178
	.long	118
	.long	4294967248
	.long	4294967248
	.long	118
	.long	4294967178
	.long	48
	.long	24
	.long	4294967225
	.long	106
	.long	4294967171
	.long	125
	.long	4294967190
	.long	71
	.long	4294967272

	.section	.rdata$_ZTVN7sc_core18sc_process_monitorE,"r"
	.linkonce discard
	.globl	__ZTVN7sc_core18sc_process_monitorE
	.align	16
__ZTVN7sc_core18sc_process_monitorE:
	.long	0
	.long	__ZTIN7sc_core18sc_process_monitorE
	.long	__ZN7sc_core18sc_process_monitorD1Ev
	.long	__ZN7sc_core18sc_process_monitorD0Ev
	.long	__ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi

	.section	.rdata$_ZTSN7sc_core18sc_process_monitorE,"r"
	.linkonce discard
	.globl	__ZTSN7sc_core18sc_process_monitorE
	.align	16
__ZTSN7sc_core18sc_process_monitorE:
	.asciz	 "N7sc_core18sc_process_monitorE"

	.section	.rdata$_ZTIN7sc_core18sc_process_monitorE,"r"
	.linkonce discard
	.globl	__ZTIN7sc_core18sc_process_monitorE
	.align	8
__ZTIN7sc_core18sc_process_monitorE:
	.long	__ZTVN10__cxxabiv117__class_type_infoE+8
	.long	__ZTSN7sc_core18sc_process_monitorE

	.section	.bss$_ZN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE,"w"
	.linkonce discard
	.globl	__ZN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE
	.align	4
__ZN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE:
	.long	0

	.section	.bss$_ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE,"w"
	.linkonce discard
	.globl	__ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE
	.align	8
__ZGVN3tlm13tlm_extensionINS_18tlm_endian_contextEE2IDE:
	.quad	0

	.section	.rdata$_ZTVN5sc_dt7sc_uintILi8EEE,"r"
	.linkonce discard
	.globl	__ZTVN5sc_dt7sc_uintILi8EEE
	.align	16
__ZTVN5sc_dt7sc_uintILi8EEE:
	.long	0
	.long	__ZTIN5sc_dt7sc_uintILi8EEE
	.long	__ZN5sc_dt13sc_value_base17concat_clear_dataEb
	.long	__ZNK5sc_dt12sc_uint_base15concat_get_ctrlEPji
	.long	__ZNK5sc_dt12sc_uint_base15concat_get_dataEPji
	.long	__ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.long	__ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.long	__ZN5sc_dt12sc_uint_base10concat_setExi
	.long	__ZN5sc_dt12sc_uint_base10concat_setERKNS_9sc_signedEi
	.long	__ZN5sc_dt12sc_uint_base10concat_setERKNS_11sc_unsignedEi
	.long	__ZN5sc_dt12sc_uint_base10concat_setEyi
	.long	__ZN5sc_dt7sc_uintILi8EED1Ev
	.long	__ZN5sc_dt7sc_uintILi8EED0Ev

	.section	.rdata$_ZTSN5sc_dt7sc_uintILi8EEE,"r"
	.linkonce discard
	.globl	__ZTSN5sc_dt7sc_uintILi8EEE
	.align	16
__ZTSN5sc_dt7sc_uintILi8EEE:
	.asciz	 "N5sc_dt7sc_uintILi8EEE"

	.section	.rdata$_ZTIN5sc_dt7sc_uintILi8EEE,"r"
	.linkonce discard
	.globl	__ZTIN5sc_dt7sc_uintILi8EEE
	.align	8
__ZTIN5sc_dt7sc_uintILi8EEE:
	.long	__ZTVN10__cxxabiv120__si_class_type_infoE+8
	.long	__ZTSN5sc_dt7sc_uintILi8EEE
	.long	__ZTIN5sc_dt12sc_uint_baseE

	.data
L_.str15:
	.asciz	 "port is not bound"

	.section	.bss$_ZZN3tlm18max_num_extensionsEbE7max_num,"w"
	.linkonce discard
	.globl	__ZZN3tlm18max_num_extensionsEbE7max_num
	.align	4
__ZZN3tlm18max_num_extensionsEbE7max_num:
	.long	0

	.section	.ctors,"w"
	.align	4
	.long	__GLOBAL__I_a

