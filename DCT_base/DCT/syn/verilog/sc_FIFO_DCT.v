// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sc_FIFO_DCT,hls_ip_2016_3,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35ticpg236-1l,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.463000,HLS_SYN_LAT=857,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=2,HLS_SYN_FF=242,HLS_SYN_LUT=314}" *)

module sc_FIFO_DCT (
        clock,
        reset,
        sync,
        data_ok,
        done,
        error,
        din,
        dout
);

parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv2_0 = 2'b00;

input   clock;
input   reset;
input   sync;
output   data_ok;
output   done;
output   error;
input  [7:0] din;
output  [7:0] dout;

reg data_ok;
reg done = 1'b0;
reg error;
reg[7:0] dout;

reg   [5:0] sc_FIFO_DCT_mA_V_address0;
reg    sc_FIFO_DCT_mA_V_ce0;
wire   [17:0] sc_FIFO_DCT_mA_V_q0;
wire   [0:0] sc_FIFO_DCT_ssdm_s_load_fu_146_p1;
wire   [1:0] ap_CS_fsm;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_data_ok;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_done;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld;
wire   [7:0] grp_sc_FIFO_DCT_Prc2_fu_86_dout;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_s_working;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld;
wire   [5:0] grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0;
wire   [5:0] grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0;
wire    grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0;
wire   [17:0] grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_error;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_s_start;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_s_working;
wire   [5:0] grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0;
wire    grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0;
wire   [17:0] grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0;
wire   [0:0] ap_CS_fsm_state2;
reg   [0:0] s_start;
reg   [0:0] s_working;

sc_FIFO_DCT_sc_FIeOg #(
    .DataWidth( 18 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
sc_FIFO_DCT_mA_V_U(
    .clk(clock),
    .reset(reset),
    .address0(sc_FIFO_DCT_mA_V_address0),
    .ce0(sc_FIFO_DCT_mA_V_ce0),
    .we0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0),
    .d0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0),
    .q0(sc_FIFO_DCT_mA_V_q0)
);

sc_FIFO_DCT_sc_FIfYi #(
    .DataWidth( 18 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
sc_FIFO_DCT_mB_V_U(
    .clk(clock),
    .reset(reset),
    .address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0),
    .ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0),
    .we0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0),
    .d0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0)
);

sc_FIFO_DCT_Prc2 grp_sc_FIFO_DCT_Prc2_fu_86(
    .ap_clk(clock),
    .ap_rst(reset),
    .data_ok(grp_sc_FIFO_DCT_Prc2_fu_86_data_ok),
    .data_ok_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld),
    .done(grp_sc_FIFO_DCT_Prc2_fu_86_done),
    .done_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld),
    .dout(grp_sc_FIFO_DCT_Prc2_fu_86_dout),
    .dout_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld),
    .s_start_i(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i),
    .s_start_o(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o),
    .s_start_o_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld),
    .s_working(grp_sc_FIFO_DCT_Prc2_fu_86_s_working),
    .s_working_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld),
    .sc_FIFO_DCT_mA_V_address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0),
    .sc_FIFO_DCT_mA_V_ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0),
    .sc_FIFO_DCT_mA_V_q0(sc_FIFO_DCT_mA_V_q0),
    .sc_FIFO_DCT_mB_V_address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0),
    .sc_FIFO_DCT_mB_V_ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0),
    .sc_FIFO_DCT_mB_V_we0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0),
    .sc_FIFO_DCT_mB_V_d0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0)
);

sc_FIFO_DCT_Prc1 grp_sc_FIFO_DCT_Prc1_fu_118(
    .ap_clk(clock),
    .ap_rst(reset),
    .sync(sync),
    .error(grp_sc_FIFO_DCT_Prc1_fu_118_error),
    .error_ap_vld(grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld),
    .din(din),
    .s_start(grp_sc_FIFO_DCT_Prc1_fu_118_s_start),
    .s_start_ap_vld(grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld),
    .s_working(grp_sc_FIFO_DCT_Prc1_fu_118_s_working),
    .sc_FIFO_DCT_mA_V_address0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0),
    .sc_FIFO_DCT_mA_V_ce0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0),
    .sc_FIFO_DCT_mA_V_we0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0),
    .sc_FIFO_DCT_mA_V_d0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0)
);

always @ (posedge clock) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld)) begin
        data_ok <= grp_sc_FIFO_DCT_Prc2_fu_86_data_ok;
    end
end

always @ (posedge clock) begin
    if (reset == 1'b1) begin
        done <= 1'b0;
    end else begin
        if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld)) begin
            done <= grp_sc_FIFO_DCT_Prc2_fu_86_done;
        end
    end
end

always @ (posedge clock) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld)) begin
        dout <= grp_sc_FIFO_DCT_Prc2_fu_86_dout;
    end
end

always @ (posedge clock) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld)) begin
        error <= grp_sc_FIFO_DCT_Prc1_fu_118_error;
    end
end

always @ (posedge clock) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld)) begin
        s_start <= grp_sc_FIFO_DCT_Prc1_fu_118_s_start;
    end else if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld)) begin
        s_start <= grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o;
    end
end

always @ (posedge clock) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld)) begin
        s_working <= grp_sc_FIFO_DCT_Prc2_fu_86_s_working;
    end
end

always @ (*) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0)) begin
        sc_FIFO_DCT_mA_V_address0 = grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0;
    end else if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0)) begin
        sc_FIFO_DCT_mA_V_address0 = grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0;
    end else begin
        sc_FIFO_DCT_mA_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0)) begin
        sc_FIFO_DCT_mA_V_ce0 = grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0;
    end else if ((1'b1 == grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0)) begin
        sc_FIFO_DCT_mA_V_ce0 = grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0;
    end else begin
        sc_FIFO_DCT_mA_V_ce0 = 'bx;
    end
end

assign ap_CS_fsm = ap_const_lv2_0;

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign grp_sc_FIFO_DCT_Prc1_fu_118_s_working = s_working;

assign grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i = s_start;

assign sc_FIFO_DCT_ssdm_s_load_fu_146_p1 = 1'b0;

endmodule //sc_FIFO_DCT
