// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sc_FIFO_DCT_Prc1 (
        ap_clk,
        ap_rst,
        sync,
        error,
        error_ap_vld,
        din,
        s_start,
        s_start_ap_vld,
        s_working,
        sc_FIFO_DCT_mA_V_address0,
        sc_FIFO_DCT_mA_V_ce0,
        sc_FIFO_DCT_mA_V_we0,
        sc_FIFO_DCT_mA_V_d0
);

parameter    ap_ST_fsm_state2 = 3'b10;
parameter    ap_ST_fsm_state3 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_40 = 32'b1000000;

input   ap_clk;
input   ap_rst;
input   sync;
output   error;
output   error_ap_vld;
input  [7:0] din;
output   s_start;
output   s_start_ap_vld;
input   s_working;
output  [5:0] sc_FIFO_DCT_mA_V_address0;
output   sc_FIFO_DCT_mA_V_ce0;
output   sc_FIFO_DCT_mA_V_we0;
output  [17:0] sc_FIFO_DCT_mA_V_d0;

reg error_ap_vld;
reg s_start_ap_vld;
reg sc_FIFO_DCT_mA_V_ce0;
reg sc_FIFO_DCT_mA_V_we0;

reg   [31:0] i0_reg_132;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state2;
reg   [31:0] i0_3_phi_fu_161_p4;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] i0_2_phi_fu_147_p6;
wire   [0:0] tmp_read_fu_86_p2;
wire   [0:0] tmp_21_read_fu_92_p2;
wire   [31:0] i0_4_fu_175_p2;
wire   [0:0] tmp_16_fu_182_p2;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b10;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i0_reg_132 <= i0_3_phi_fu_161_p4;
    end else if ((ap_CS_fsm_state2 == 1'b1)) begin
        i0_reg_132 <= ap_const_lv32_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_86_p2 == 1'b0) & ~(1'b0 == tmp_21_read_fu_92_p2))) begin
        error_ap_vld = 1'b1;
    end else begin
        error_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_86_p2 == 1'b0) & (1'b0 == tmp_21_read_fu_92_p2))) begin
        i0_2_phi_fu_147_p6 = i0_4_fu_175_p2;
    end else if ((((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_86_p2 == 1'b0) & ~(1'b0 == tmp_21_read_fu_92_p2)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_read_fu_86_p2 == 1'b0)))) begin
        i0_2_phi_fu_147_p6 = i0_reg_132;
    end else begin
        i0_2_phi_fu_147_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((1'b0 == tmp_16_fu_182_p2)) begin
            i0_3_phi_fu_161_p4 = i0_2_phi_fu_147_p6;
        end else if (~(1'b0 == tmp_16_fu_182_p2)) begin
            i0_3_phi_fu_161_p4 = ap_const_lv32_0;
        end else begin
            i0_3_phi_fu_161_p4 = 'bx;
        end
    end else begin
        i0_3_phi_fu_161_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == tmp_16_fu_182_p2))) begin
        s_start_ap_vld = 1'b1;
    end else begin
        s_start_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sc_FIFO_DCT_mA_V_ce0 = 1'b1;
    end else begin
        sc_FIFO_DCT_mA_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_86_p2 == 1'b0) & (1'b0 == tmp_21_read_fu_92_p2))) begin
        sc_FIFO_DCT_mA_V_we0 = 1'b1;
    end else begin
        sc_FIFO_DCT_mA_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign error = 1'b1;

assign i0_4_fu_175_p2 = (i0_reg_132 + ap_const_lv32_1);

assign s_start = 1'b1;

assign sc_FIFO_DCT_mA_V_address0 = i0_reg_132;

assign sc_FIFO_DCT_mA_V_d0 = din;

assign tmp_16_fu_182_p2 = ((i0_2_phi_fu_147_p6 == ap_const_lv32_40) ? 1'b1 : 1'b0);

assign tmp_21_read_fu_92_p2 = s_working;

assign tmp_read_fu_86_p2 = sync;

endmodule //sc_FIFO_DCT_Prc1
