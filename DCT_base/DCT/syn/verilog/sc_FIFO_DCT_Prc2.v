// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sc_FIFO_DCT_Prc2 (
        ap_clk,
        ap_rst,
        data_ok,
        data_ok_ap_vld,
        done,
        done_ap_vld,
        dout,
        dout_ap_vld,
        s_start_i,
        s_start_o,
        s_start_o_ap_vld,
        s_working,
        s_working_ap_vld,
        sc_FIFO_DCT_mA_V_address0,
        sc_FIFO_DCT_mA_V_ce0,
        sc_FIFO_DCT_mA_V_q0,
        sc_FIFO_DCT_mB_V_address0,
        sc_FIFO_DCT_mB_V_ce0,
        sc_FIFO_DCT_mB_V_we0,
        sc_FIFO_DCT_mB_V_d0
);

parameter    ap_ST_fsm_state1 = 14'b1;
parameter    ap_ST_fsm_state2 = 14'b10;
parameter    ap_ST_fsm_state3 = 14'b100;
parameter    ap_ST_fsm_state4 = 14'b1000;
parameter    ap_ST_fsm_state5 = 14'b10000;
parameter    ap_ST_fsm_state6 = 14'b100000;
parameter    ap_ST_fsm_state7 = 14'b1000000;
parameter    ap_ST_fsm_state8 = 14'b10000000;
parameter    ap_ST_fsm_state9 = 14'b100000000;
parameter    ap_ST_fsm_state10 = 14'b1000000000;
parameter    ap_ST_fsm_state11 = 14'b10000000000;
parameter    ap_ST_fsm_state12 = 14'b100000000000;
parameter    ap_ST_fsm_state13 = 14'b1000000000000;
parameter    ap_ST_fsm_state14 = 14'b10000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;

input   ap_clk;
input   ap_rst;
output   data_ok;
output   data_ok_ap_vld;
output   done;
output   done_ap_vld;
output  [7:0] dout;
output   dout_ap_vld;
input   s_start_i;
output   s_start_o;
output   s_start_o_ap_vld;
output   s_working;
output   s_working_ap_vld;
output  [5:0] sc_FIFO_DCT_mA_V_address0;
output   sc_FIFO_DCT_mA_V_ce0;
input  [17:0] sc_FIFO_DCT_mA_V_q0;
output  [5:0] sc_FIFO_DCT_mB_V_address0;
output   sc_FIFO_DCT_mB_V_ce0;
output   sc_FIFO_DCT_mB_V_we0;
output  [17:0] sc_FIFO_DCT_mB_V_d0;

reg data_ok;
reg data_ok_ap_vld;
reg done_ap_vld;
reg dout_ap_vld;
reg s_start_o_ap_vld;
reg s_working;
reg s_working_ap_vld;
reg sc_FIFO_DCT_mA_V_ce0;
reg sc_FIFO_DCT_mB_V_ce0;
reg sc_FIFO_DCT_mB_V_we0;

wire   [5:0] b_a_address0;
reg    b_a_ce0;
wire   [7:0] b_a_q0;
wire   [5:0] b_address0;
reg    b_ce0;
wire   [7:0] b_q0;
wire   [5:0] i0_cast5_fu_316_p1;
reg   [5:0] i0_cast5_reg_524;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state4;
wire   [3:0] i0_1_fu_326_p2;
reg   [3:0] i0_1_reg_535;
wire   [3:0] i1_2_fu_338_p2;
reg   [3:0] i1_2_reg_543;
wire   [0:0] ap_CS_fsm_state5;
wire   [5:0] tmp_1_fu_348_p3;
reg   [5:0] tmp_1_reg_548;
wire   [0:0] exitcond2_fu_332_p2;
reg   [5:0] a_addr_reg_553;
wire   [3:0] i2_2_fu_376_p2;
reg   [3:0] i2_2_reg_561;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] exitcond4_fu_370_p2;
reg  signed [7:0] b_a_load_reg_576;
wire   [0:0] ap_CS_fsm_state7;
reg   [17:0] sc_FIFO_DCT_mA_V_loa_reg_581;
wire  signed [31:0] grp_fu_509_p3;
wire   [0:0] ap_CS_fsm_state8;
wire   [3:0] i1_3_fu_426_p2;
reg   [3:0] i1_3_reg_594;
wire   [0:0] ap_CS_fsm_state9;
wire   [5:0] tmp_4_fu_436_p3;
reg   [5:0] tmp_4_reg_599;
wire   [0:0] exitcond3_fu_420_p2;
reg   [5:0] sc_FIFO_DCT_mB_V_add_reg_604;
wire   [3:0] i2_3_fu_464_p2;
reg   [3:0] i2_3_reg_612;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] exitcond_fu_458_p2;
reg  signed [7:0] b_load_reg_627;
wire   [0:0] ap_CS_fsm_state11;
wire  signed [17:0] tmp_20_fu_502_p1;
reg  signed [17:0] tmp_20_reg_632;
wire  signed [17:0] grp_fu_517_p3;
wire   [0:0] ap_CS_fsm_state12;
reg   [5:0] a_address0;
reg    a_ce0;
reg    a_we0;
wire   [31:0] a_q0;
reg   [3:0] i0_reg_229;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] tmp_read_fu_124_p2;
reg   [3:0] i1_reg_240;
wire   [0:0] exitcond1_fu_320_p2;
reg   [31:0] a_load_reg_251;
reg   [3:0] i2_reg_264;
reg   [3:0] i1_1_reg_275;
wire   [0:0] ap_CS_fsm_state13;
reg   [17:0] sc_FIFO_DCT_mB_V_loa_reg_286;
reg   [3:0] i2_1_reg_299;
wire   [31:0] tmp_2_cast_fu_361_p1;
wire   [31:0] tmp_6_cast_fu_399_p1;
wire   [31:0] tmp_9_cast_fu_409_p1;
wire   [31:0] tmp_5_cast_fu_449_p1;
wire   [31:0] tmp_12_cast_fu_487_p1;
wire   [31:0] tmp_13_cast_fu_497_p1;
wire   [2:0] tmp_16_fu_344_p1;
wire   [5:0] tmp_2_fu_356_p2;
wire   [2:0] tmp_18_fu_382_p1;
wire   [5:0] tmp_3_fu_386_p3;
wire   [5:0] tmp_6_fu_394_p2;
wire   [5:0] i2_cast3_fu_366_p1;
wire   [5:0] tmp_9_fu_404_p2;
wire   [2:0] tmp_17_fu_432_p1;
wire   [5:0] tmp_5_fu_444_p2;
wire   [2:0] tmp_19_fu_470_p1;
wire   [5:0] tmp_10_fu_474_p3;
wire   [5:0] tmp_11_fu_482_p2;
wire   [5:0] i2_1_cast1_fu_454_p1;
wire   [5:0] tmp_12_fu_492_p2;
wire   [17:0] grp_fu_509_p1;
reg   [13:0] ap_NS_fsm;
wire   [25:0] grp_fu_509_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'b1;
end

sc_FIFO_DCT_Prc2_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
b_a_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_a_address0),
    .ce0(b_a_ce0),
    .q0(b_a_q0)
);

sc_FIFO_DCT_Prc2_b #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_address0),
    .ce0(b_ce0),
    .q0(b_q0)
);

sc_FIFO_DCT_Prc2_a #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
a_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_address0),
    .ce0(a_ce0),
    .we0(a_we0),
    .d0(a_load_reg_251),
    .q0(a_q0)
);

sc_FIFO_DCT_mac_mcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sc_FIFO_DCT_mac_mcud_U6(
    .din0(b_a_load_reg_576),
    .din1(grp_fu_509_p1),
    .din2(a_load_reg_251),
    .dout(grp_fu_509_p3)
);

sc_FIFO_DCT_mac_mdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
sc_FIFO_DCT_mac_mdEe_U7(
    .din0(tmp_20_reg_632),
    .din1(b_load_reg_627),
    .din2(sc_FIFO_DCT_mB_V_loa_reg_286),
    .dout(grp_fu_517_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        a_load_reg_251 <= grp_fu_509_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_332_p2 == 1'b0))) begin
        a_load_reg_251 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == exitcond3_fu_420_p2))) begin
        i0_reg_229 <= i0_1_reg_535;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_124_p2 == 1'b0))) begin
        i0_reg_229 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(exitcond2_fu_332_p2 == 1'b0))) begin
        i1_1_reg_275 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i1_1_reg_275 <= i1_3_reg_594;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state4 == 1'b1) & (1'b0 == exitcond1_fu_320_p2))) begin
        i1_reg_240 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == exitcond4_fu_370_p2))) begin
        i1_reg_240 <= i1_2_reg_543;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i2_1_reg_299 <= i2_3_reg_612;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond3_fu_420_p2))) begin
        i2_1_reg_299 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i2_reg_264 <= i2_2_reg_561;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_332_p2 == 1'b0))) begin
        i2_reg_264 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sc_FIFO_DCT_mB_V_loa_reg_286 <= grp_fu_517_p3;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond3_fu_420_p2))) begin
        sc_FIFO_DCT_mB_V_loa_reg_286 <= ap_const_lv18_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_332_p2 == 1'b0))) begin
        a_addr_reg_553 <= tmp_2_cast_fu_361_p1;
        tmp_1_reg_548[5 : 3] <= tmp_1_fu_348_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_a_load_reg_576 <= b_a_q0;
        sc_FIFO_DCT_mA_V_loa_reg_581 <= sc_FIFO_DCT_mA_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        b_load_reg_627 <= b_q0;
        tmp_20_reg_632 <= tmp_20_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_CS_fsm_state4 == 1'b1)) begin
        i0_1_reg_535 <= i0_1_fu_326_p2;
        i0_cast5_reg_524[3 : 0] <= i0_cast5_fu_316_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_2_reg_543 <= i1_2_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_3_reg_594 <= i1_3_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i2_2_reg_561 <= i2_2_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_3_reg_612 <= i2_3_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond3_fu_420_p2))) begin
        sc_FIFO_DCT_mB_V_add_reg_604 <= tmp_5_cast_fu_449_p1;
        tmp_4_reg_599[5 : 3] <= tmp_4_fu_436_p3[5 : 3];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address0 = tmp_12_cast_fu_487_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = a_addr_reg_553;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_a_ce0 = 1'b1;
    end else begin
        b_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_ok = 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state10) & ~(1'b0 == exitcond_fu_458_p2))) begin
        data_ok = 1'b1;
    end else begin
        data_ok = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state10) & ~(1'b0 == exitcond_fu_458_p2)))) begin
        data_ok_ap_vld = 1'b1;
    end else begin
        data_ok_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state4 == 1'b1) & ~(1'b0 == exitcond1_fu_320_p2))) begin
        done_ap_vld = 1'b1;
    end else begin
        done_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & ~(1'b0 == exitcond_fu_458_p2))) begin
        dout_ap_vld = 1'b1;
    end else begin
        dout_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_124_p2 == 1'b0))) begin
        s_start_o_ap_vld = 1'b1;
    end else begin
        s_start_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state4 == 1'b1) & ~(1'b0 == exitcond1_fu_320_p2))) begin
        s_working = 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_124_p2 == 1'b0))) begin
        s_working = 1'b1;
    end else begin
        s_working = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & ~(tmp_read_fu_124_p2 == 1'b0)) | ((ap_CS_fsm_state4 == 1'b1) & ~(1'b0 == exitcond1_fu_320_p2)))) begin
        s_working_ap_vld = 1'b1;
    end else begin
        s_working_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sc_FIFO_DCT_mA_V_ce0 = 1'b1;
    end else begin
        sc_FIFO_DCT_mA_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sc_FIFO_DCT_mB_V_ce0 = 1'b1;
    end else begin
        sc_FIFO_DCT_mB_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sc_FIFO_DCT_mB_V_we0 = 1'b1;
    end else begin
        sc_FIFO_DCT_mB_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (~(tmp_read_fu_124_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((1'b0 == exitcond1_fu_320_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(exitcond2_fu_332_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == exitcond4_fu_370_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (~(1'b0 == exitcond3_fu_420_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (~(1'b0 == exitcond_fu_458_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign b_a_address0 = tmp_6_cast_fu_399_p1;

assign b_address0 = tmp_13_cast_fu_497_p1;

assign done = 1'b1;

assign dout = ap_const_lv8_7F;

assign exitcond1_fu_320_p2 = ((i0_reg_229 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond2_fu_332_p2 = ((i1_reg_240 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond3_fu_420_p2 = ((i1_1_reg_275 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond4_fu_370_p2 = ((i2_reg_264 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond_fu_458_p2 = ((i2_1_reg_299 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign grp_fu_509_p1 = grp_fu_509_p10;

assign grp_fu_509_p10 = sc_FIFO_DCT_mA_V_loa_reg_581;

assign i0_1_fu_326_p2 = (i0_reg_229 + ap_const_lv4_1);

assign i0_cast5_fu_316_p1 = i0_reg_229;

assign i1_2_fu_338_p2 = (i1_reg_240 + ap_const_lv4_1);

assign i1_3_fu_426_p2 = (i1_1_reg_275 + ap_const_lv4_1);

assign i2_1_cast1_fu_454_p1 = i2_1_reg_299;

assign i2_2_fu_376_p2 = (i2_reg_264 + ap_const_lv4_1);

assign i2_3_fu_464_p2 = (i2_1_reg_299 + ap_const_lv4_1);

assign i2_cast3_fu_366_p1 = i2_reg_264;

assign s_start_o = 1'b0;

assign sc_FIFO_DCT_mA_V_address0 = tmp_9_cast_fu_409_p1;

assign sc_FIFO_DCT_mB_V_address0 = sc_FIFO_DCT_mB_V_add_reg_604;

assign sc_FIFO_DCT_mB_V_d0 = sc_FIFO_DCT_mB_V_loa_reg_286;

assign tmp_10_fu_474_p3 = {{tmp_19_fu_470_p1}, {ap_const_lv3_0}};

assign tmp_11_fu_482_p2 = (i0_cast5_reg_524 + tmp_10_fu_474_p3);

assign tmp_12_cast_fu_487_p1 = tmp_11_fu_482_p2;

assign tmp_12_fu_492_p2 = (tmp_4_reg_599 + i2_1_cast1_fu_454_p1);

assign tmp_13_cast_fu_497_p1 = tmp_12_fu_492_p2;

assign tmp_16_fu_344_p1 = i1_reg_240[2:0];

assign tmp_17_fu_432_p1 = i1_1_reg_275[2:0];

assign tmp_18_fu_382_p1 = i2_reg_264[2:0];

assign tmp_19_fu_470_p1 = i2_1_reg_299[2:0];

assign tmp_1_fu_348_p3 = {{tmp_16_fu_344_p1}, {ap_const_lv3_0}};

assign tmp_20_fu_502_p1 = a_q0[17:0];

assign tmp_2_cast_fu_361_p1 = tmp_2_fu_356_p2;

assign tmp_2_fu_356_p2 = (i0_cast5_reg_524 + tmp_1_fu_348_p3);

assign tmp_3_fu_386_p3 = {{tmp_18_fu_382_p1}, {ap_const_lv3_0}};

assign tmp_4_fu_436_p3 = {{tmp_17_fu_432_p1}, {ap_const_lv3_0}};

assign tmp_5_cast_fu_449_p1 = tmp_5_fu_444_p2;

assign tmp_5_fu_444_p2 = (tmp_4_fu_436_p3 + i0_cast5_reg_524);

assign tmp_6_cast_fu_399_p1 = tmp_6_fu_394_p2;

assign tmp_6_fu_394_p2 = (tmp_3_fu_386_p3 + i0_cast5_reg_524);

assign tmp_9_cast_fu_409_p1 = tmp_9_fu_404_p2;

assign tmp_9_fu_404_p2 = (i2_cast3_fu_366_p1 + tmp_1_reg_548);

assign tmp_read_fu_124_p2 = s_start_i;

always @ (posedge ap_clk) begin
    i0_cast5_reg_524[5:4] <= 2'b00;
    tmp_1_reg_548[2:0] <= 3'b000;
    tmp_4_reg_599[2:0] <= 3'b000;
end

endmodule //sc_FIFO_DCT_Prc2
