-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sc_FIFO_DCT_data_out is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    dout_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dout_full_n : IN STD_LOGIC;
    dout_write : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mC_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_DCT : IN STD_LOGIC;
    s_done : OUT STD_LOGIC;
    s_done_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sc_FIFO_DCT_data_out is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

    signal dout_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_1_fu_158_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_reg_184 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_130 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_read_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_cast1_fu_147_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_2_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_169_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state2;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state5 = ap_const_lv1_1) and not((dout_full_n = ap_const_logic_0)))) then 
                i_reg_130 <= i_1_reg_184;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((grp_read_fu_96_p2 = ap_const_lv1_0)))) then 
                i_reg_130 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                i_1_reg_184 <= i_1_fu_158_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (dout_full_n, ap_CS_fsm, exitcond_fu_152_p2, grp_read_fu_96_p2, tmp_2_fu_169_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (not((grp_read_fu_96_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (not((exitcond_fu_152_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((dout_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (not((tmp_2_fu_169_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);

    dout_blk_n_assign_proc : process(dout_full_n, ap_CS_fsm_state5)
    begin
        if (((ap_CS_fsm_state5 = ap_const_lv1_1))) then 
            dout_blk_n <= dout_full_n;
        else 
            dout_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_din <= sc_FIFO_DCT_mC_q0(8 - 1 downto 0);

    dout_write_assign_proc : process(dout_full_n, ap_CS_fsm_state5)
    begin
        if (((ap_CS_fsm_state5 = ap_const_lv1_1) and not((dout_full_n = ap_const_logic_0)))) then 
            dout_write <= ap_const_logic_1;
        else 
            dout_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_152_p2 <= "1" when (i_reg_130 = ap_const_lv7_40) else "0";
    grp_read_fu_96_p2 <= (0=>s_DCT, others=>'-');
    i_1_fu_158_p2 <= std_logic_vector(unsigned(i_reg_130) + unsigned(ap_const_lv7_1));
    i_cast1_fu_147_p1 <= std_logic_vector(resize(unsigned(i_reg_130),32));

    s_done_assign_proc : process(ap_CS_fsm_state4, exitcond_fu_152_p2, ap_CS_fsm_state6, tmp_2_fu_169_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((tmp_2_fu_169_p2 = ap_const_lv1_0)))) then 
            s_done <= ap_const_logic_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((exitcond_fu_152_p2 = ap_const_lv1_0)))) then 
            s_done <= ap_const_logic_1;
        else 
            s_done <= 'X';
        end if; 
    end process;


    s_done_ap_vld_assign_proc : process(ap_CS_fsm_state4, exitcond_fu_152_p2, ap_CS_fsm_state6, tmp_2_fu_169_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6) and not((tmp_2_fu_169_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and not((exitcond_fu_152_p2 = ap_const_lv1_0))))) then 
            s_done_ap_vld <= ap_const_logic_1;
        else 
            s_done_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_mC_address0 <= i_cast1_fu_147_p1(6 - 1 downto 0);

    sc_FIFO_DCT_mC_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_169_p0 <= (0=>s_DCT, others=>'-');
    tmp_2_fu_169_p2 <= (tmp_2_fu_169_p0 xor ap_const_lv1_1);
end behav;
