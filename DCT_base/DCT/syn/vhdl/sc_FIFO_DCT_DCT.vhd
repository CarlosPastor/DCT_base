-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sc_FIFO_DCT_DCT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sc_FIFO_DCT_mA_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mA_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mA_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_mA_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mA_ce1 : OUT STD_LOGIC;
    sc_FIFO_DCT_mA_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_mB_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mB_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mB_we0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mB_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_mC_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mC_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_we0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_i : IN STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_o_ap_vld : OUT STD_LOGIC;
    s_buffered : IN STD_LOGIC;
    s_working : OUT STD_LOGIC;
    s_working_ap_vld : OUT STD_LOGIC;
    s_DCT : OUT STD_LOGIC;
    s_DCT_ap_vld : OUT STD_LOGIC;
    s_done : IN STD_LOGIC );
end;


architecture behav of sc_FIFO_DCT_DCT is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_7F : STD_LOGIC_VECTOR (14 downto 0) := "000000001111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";

    signal b_a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce0 : STD_LOGIC;
    signal b_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce1 : STD_LOGIC;
    signal b_a_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce2 : STD_LOGIC;
    signal b_a_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce3 : STD_LOGIC;
    signal b_a_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address4 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce4 : STD_LOGIC;
    signal b_a_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address5 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce5 : STD_LOGIC;
    signal b_a_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address6 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce6 : STD_LOGIC;
    signal b_a_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_a_address7 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce7 : STD_LOGIC;
    signal b_a_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce0 : STD_LOGIC;
    signal b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce1 : STD_LOGIC;
    signal b_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce2 : STD_LOGIC;
    signal b_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce3 : STD_LOGIC;
    signal b_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address4 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce4 : STD_LOGIC;
    signal b_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address5 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce5 : STD_LOGIC;
    signal b_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address6 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce6 : STD_LOGIC;
    signal b_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address7 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce7 : STD_LOGIC;
    signal b_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal i1_reg_841 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_1_reg_852 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_s_reg_863 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_1_1_reg_874 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond2_reg_2415 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal exitcond2_1_reg_2858 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal reg_913 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal a_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_921 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_930 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_935 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal reg_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_945 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_955 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_963 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_967 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_971 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_975 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_979 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_983 : STD_LOGIC_VECTOR (7 downto 0);
    signal i0_cast3_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i0_cast3_reg_2272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond1_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i0_cast4_fu_1004_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i0_cast4_reg_2277 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_0_1_cast_fu_1014_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_1_cast_reg_2290 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_2_cast_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_2_cast_reg_2300 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_3_cast_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_3_cast_reg_2310 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_4_cast_fu_1049_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_4_cast_reg_2320 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_5_cast_fu_1060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_5_cast_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_6_cast_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_6_cast_reg_2340 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_7_cast_fu_1078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_7_cast_reg_2350 : STD_LOGIC_VECTOR (31 downto 0);
    signal i0_cast1_fu_1090_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal i0_cast1_reg_2360 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_21_fu_1094_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_reg_2365 : STD_LOGIC_VECTOR (2 downto 0);
    signal i0_cast40_cast_fu_1098_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal i0_cast40_cast_reg_2370 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_a_load_cast_fu_1102_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_cast_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_1_cast_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_1_cast_reg_2380 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_2_cast_fu_1110_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_2_cast_reg_2385 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_3_cast_fu_1114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_3_cast_reg_2390 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_4_cast_fu_1118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_4_cast_reg_2395 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_5_cast_fu_1122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_5_cast_reg_2400 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_6_cast_fu_1126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_6_cast_reg_2405 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_7_cast_fu_1130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_7_cast_reg_2410 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond2_reg_2415 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_2_fu_1140_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_2_reg_2419 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_1150_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_2424 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_2_reg_2424 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_2475 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_1_reg_2480 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_4_reg_2485 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_5_reg_2490 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_2495 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_6_reg_2500 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_7_reg_2505 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_2510 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1282_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_reg_2515 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_2_reg_2520 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_0_3_reg_2525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_2530 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal exitcond3_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter4_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter5_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_3_fu_1320_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_4_fu_1330_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_reg_2584 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_fu_1430_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter1_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter2_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter3_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter4_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter5_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter6_tmp_16_reg_2629 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1438_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter2_tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter3_tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter4_tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter5_tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter6_tmp_12_reg_2634 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_2679 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1456_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_1_reg_2684 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_2_reg_2689 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_3_reg_2694 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_4_reg_2699 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_5_reg_2704 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_6_reg_2709 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_0_7_reg_2714 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_0_6_fu_1550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_0_6_reg_2719 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_2726 : STD_LOGIC_VECTOR (12 downto 0);
    signal i0_1_s_fu_1632_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i0_1_s_reg_2731 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal i0_1_cast_fu_1637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i0_1_cast_reg_2738 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_1_cast_fu_1647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_1_cast_reg_2748 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_2_cast_fu_1666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_2_cast_reg_2758 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_3_cast_fu_1676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_3_cast_reg_2768 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_4_cast_fu_1689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_4_cast_reg_2778 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_5_cast_fu_1699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_5_cast_reg_2788 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_6_cast_fu_1708_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_6_cast_reg_2798 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_7_cast_fu_1718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_7_cast_reg_2808 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_8_cast_fu_1723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_8_cast_reg_2818 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal b_a_load_9_cast_fu_1727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_9_cast_reg_2823 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_10_cast_fu_1731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_10_cast_reg_2828 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_11_cast_fu_1735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_11_cast_reg_2833 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_12_cast_fu_1739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_12_cast_reg_2838 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_13_cast_fu_1743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_13_cast_reg_2843 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_14_cast_fu_1747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_14_cast_reg_2848 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_15_cast_fu_1751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_15_cast_reg_2853 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_1_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter2_exitcond2_1_reg_2858 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_2_1_fu_1761_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_2_1_reg_2862 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_fu_1767_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_27_reg_2867 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp2_iter1_tmp_27_reg_2867 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp2_iter2_tmp_27_reg_2867 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_1_fu_1771_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_1_reg_2872 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1815_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_reg_2922 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1820_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_1_reg_2927 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_2_reg_2932 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_3_reg_2937 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_reg_2942 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_6_reg_2947 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1880_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_7_reg_2952 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_1899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_2957 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_4_reg_2962 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_5_reg_2967 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_1903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_reg_2972 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal tmp_1_1_fu_1938_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_1_reg_3017 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond3_1_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter1_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter2_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter3_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter4_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter5_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_3_1_fu_1951_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal tmp_28_fu_1961_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter1_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter2_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter3_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter4_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter5_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter6_tmp_28_reg_3031 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_1_fu_2055_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter1_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter2_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter3_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter4_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter5_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter6_tmp_18_1_reg_3076 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_reg_3121 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_1_reg_3126 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_2_reg_3131 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_3_reg_3136 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_4_reg_3141 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_5_reg_3146 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_6_reg_3151 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2134_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_7_reg_3156 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_1_6_fu_2168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_1_6_reg_3161 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_3168 : STD_LOGIC_VECTOR (12 downto 0);
    signal i0_1_1_fu_2257_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_ce1 : STD_LOGIC;
    signal a_we1 : STD_LOGIC;
    signal a_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i0_reg_829 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_read_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_phi_fu_845_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_s_phi_fu_867_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_cast_fu_1158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_cast_fu_1169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_3_cast_fu_1179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_4_cast_fu_1189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_5_cast_fu_1209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_6_cast_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_1_cast_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_0_2_cast_fu_1239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_cast_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_cast_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_cast_fu_1349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_1_cast_fu_1360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_2_cast_fu_1371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_3_cast_fu_1382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_4_cast_fu_1393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_5_cast_fu_1404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_0_6_cast_fu_1415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_1572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_1628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_cast_fu_1779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_cast_fu_1790_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_1_cast_fu_1800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_2_cast_fu_1810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_5_cast_fu_1830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_6_cast_fu_1840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_3_cast_fu_1860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_4_cast_fu_1870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_1_cast_fu_1933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_1_cast_fu_1973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_cast_fu_1984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_1_cast_fu_1995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_2_cast_fu_2006_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_3_cast_fu_2017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_4_cast_fu_2028_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_5_cast_fu_2039_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_6_cast_fu_2050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_1_cast_fu_2196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_cast_fu_2253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal tmp_19_read_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_cast_fu_1623_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_cast_fu_2248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_0_1_fu_1008_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_0_s_fu_1019_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_0_3_cast1_fu_1032_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_0_2_fu_1041_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_0_5_fu_1054_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_0_6_cast1_fu_1065_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_0_7_cast1_fu_1074_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_1146_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_0_s_fu_1163_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_0_3_fu_1174_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_0_4_fu_1184_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1194_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1199_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_0_5_fu_1204_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_0_6_fu_1214_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_0_1_fu_1224_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_0_2_fu_1234_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1244_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1249_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1254_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1264_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1269_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1326_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_0_s_fu_1343_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_1_fu_1354_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_2_fu_1365_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_3_fu_1376_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_4_fu_1387_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_5_fu_1398_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_0_6_fu_1409_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_1420_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp8_fu_1526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_1556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_cast_fu_1583_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_24_fu_1592_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_fu_1576_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_1586_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_lshr_f_cast_fu_1601_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_fu_1605_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_14_cast_fu_1613_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_fu_1617_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_1_1_fu_1642_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_1652_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_1_s_fu_1658_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_1_3_fu_1671_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_1_2_fu_1681_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_1_5_fu_1694_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_1_6_cast1_fu_1704_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_1_7_fu_1713_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_1_s_fu_1784_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_1_1_fu_1795_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_1_2_fu_1805_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1815_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1820_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_1_5_fu_1825_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_1_6_fu_1835_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1845_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1850_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_1_3_fu_1855_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_1_4_fu_1865_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1875_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1885_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1890_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp19_fu_1911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_fu_1915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_1907_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_1_fu_1927_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_1_fu_1965_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_s_fu_1978_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_1_fu_1989_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_2_fu_2000_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_3_fu_2011_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_4_fu_2022_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_5_fu_2033_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_1_6_fu_2044_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_1_1_cast_fu_1957_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp25_fu_2144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_fu_2140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp28_fu_2158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp27_fu_2154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp29_fu_2162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp26_fu_2148_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_1_fu_2174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_1_fu_2190_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_lshr_1_cast_fu_2208_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_29_fu_2217_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_32_fu_2201_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_1_fu_2211_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_lshr_f_1_cast_fu_2226_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_1_fu_2230_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_1_cast_fu_2238_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_17_1_fu_2242_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);

    component sc_FIFO_DCT_mul_8bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sc_FIFO_DCT_mul_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_b_a IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_b IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_a IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    b_a_U : component sc_FIFO_DCT_DCT_b_a
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_a_address0,
        ce0 => b_a_ce0,
        q0 => b_a_q0,
        address1 => b_a_address1,
        ce1 => b_a_ce1,
        q1 => b_a_q1,
        address2 => b_a_address2,
        ce2 => b_a_ce2,
        q2 => b_a_q2,
        address3 => b_a_address3,
        ce3 => b_a_ce3,
        q3 => b_a_q3,
        address4 => b_a_address4,
        ce4 => b_a_ce4,
        q4 => b_a_q4,
        address5 => b_a_address5,
        ce5 => b_a_ce5,
        q5 => b_a_q5,
        address6 => b_a_address6,
        ce6 => b_a_ce6,
        q6 => b_a_q6,
        address7 => b_a_address7,
        ce7 => b_a_ce7,
        q7 => b_a_q7);

    b_U : component sc_FIFO_DCT_DCT_b
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_address0,
        ce0 => b_ce0,
        q0 => b_q0,
        address1 => b_address1,
        ce1 => b_ce1,
        q1 => b_q1,
        address2 => b_address2,
        ce2 => b_ce2,
        q2 => b_q2,
        address3 => b_address3,
        ce3 => b_ce3,
        q3 => b_q3,
        address4 => b_address4,
        ce4 => b_ce4,
        q4 => b_q4,
        address5 => b_address5,
        ce5 => b_ce5,
        q5 => b_q5,
        address6 => b_address6,
        ce6 => b_ce6,
        q6 => b_q6,
        address7 => b_address7,
        ce7 => b_ce7,
        q7 => b_q7);

    a_U : component sc_FIFO_DCT_DCT_a
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => a_address0,
        ce0 => a_ce0,
        we0 => a_we0,
        d0 => a_d0,
        q0 => a_q0,
        address1 => a_address1,
        ce1 => a_ce1,
        we1 => a_we1,
        d1 => a_d1,
        q1 => a_q1);

    sc_FIFO_DCT_mul_8bkb_U0 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1194_p0,
        din1 => reg_885,
        ce => ap_const_logic_1,
        dout => grp_fu_1194_p2);

    sc_FIFO_DCT_mul_8bkb_U1 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1199_p0,
        din1 => reg_889,
        ce => ap_const_logic_1,
        dout => grp_fu_1199_p2);

    sc_FIFO_DCT_mul_8bkb_U2 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1244_p0,
        din1 => reg_893,
        ce => ap_const_logic_1,
        dout => grp_fu_1244_p2);

    sc_FIFO_DCT_mul_8bkb_U3 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1249_p0,
        din1 => reg_897,
        ce => ap_const_logic_1,
        dout => grp_fu_1249_p2);

    sc_FIFO_DCT_mul_8bkb_U4 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1254_p0,
        din1 => reg_901,
        ce => ap_const_logic_1,
        dout => grp_fu_1254_p2);

    sc_FIFO_DCT_mul_8bkb_U5 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1259_p0,
        din1 => reg_905,
        ce => ap_const_logic_1,
        dout => grp_fu_1259_p2);

    sc_FIFO_DCT_mul_8bkb_U6 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1264_p0,
        din1 => reg_909,
        ce => ap_const_logic_1,
        dout => grp_fu_1264_p2);

    sc_FIFO_DCT_mul_8bkb_U7 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1269_p0,
        din1 => reg_913,
        ce => ap_const_logic_1,
        dout => grp_fu_1269_p2);

    sc_FIFO_DCT_mul_8bkb_U8 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_955,
        din1 => reg_917,
        ce => ap_const_logic_1,
        dout => grp_fu_1446_p2);

    sc_FIFO_DCT_mul_8bkb_U9 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_959,
        din1 => reg_921,
        ce => ap_const_logic_1,
        dout => grp_fu_1456_p2);

    sc_FIFO_DCT_mul_8bkb_U10 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_963,
        din1 => reg_925,
        ce => ap_const_logic_1,
        dout => grp_fu_1466_p2);

    sc_FIFO_DCT_mul_8bkb_U11 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_967,
        din1 => reg_930,
        ce => ap_const_logic_1,
        dout => grp_fu_1476_p2);

    sc_FIFO_DCT_mul_8bkb_U12 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_971,
        din1 => reg_935,
        ce => ap_const_logic_1,
        dout => grp_fu_1486_p2);

    sc_FIFO_DCT_mul_8bkb_U13 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_975,
        din1 => reg_940,
        ce => ap_const_logic_1,
        dout => grp_fu_1496_p2);

    sc_FIFO_DCT_mul_8bkb_U14 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_979,
        din1 => reg_945,
        ce => ap_const_logic_1,
        dout => grp_fu_1506_p2);

    sc_FIFO_DCT_mul_8bkb_U15 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_983,
        din1 => reg_950,
        ce => ap_const_logic_1,
        dout => grp_fu_1516_p2);

    sc_FIFO_DCT_mul_3cud_U16 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_885,
        din1 => grp_fu_1815_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1815_p2);

    sc_FIFO_DCT_mul_3cud_U17 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_889,
        din1 => grp_fu_1820_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1820_p2);

    sc_FIFO_DCT_mul_3cud_U18 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_893,
        din1 => grp_fu_1845_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1845_p2);

    sc_FIFO_DCT_mul_3cud_U19 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_897,
        din1 => grp_fu_1850_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1850_p2);

    sc_FIFO_DCT_mul_3cud_U20 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_901,
        din1 => grp_fu_1875_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1875_p2);

    sc_FIFO_DCT_mul_3cud_U21 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_905,
        din1 => grp_fu_1880_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1880_p2);

    sc_FIFO_DCT_mul_3cud_U22 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_909,
        din1 => grp_fu_1885_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1885_p2);

    sc_FIFO_DCT_mul_3cud_U23 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_913,
        din1 => grp_fu_1890_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1890_p2);

    sc_FIFO_DCT_mul_8bkb_U24 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_955,
        din1 => reg_917,
        ce => ap_const_logic_1,
        dout => grp_fu_2064_p2);

    sc_FIFO_DCT_mul_8bkb_U25 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_959,
        din1 => reg_921,
        ce => ap_const_logic_1,
        dout => grp_fu_2074_p2);

    sc_FIFO_DCT_mul_8bkb_U26 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_963,
        din1 => reg_925,
        ce => ap_const_logic_1,
        dout => grp_fu_2084_p2);

    sc_FIFO_DCT_mul_8bkb_U27 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_967,
        din1 => reg_930,
        ce => ap_const_logic_1,
        dout => grp_fu_2094_p2);

    sc_FIFO_DCT_mul_8bkb_U28 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_971,
        din1 => reg_935,
        ce => ap_const_logic_1,
        dout => grp_fu_2104_p2);

    sc_FIFO_DCT_mul_8bkb_U29 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_975,
        din1 => reg_940,
        ce => ap_const_logic_1,
        dout => grp_fu_2114_p2);

    sc_FIFO_DCT_mul_8bkb_U30 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_979,
        din1 => reg_945,
        ce => ap_const_logic_1,
        dout => grp_fu_2124_p2);

    sc_FIFO_DCT_mul_8bkb_U31 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_983,
        din1 => reg_950,
        ce => ap_const_logic_1,
        dout => grp_fu_2134_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond2_fu_1134_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond2_reg_2415 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond3_fu_1314_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond3_fu_1314_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond3_fu_1314_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond2_1_fu_1755_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and not((ap_const_lv1_0 = exitcond2_1_reg_2858))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond3_1_fu_1945_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond3_1_fu_1945_p2))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond3_1_fu_1945_p2))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
            end if;
        end if;
    end process;


    i0_reg_829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                i0_reg_829 <= i0_1_1_fu_2257_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_172_p2 = ap_const_lv1_0)))) then 
                i0_reg_829 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i1_1_1_reg_874_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                i1_1_1_reg_874 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond3_1_fu_1945_p2))) then 
                i1_1_1_reg_874 <= i1_3_1_fu_1951_p2;
            end if; 
        end if;
    end process;

    i1_1_reg_852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                i1_1_reg_852 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond3_fu_1314_p2))) then 
                i1_1_reg_852 <= i1_3_fu_1320_p2;
            end if; 
        end if;
    end process;

    i1_reg_841_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i1_reg_841 <= i1_2_reg_2419;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
                i1_reg_841 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i1_s_reg_863_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i1_s_reg_863 <= i1_2_1_reg_2862;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                i1_s_reg_863 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    reg_925_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
                reg_925 <= a_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                reg_925 <= a_q1;
            end if; 
        end if;
    end process;

    reg_930_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
                reg_930 <= a_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                reg_930 <= a_q0;
            end if; 
        end if;
    end process;

    reg_935_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
                reg_935 <= a_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                reg_935 <= a_q1;
            end if; 
        end if;
    end process;

    reg_940_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
                reg_940 <= a_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                reg_940 <= a_q0;
            end if; 
        end if;
    end process;

    reg_945_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                reg_945 <= a_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                reg_945 <= a_q1;
            end if; 
        end if;
    end process;

    reg_950_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                reg_950 <= a_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                reg_950 <= a_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415 <= exitcond2_reg_2415;
                    ap_pipeline_reg_pp0_iter1_tmp_2_reg_2424(5 downto 3) <= tmp_2_reg_2424(5 downto 3);
                ap_pipeline_reg_pp0_iter2_exitcond2_reg_2415 <= ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415;
                exitcond2_reg_2415 <= exitcond2_fu_1134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_exitcond3_reg_2575 <= exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter1_tmp_16_reg_2629 <= tmp_16_reg_2629;
                exitcond3_reg_2575 <= exitcond3_fu_1314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp1_iter2_exitcond3_reg_2575 <= ap_pipeline_reg_pp1_iter1_exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter2_tmp_12_reg_2634 <= tmp_12_reg_2634;
                ap_pipeline_reg_pp1_iter2_tmp_16_reg_2629 <= ap_pipeline_reg_pp1_iter1_tmp_16_reg_2629;
                ap_pipeline_reg_pp1_iter3_exitcond3_reg_2575 <= ap_pipeline_reg_pp1_iter2_exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter3_tmp_12_reg_2634 <= ap_pipeline_reg_pp1_iter2_tmp_12_reg_2634;
                ap_pipeline_reg_pp1_iter3_tmp_16_reg_2629 <= ap_pipeline_reg_pp1_iter2_tmp_16_reg_2629;
                ap_pipeline_reg_pp1_iter4_exitcond3_reg_2575 <= ap_pipeline_reg_pp1_iter3_exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter4_tmp_12_reg_2634 <= ap_pipeline_reg_pp1_iter3_tmp_12_reg_2634;
                ap_pipeline_reg_pp1_iter4_tmp_16_reg_2629 <= ap_pipeline_reg_pp1_iter3_tmp_16_reg_2629;
                ap_pipeline_reg_pp1_iter5_exitcond3_reg_2575 <= ap_pipeline_reg_pp1_iter4_exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter5_tmp_12_reg_2634 <= ap_pipeline_reg_pp1_iter4_tmp_12_reg_2634;
                ap_pipeline_reg_pp1_iter5_tmp_16_reg_2629 <= ap_pipeline_reg_pp1_iter4_tmp_16_reg_2629;
                ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575 <= ap_pipeline_reg_pp1_iter5_exitcond3_reg_2575;
                ap_pipeline_reg_pp1_iter6_tmp_12_reg_2634 <= ap_pipeline_reg_pp1_iter5_tmp_12_reg_2634;
                ap_pipeline_reg_pp1_iter6_tmp_16_reg_2629 <= ap_pipeline_reg_pp1_iter5_tmp_16_reg_2629;
                ap_pipeline_reg_pp3_iter2_exitcond3_1_reg_3022 <= ap_pipeline_reg_pp3_iter1_exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter2_tmp_18_1_reg_3076 <= ap_pipeline_reg_pp3_iter1_tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter2_tmp_28_reg_3031 <= ap_pipeline_reg_pp3_iter1_tmp_28_reg_3031;
                ap_pipeline_reg_pp3_iter3_exitcond3_1_reg_3022 <= ap_pipeline_reg_pp3_iter2_exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter3_tmp_18_1_reg_3076 <= ap_pipeline_reg_pp3_iter2_tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter3_tmp_28_reg_3031 <= ap_pipeline_reg_pp3_iter2_tmp_28_reg_3031;
                ap_pipeline_reg_pp3_iter4_exitcond3_1_reg_3022 <= ap_pipeline_reg_pp3_iter3_exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter4_tmp_18_1_reg_3076 <= ap_pipeline_reg_pp3_iter3_tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter4_tmp_28_reg_3031 <= ap_pipeline_reg_pp3_iter3_tmp_28_reg_3031;
                ap_pipeline_reg_pp3_iter5_exitcond3_1_reg_3022 <= ap_pipeline_reg_pp3_iter4_exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter5_tmp_18_1_reg_3076 <= ap_pipeline_reg_pp3_iter4_tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter5_tmp_28_reg_3031 <= ap_pipeline_reg_pp3_iter4_tmp_28_reg_3031;
                ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022 <= ap_pipeline_reg_pp3_iter5_exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter6_tmp_18_1_reg_3076 <= ap_pipeline_reg_pp3_iter5_tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter6_tmp_28_reg_3031 <= ap_pipeline_reg_pp3_iter5_tmp_28_reg_3031;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858 <= exitcond2_1_reg_2858;
                ap_pipeline_reg_pp2_iter1_tmp_27_reg_2867 <= tmp_27_reg_2867;
                ap_pipeline_reg_pp2_iter2_exitcond2_1_reg_2858 <= ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858;
                ap_pipeline_reg_pp2_iter2_tmp_27_reg_2867 <= ap_pipeline_reg_pp2_iter1_tmp_27_reg_2867;
                exitcond2_1_reg_2858 <= exitcond2_1_fu_1755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                ap_pipeline_reg_pp3_iter1_exitcond3_1_reg_3022 <= exitcond3_1_reg_3022;
                ap_pipeline_reg_pp3_iter1_tmp_18_1_reg_3076 <= tmp_18_1_reg_3076;
                ap_pipeline_reg_pp3_iter1_tmp_28_reg_3031 <= tmp_28_reg_3031;
                exitcond3_1_reg_3022 <= exitcond3_1_fu_1945_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then
                b_a_load_10_cast_reg_2828 <= b_a_load_10_cast_fu_1731_p1;
                b_a_load_11_cast_reg_2833 <= b_a_load_11_cast_fu_1735_p1;
                b_a_load_12_cast_reg_2838 <= b_a_load_12_cast_fu_1739_p1;
                b_a_load_13_cast_reg_2843 <= b_a_load_13_cast_fu_1743_p1;
                b_a_load_14_cast_reg_2848 <= b_a_load_14_cast_fu_1747_p1;
                b_a_load_15_cast_reg_2853 <= b_a_load_15_cast_fu_1751_p1;
                b_a_load_8_cast_reg_2818 <= b_a_load_8_cast_fu_1723_p1;
                b_a_load_9_cast_reg_2823 <= b_a_load_9_cast_fu_1727_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                b_a_load_1_cast_reg_2380 <= b_a_load_1_cast_fu_1106_p1;
                b_a_load_2_cast_reg_2385 <= b_a_load_2_cast_fu_1110_p1;
                b_a_load_3_cast_reg_2390 <= b_a_load_3_cast_fu_1114_p1;
                b_a_load_4_cast_reg_2395 <= b_a_load_4_cast_fu_1118_p1;
                b_a_load_5_cast_reg_2400 <= b_a_load_5_cast_fu_1122_p1;
                b_a_load_6_cast_reg_2405 <= b_a_load_6_cast_fu_1126_p1;
                b_a_load_7_cast_reg_2410 <= b_a_load_7_cast_fu_1130_p1;
                b_a_load_cast_reg_2375 <= b_a_load_cast_fu_1102_p1;
                    i0_cast1_reg_2360(3 downto 0) <= i0_cast1_fu_1090_p1(3 downto 0);
                    i0_cast40_cast_reg_2370(3 downto 0) <= i0_cast40_cast_fu_1098_p1(3 downto 0);
                tmp_21_reg_2365 <= tmp_21_fu_1094_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then
                    i0_1_cast_reg_2738(2 downto 1) <= i0_1_cast_fu_1637_p1(2 downto 1);
                    i0_1_s_reg_2731(2 downto 1) <= i0_1_s_fu_1632_p2(2 downto 1);
                    tmp_6_1_1_cast_reg_2748(4 downto 0) <= tmp_6_1_1_cast_fu_1647_p1(4 downto 0);
                    tmp_6_1_2_cast_reg_2758(3 downto 1) <= tmp_6_1_2_cast_fu_1666_p1(3 downto 1);
                    tmp_6_1_3_cast_reg_2768(5 downto 0) <= tmp_6_1_3_cast_fu_1676_p1(5 downto 0);
                    tmp_6_1_4_cast_reg_2778(3 downto 1) <= tmp_6_1_4_cast_fu_1689_p1(3 downto 1);
                    tmp_6_1_5_cast_reg_2788(5 downto 0) <= tmp_6_1_5_cast_fu_1699_p1(5 downto 0);
                    tmp_6_1_6_cast_reg_2798(3 downto 1) <= tmp_6_1_6_cast_fu_1708_p1(3 downto 1);
                    tmp_6_1_7_cast_reg_2808(6 downto 0) <= tmp_6_1_7_cast_fu_1718_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond1_fu_993_p2))) then
                    i0_cast3_reg_2272(3 downto 0) <= i0_cast3_fu_999_p1(3 downto 0);
                    i0_cast4_reg_2277(3 downto 0) <= i0_cast4_fu_1004_p1(3 downto 0);
                    tmp_6_0_1_cast_reg_2290(3 downto 0) <= tmp_6_0_1_cast_fu_1014_p1(3 downto 0);
                    tmp_6_0_2_cast_reg_2300(3 downto 0) <= tmp_6_0_2_cast_fu_1027_p1(3 downto 0);
                    tmp_6_0_3_cast_reg_2310(4 downto 0) <= tmp_6_0_3_cast_fu_1036_p1(4 downto 0);
                    tmp_6_0_4_cast_reg_2320(3 downto 0) <= tmp_6_0_4_cast_fu_1049_p1(3 downto 0);
                    tmp_6_0_5_cast_reg_2330(5 downto 0) <= tmp_6_0_5_cast_fu_1060_p1(5 downto 0);
                    tmp_6_0_6_cast_reg_2340(3 downto 0) <= tmp_6_0_6_cast_fu_1069_p1(3 downto 0);
                    tmp_6_0_7_cast_reg_2350(5 downto 0) <= tmp_6_0_7_cast_fu_1078_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                i1_2_1_reg_2862 <= i1_2_1_fu_1761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                i1_2_reg_2419 <= i1_2_fu_1140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond2_reg_2415 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_1_reg_2858)))) then
                reg_885 <= sc_FIFO_DCT_mA_q0;
                reg_889 <= sc_FIFO_DCT_mA_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2)))) then
                reg_893 <= sc_FIFO_DCT_mA_q0;
                reg_897 <= sc_FIFO_DCT_mA_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)))) then
                reg_901 <= sc_FIFO_DCT_mA_q0;
                reg_905 <= sc_FIFO_DCT_mA_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then
                reg_909 <= sc_FIFO_DCT_mA_q0;
                reg_913 <= sc_FIFO_DCT_mA_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)))) then
                reg_917 <= a_q0;
                reg_921 <= a_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond3_reg_2575)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond3_1_reg_3022)))) then
                reg_955 <= b_q0;
                reg_959 <= b_q1;
                reg_963 <= b_q2;
                reg_967 <= b_q3;
                reg_971 <= b_q4;
                reg_975 <= b_q5;
                reg_979 <= b_q6;
                reg_983 <= b_q7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858))) then
                tmp16_reg_2942 <= tmp16_fu_1895_p2;
                tmp_8_1_2_reg_2932 <= grp_fu_1845_p2;
                tmp_8_1_3_reg_2937 <= grp_fu_1850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858))) then
                tmp17_reg_2957 <= tmp17_fu_1899_p2;
                tmp_8_1_6_reg_2947 <= grp_fu_1875_p2;
                tmp_8_1_7_reg_2952 <= grp_fu_1880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858))) then
                tmp20_reg_2972 <= tmp20_fu_1903_p2;
                tmp_8_1_4_reg_2962 <= grp_fu_1885_p2;
                tmp_8_1_5_reg_2967 <= grp_fu_1890_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415))) then
                tmp2_reg_2495 <= tmp2_fu_1274_p2;
                tmp_8_0_4_reg_2485 <= grp_fu_1244_p2;
                tmp_8_0_5_reg_2490 <= grp_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415))) then
                tmp5_reg_2510 <= tmp5_fu_1278_p2;
                tmp_8_0_6_reg_2500 <= grp_fu_1254_p2;
                tmp_8_0_7_reg_2505 <= grp_fu_1259_p2;
                tmp_9_reg_2515 <= tmp_9_fu_1282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415))) then
                tmp6_reg_2530 <= tmp6_fu_1286_p2;
                tmp_8_0_2_reg_2520 <= grp_fu_1264_p2;
                tmp_8_0_3_reg_2525 <= grp_fu_1269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter4_exitcond3_reg_2575)) then
                tmp_11_reg_2679 <= grp_fu_1446_p2;
                tmp_12_0_1_reg_2684 <= grp_fu_1456_p2;
                tmp_12_0_2_reg_2689 <= grp_fu_1466_p2;
                tmp_12_0_3_reg_2694 <= grp_fu_1476_p2;
                tmp_12_0_4_reg_2699 <= grp_fu_1486_p2;
                tmp_12_0_5_reg_2704 <= grp_fu_1496_p2;
                tmp_12_0_6_reg_2709 <= grp_fu_1506_p2;
                tmp_12_0_7_reg_2714 <= grp_fu_1516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter4_exitcond3_1_reg_3022)) then
                tmp_12_1_1_reg_3126 <= grp_fu_2074_p2;
                tmp_12_1_2_reg_3131 <= grp_fu_2084_p2;
                tmp_12_1_3_reg_3136 <= grp_fu_2094_p2;
                tmp_12_1_4_reg_3141 <= grp_fu_2104_p2;
                tmp_12_1_5_reg_3146 <= grp_fu_2114_p2;
                tmp_12_1_6_reg_3151 <= grp_fu_2124_p2;
                tmp_12_1_7_reg_3156 <= grp_fu_2134_p2;
                tmp_12_1_reg_3121 <= grp_fu_2064_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond3_reg_2575))) then
                tmp_12_reg_2634 <= tmp_12_fu_1438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond3_fu_1314_p2))) then
                tmp_16_reg_2629 <= tmp_16_fu_1430_p3;
                    tmp_4_reg_2584(5 downto 3) <= tmp_4_fu_1330_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond3_1_fu_1945_p2))) then
                tmp_18_1_reg_3076 <= tmp_18_1_fu_2055_p2;
                tmp_28_reg_3031 <= tmp_28_fu_1961_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter5_exitcond3_reg_2575)) then
                tmp_19_0_6_reg_2719 <= tmp_19_0_6_fu_1550_p2;
                tmp_20_reg_2726 <= p_neg_fu_1556_p2(31 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter5_exitcond3_1_reg_3022)) then
                tmp_19_1_6_reg_3161 <= tmp_19_1_6_fu_2168_p2;
                tmp_25_reg_3168 <= p_neg_1_fu_2174_p2(31 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then
                    tmp_1_1_reg_3017(5 downto 4) <= tmp_1_1_fu_1938_p3(5 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond2_1_fu_1755_p2))) then
                tmp_27_reg_2867 <= tmp_27_fu_1767_p1;
                    tmp_2_1_reg_2872(5 downto 3) <= tmp_2_1_fu_1771_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond2_fu_1134_p2))) then
                    tmp_2_reg_2424(5 downto 3) <= tmp_2_fu_1150_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_2415))) then
                tmp_8_0_1_reg_2480 <= grp_fu_1199_p2;
                tmp_8_reg_2475 <= grp_fu_1194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_1_reg_2858))) then
                tmp_8_1_1_reg_2927 <= grp_fu_1820_p2;
                tmp_8_1_reg_2922 <= grp_fu_1815_p2;
            end if;
        end if;
    end process;
    i0_cast3_reg_2272(31 downto 4) <= "0000000000000000000000000000";
    i0_cast4_reg_2277(5 downto 4) <= "00";
    tmp_6_0_1_cast_reg_2290(31 downto 4) <= "0000000000000000000000000000";
    tmp_6_0_2_cast_reg_2300(31 downto 4) <= "0000000000000000000000000001";
    tmp_6_0_3_cast_reg_2310(31 downto 5) <= "000000000000000000000000000";
    tmp_6_0_4_cast_reg_2320(31 downto 4) <= "0000000000000000000000000010";
    tmp_6_0_5_cast_reg_2330(31 downto 6) <= "00000000000000000000000000";
    tmp_6_0_6_cast_reg_2340(31 downto 4) <= "0000000000000000000000000011";
    tmp_6_0_7_cast_reg_2350(31 downto 6) <= "00000000000000000000000000";
    i0_cast1_reg_2360(6 downto 4) <= "000";
    i0_cast40_cast_reg_2370(4) <= '0';
    tmp_2_reg_2424(2 downto 0) <= "000";
    ap_pipeline_reg_pp0_iter1_tmp_2_reg_2424(2 downto 0) <= "000";
    tmp_4_reg_2584(2 downto 0) <= "000";
    i0_1_s_reg_2731(0) <= '1';
    i0_1_cast_reg_2738(0) <= '1';
    i0_1_cast_reg_2738(31 downto 3) <= "00000000000000000000000000000";
    tmp_6_1_1_cast_reg_2748(31 downto 5) <= "000000000000000000000000000";
    tmp_6_1_2_cast_reg_2758(0) <= '1';
    tmp_6_1_2_cast_reg_2758(31 downto 4) <= "0000000000000000000000000001";
    tmp_6_1_3_cast_reg_2768(31 downto 6) <= "00000000000000000000000000";
    tmp_6_1_4_cast_reg_2778(0) <= '1';
    tmp_6_1_4_cast_reg_2778(31 downto 4) <= "0000000000000000000000000010";
    tmp_6_1_5_cast_reg_2788(31 downto 6) <= "00000000000000000000000000";
    tmp_6_1_6_cast_reg_2798(0) <= '1';
    tmp_6_1_6_cast_reg_2798(31 downto 4) <= "0000000000000000000000000011";
    tmp_6_1_7_cast_reg_2808(31 downto 7) <= "0000000000000000000000000";
    tmp_2_1_reg_2872(2 downto 0) <= "000";
    tmp_1_1_reg_3017(3 downto 0) <= "1000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1, exitcond1_fu_993_p2, exitcond2_fu_1134_p2, exitcond3_fu_1314_p2, ap_enable_reg_pp1_iter0, exitcond2_1_fu_1755_p2, exitcond3_1_fu_1945_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter6, ap_enable_reg_pp3_iter7, tmp_read_fu_172_p2, tmp_19_read_fu_208_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (not((tmp_read_fu_172_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_993_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond2_fu_1134_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not(((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter7) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter6)))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond3_fu_1314_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond3_fu_1314_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond2_1_fu_1755_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
            when ap_ST_fsm_pp2_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp3_iter7) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter6)))) and not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond3_1_fu_1945_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond3_1_fu_1945_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (not((tmp_19_read_fu_208_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state18, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state44, i0_cast3_reg_2272, tmp_6_0_3_cast_reg_2310, tmp_6_0_5_cast_reg_2330, tmp_6_0_7_cast_reg_2350, ap_CS_fsm_state16, i0_1_cast_reg_2738, tmp_6_1_2_cast_reg_2758, tmp_6_1_4_cast_reg_2778, tmp_6_1_6_cast_reg_2798, ap_CS_fsm_state41, ap_enable_reg_pp0_iter2, tmp_9_cast_fu_1310_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            a_address0 <= tmp_6_1_6_cast_reg_2798(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            a_address0 <= tmp_6_1_4_cast_reg_2778(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            a_address0 <= tmp_6_1_2_cast_reg_2758(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            a_address0 <= i0_1_cast_reg_2738(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_address0 <= tmp_6_0_7_cast_reg_2350(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            a_address0 <= tmp_6_0_5_cast_reg_2330(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_address0 <= tmp_6_0_3_cast_reg_2310(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            a_address0 <= i0_cast3_reg_2272(6 - 1 downto 0);
        elsif (((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            a_address0 <= tmp_9_cast_fu_1310_p1(6 - 1 downto 0);
        else 
            a_address0 <= "XXXXXX";
        end if; 
    end process;


    a_address1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state18, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state44, tmp_6_0_1_cast_reg_2290, tmp_6_0_2_cast_reg_2300, tmp_6_0_4_cast_reg_2320, tmp_6_0_6_cast_reg_2340, ap_CS_fsm_state16, tmp_6_1_1_cast_reg_2748, tmp_6_1_3_cast_reg_2768, tmp_6_1_5_cast_reg_2788, tmp_6_1_7_cast_reg_2808, ap_CS_fsm_state41, ap_enable_reg_pp2_iter2, tmp_13_1_cast_fu_1933_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            a_address1 <= tmp_6_1_7_cast_reg_2808(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            a_address1 <= tmp_6_1_5_cast_reg_2788(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            a_address1 <= tmp_6_1_3_cast_reg_2768(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            a_address1 <= tmp_6_1_1_cast_reg_2748(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then 
            a_address1 <= tmp_13_1_cast_fu_1933_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_address1 <= tmp_6_0_6_cast_reg_2340(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            a_address1 <= tmp_6_0_4_cast_reg_2320(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_address1 <= tmp_6_0_2_cast_reg_2300(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            a_address1 <= tmp_6_0_1_cast_reg_2290(6 - 1 downto 0);
        else 
            a_address1 <= "XXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state18, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state44, ap_CS_fsm_state16, ap_CS_fsm_state41, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_ce1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state18, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state44, ap_CS_fsm_state16, ap_CS_fsm_state41, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2)))) then 
            a_ce1 <= ap_const_logic_1;
        else 
            a_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_d0 <= std_logic_vector(unsigned(tmp1_fu_1294_p2) + unsigned(tmp4_fu_1299_p2));
    a_d1 <= std_logic_vector(unsigned(tmp21_fu_1915_p2) + unsigned(tmp18_fu_1907_p2));

    a_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_pipeline_reg_pp0_iter2_exitcond2_reg_2415, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_2415)))) then 
            a_we0 <= ap_const_logic_1;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_we1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_pipeline_reg_pp2_iter2_exitcond2_1_reg_2858, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_1_reg_2858)))) then 
            a_we1 <= ap_const_logic_1;
        else 
            a_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state16 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state17 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state18 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state19 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state20 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state29 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state41 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state42 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state43 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state44 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state45 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state54 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state55 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state56 <= ap_CS_fsm(29 downto 29);

    b_a_address0_assign_proc : process(i0_cast3_fu_999_p1, ap_CS_fsm_state4, ap_CS_fsm_state29, i0_1_cast_fu_1637_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address0 <= i0_1_cast_fu_1637_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address0 <= i0_cast3_fu_999_p1(6 - 1 downto 0);
        else 
            b_a_address0 <= "XXXXXX";
        end if; 
    end process;


    b_a_address1_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_1_cast_fu_1014_p1, ap_CS_fsm_state29, tmp_6_1_1_cast_fu_1647_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address1 <= tmp_6_1_1_cast_fu_1647_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address1 <= tmp_6_0_1_cast_fu_1014_p1(6 - 1 downto 0);
        else 
            b_a_address1 <= "XXXXXX";
        end if; 
    end process;


    b_a_address2_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_2_cast_fu_1027_p1, ap_CS_fsm_state29, tmp_6_1_2_cast_fu_1666_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address2 <= tmp_6_1_2_cast_fu_1666_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address2 <= tmp_6_0_2_cast_fu_1027_p1(6 - 1 downto 0);
        else 
            b_a_address2 <= "XXXXXX";
        end if; 
    end process;


    b_a_address3_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_3_cast_fu_1036_p1, ap_CS_fsm_state29, tmp_6_1_3_cast_fu_1676_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address3 <= tmp_6_1_3_cast_fu_1676_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address3 <= tmp_6_0_3_cast_fu_1036_p1(6 - 1 downto 0);
        else 
            b_a_address3 <= "XXXXXX";
        end if; 
    end process;


    b_a_address4_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_4_cast_fu_1049_p1, ap_CS_fsm_state29, tmp_6_1_4_cast_fu_1689_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address4 <= tmp_6_1_4_cast_fu_1689_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address4 <= tmp_6_0_4_cast_fu_1049_p1(6 - 1 downto 0);
        else 
            b_a_address4 <= "XXXXXX";
        end if; 
    end process;


    b_a_address5_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_5_cast_fu_1060_p1, ap_CS_fsm_state29, tmp_6_1_5_cast_fu_1699_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address5 <= tmp_6_1_5_cast_fu_1699_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address5 <= tmp_6_0_5_cast_fu_1060_p1(6 - 1 downto 0);
        else 
            b_a_address5 <= "XXXXXX";
        end if; 
    end process;


    b_a_address6_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_6_cast_fu_1069_p1, ap_CS_fsm_state29, tmp_6_1_6_cast_fu_1708_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address6 <= tmp_6_1_6_cast_fu_1708_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address6 <= tmp_6_0_6_cast_fu_1069_p1(6 - 1 downto 0);
        else 
            b_a_address6 <= "XXXXXX";
        end if; 
    end process;


    b_a_address7_assign_proc : process(ap_CS_fsm_state4, tmp_6_0_7_cast_fu_1078_p1, ap_CS_fsm_state29, tmp_6_1_7_cast_fu_1718_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            b_a_address7 <= tmp_6_1_7_cast_fu_1718_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            b_a_address7 <= tmp_6_0_7_cast_fu_1078_p1(6 - 1 downto 0);
        else 
            b_a_address7 <= "XXXXXX";
        end if; 
    end process;


    b_a_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce0 <= ap_const_logic_1;
        else 
            b_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce1 <= ap_const_logic_1;
        else 
            b_a_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce2_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce2 <= ap_const_logic_1;
        else 
            b_a_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce3_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce3 <= ap_const_logic_1;
        else 
            b_a_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce4_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce4 <= ap_const_logic_1;
        else 
            b_a_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce5_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce5 <= ap_const_logic_1;
        else 
            b_a_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce6_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce6 <= ap_const_logic_1;
        else 
            b_a_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    b_a_ce7_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            b_a_ce7 <= ap_const_logic_1;
        else 
            b_a_ce7 <= ap_const_logic_0;
        end if; 
    end process;

        b_a_load_10_cast_fu_1731_p1 <= std_logic_vector(resize(signed(b_a_q2),32));

        b_a_load_11_cast_fu_1735_p1 <= std_logic_vector(resize(signed(b_a_q3),32));

        b_a_load_12_cast_fu_1739_p1 <= std_logic_vector(resize(signed(b_a_q4),32));

        b_a_load_13_cast_fu_1743_p1 <= std_logic_vector(resize(signed(b_a_q5),32));

        b_a_load_14_cast_fu_1747_p1 <= std_logic_vector(resize(signed(b_a_q6),32));

        b_a_load_15_cast_fu_1751_p1 <= std_logic_vector(resize(signed(b_a_q7),32));

        b_a_load_1_cast_fu_1106_p1 <= std_logic_vector(resize(signed(b_a_q1),32));

        b_a_load_2_cast_fu_1110_p1 <= std_logic_vector(resize(signed(b_a_q2),32));

        b_a_load_3_cast_fu_1114_p1 <= std_logic_vector(resize(signed(b_a_q3),32));

        b_a_load_4_cast_fu_1118_p1 <= std_logic_vector(resize(signed(b_a_q4),32));

        b_a_load_5_cast_fu_1122_p1 <= std_logic_vector(resize(signed(b_a_q5),32));

        b_a_load_6_cast_fu_1126_p1 <= std_logic_vector(resize(signed(b_a_q6),32));

        b_a_load_7_cast_fu_1130_p1 <= std_logic_vector(resize(signed(b_a_q7),32));

        b_a_load_8_cast_fu_1723_p1 <= std_logic_vector(resize(signed(b_a_q0),32));

        b_a_load_9_cast_fu_1727_p1 <= std_logic_vector(resize(signed(b_a_q1),32));

        b_a_load_cast_fu_1102_p1 <= std_logic_vector(resize(signed(b_a_q0),32));


    b_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_4_cast_fu_1338_p1, tmp_4_1_cast_fu_1973_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address0 <= tmp_4_1_cast_fu_1973_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address0 <= tmp_4_cast_fu_1338_p1(6 - 1 downto 0);
        else 
            b_address0 <= "XXXXXX";
        end if; 
    end process;


    b_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_cast_fu_1349_p1, tmp_11_1_cast_fu_1984_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address1 <= tmp_11_1_cast_fu_1984_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address1 <= tmp_11_0_cast_fu_1349_p1(6 - 1 downto 0);
        else 
            b_address1 <= "XXXXXX";
        end if; 
    end process;


    b_address2_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_1_cast_fu_1360_p1, tmp_11_1_1_cast_fu_1995_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address2 <= tmp_11_1_1_cast_fu_1995_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address2 <= tmp_11_0_1_cast_fu_1360_p1(6 - 1 downto 0);
        else 
            b_address2 <= "XXXXXX";
        end if; 
    end process;


    b_address3_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_2_cast_fu_1371_p1, tmp_11_1_2_cast_fu_2006_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address3 <= tmp_11_1_2_cast_fu_2006_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address3 <= tmp_11_0_2_cast_fu_1371_p1(6 - 1 downto 0);
        else 
            b_address3 <= "XXXXXX";
        end if; 
    end process;


    b_address4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_3_cast_fu_1382_p1, tmp_11_1_3_cast_fu_2017_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address4 <= tmp_11_1_3_cast_fu_2017_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address4 <= tmp_11_0_3_cast_fu_1382_p1(6 - 1 downto 0);
        else 
            b_address4 <= "XXXXXX";
        end if; 
    end process;


    b_address5_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_4_cast_fu_1393_p1, tmp_11_1_4_cast_fu_2028_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address5 <= tmp_11_1_4_cast_fu_2028_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address5 <= tmp_11_0_4_cast_fu_1393_p1(6 - 1 downto 0);
        else 
            b_address5 <= "XXXXXX";
        end if; 
    end process;


    b_address6_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_5_cast_fu_1404_p1, tmp_11_1_5_cast_fu_2039_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address6 <= tmp_11_1_5_cast_fu_2039_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address6 <= tmp_11_0_5_cast_fu_1404_p1(6 - 1 downto 0);
        else 
            b_address6 <= "XXXXXX";
        end if; 
    end process;


    b_address7_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0, tmp_11_0_6_cast_fu_1415_p1, tmp_11_1_6_cast_fu_2050_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            b_address7 <= tmp_11_1_6_cast_fu_2050_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            b_address7 <= tmp_11_0_6_cast_fu_1415_p1(6 - 1 downto 0);
        else 
            b_address7 <= "XXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce1 <= ap_const_logic_1;
        else 
            b_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce2_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce2 <= ap_const_logic_1;
        else 
            b_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce3_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce3 <= ap_const_logic_1;
        else 
            b_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce4 <= ap_const_logic_1;
        else 
            b_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce5_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce5 <= ap_const_logic_1;
        else 
            b_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce6_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce6 <= ap_const_logic_1;
        else 
            b_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce7_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            b_ce7 <= ap_const_logic_1;
        else 
            b_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_993_p2 <= "1" when (i0_reg_829 = ap_const_lv4_8) else "0";
    exitcond2_1_fu_1755_p2 <= "1" when (i1_s_phi_fu_867_p4 = ap_const_lv4_8) else "0";
    exitcond2_fu_1134_p2 <= "1" when (i1_phi_fu_845_p4 = ap_const_lv4_8) else "0";
    exitcond3_1_fu_1945_p2 <= "1" when (i1_1_1_reg_874 = ap_const_lv4_8) else "0";
    exitcond3_fu_1314_p2 <= "1" when (i1_1_reg_852 = ap_const_lv4_8) else "0";
    grp_fu_1194_p0 <= b_a_load_cast_reg_2375(8 - 1 downto 0);
    grp_fu_1199_p0 <= b_a_load_1_cast_reg_2380(8 - 1 downto 0);
    grp_fu_1244_p0 <= b_a_load_4_cast_reg_2395(8 - 1 downto 0);
    grp_fu_1249_p0 <= b_a_load_5_cast_reg_2400(8 - 1 downto 0);
    grp_fu_1254_p0 <= b_a_load_6_cast_reg_2405(8 - 1 downto 0);
    grp_fu_1259_p0 <= b_a_load_7_cast_reg_2410(8 - 1 downto 0);
    grp_fu_1264_p0 <= b_a_load_2_cast_reg_2385(8 - 1 downto 0);
    grp_fu_1269_p0 <= b_a_load_3_cast_reg_2390(8 - 1 downto 0);
    grp_fu_1815_p1 <= b_a_load_8_cast_reg_2818(8 - 1 downto 0);
    grp_fu_1820_p1 <= b_a_load_9_cast_reg_2823(8 - 1 downto 0);
    grp_fu_1845_p1 <= b_a_load_10_cast_reg_2828(8 - 1 downto 0);
    grp_fu_1850_p1 <= b_a_load_11_cast_reg_2833(8 - 1 downto 0);
    grp_fu_1875_p1 <= b_a_load_14_cast_reg_2848(8 - 1 downto 0);
    grp_fu_1880_p1 <= b_a_load_15_cast_reg_2853(8 - 1 downto 0);
    grp_fu_1885_p1 <= b_a_load_12_cast_reg_2838(8 - 1 downto 0);
    grp_fu_1890_p1 <= b_a_load_13_cast_reg_2843(8 - 1 downto 0);
    i0_1_1_fu_2257_p2 <= std_logic_vector(unsigned(i0_reg_829) + unsigned(ap_const_lv4_2));
    i0_1_cast_fu_1637_p1 <= std_logic_vector(resize(unsigned(i0_1_s_fu_1632_p2),32));
    i0_1_s_fu_1632_p2 <= (tmp_21_reg_2365 or ap_const_lv3_1);
    i0_cast1_fu_1090_p1 <= std_logic_vector(resize(unsigned(i0_reg_829),7));
    i0_cast3_fu_999_p1 <= std_logic_vector(resize(unsigned(i0_reg_829),32));
    i0_cast40_cast_fu_1098_p1 <= std_logic_vector(resize(unsigned(i0_reg_829),5));
    i0_cast4_fu_1004_p1 <= std_logic_vector(resize(unsigned(i0_reg_829),6));
    i1_1_1_cast_fu_1957_p1 <= std_logic_vector(resize(unsigned(i1_1_1_reg_874),6));
    i1_2_1_fu_1761_p2 <= std_logic_vector(unsigned(i1_s_phi_fu_867_p4) + unsigned(ap_const_lv4_1));
    i1_2_fu_1140_p2 <= std_logic_vector(unsigned(i1_phi_fu_845_p4) + unsigned(ap_const_lv4_1));
    i1_3_1_fu_1951_p2 <= std_logic_vector(unsigned(i1_1_1_reg_874) + unsigned(ap_const_lv4_1));
    i1_3_fu_1320_p2 <= std_logic_vector(unsigned(i1_1_reg_852) + unsigned(ap_const_lv4_1));

    i1_phi_fu_845_p4_assign_proc : process(i1_reg_841, exitcond2_reg_2415, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i1_2_reg_2419)
    begin
        if (((exitcond2_reg_2415 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i1_phi_fu_845_p4 <= i1_2_reg_2419;
        else 
            i1_phi_fu_845_p4 <= i1_reg_841;
        end if; 
    end process;


    i1_s_phi_fu_867_p4_assign_proc : process(i1_s_reg_863, exitcond2_1_reg_2858, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, i1_2_1_reg_2862)
    begin
        if (((ap_const_lv1_0 = exitcond2_1_reg_2858) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            i1_s_phi_fu_867_p4 <= i1_2_1_reg_2862;
        else 
            i1_s_phi_fu_867_p4 <= i1_s_reg_863;
        end if; 
    end process;

    p_lshr_1_cast_fu_2208_p1 <= std_logic_vector(resize(unsigned(tmp_25_reg_3168),14));
    p_lshr_cast_fu_1583_p1 <= std_logic_vector(resize(unsigned(tmp_20_reg_2726),14));
    p_lshr_f_1_cast_fu_2226_p1 <= std_logic_vector(resize(unsigned(tmp_29_fu_2217_p4),14));
    p_lshr_f_cast_fu_1601_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_1592_p4),14));
    p_neg_1_fu_2174_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_19_1_6_fu_2168_p2));
    p_neg_fu_1556_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_19_0_6_fu_1550_p2));
    p_neg_t_1_fu_2211_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(p_lshr_1_cast_fu_2208_p1));
    p_neg_t_fu_1586_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(p_lshr_cast_fu_1583_p1));

    s_DCT_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state56, tmp_19_read_fu_208_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not((tmp_19_read_fu_208_p2 = ap_const_lv1_0)))) then 
            s_DCT <= ap_const_logic_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            s_DCT <= ap_const_logic_1;
        else 
            s_DCT <= 'X';
        end if; 
    end process;


    s_DCT_ap_vld_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state56, tmp_19_read_fu_208_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not((tmp_19_read_fu_208_p2 = ap_const_lv1_0))))) then 
            s_DCT_ap_vld <= ap_const_logic_1;
        else 
            s_DCT_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    s_working_assign_proc : process(ap_CS_fsm_state3, tmp_read_fu_172_p2, ap_CS_fsm_state55)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            s_working <= ap_const_logic_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_172_p2 = ap_const_lv1_0)))) then 
            s_working <= ap_const_logic_1;
        else 
            s_working <= 'X';
        end if; 
    end process;


    s_working_ap_vld_assign_proc : process(ap_CS_fsm_state3, tmp_read_fu_172_p2, ap_CS_fsm_state55)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_172_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state55)))) then 
            s_working_ap_vld <= ap_const_logic_1;
        else 
            s_working_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_exec_cnt_o <= std_logic_vector(unsigned(sc_FIFO_DCT_exec_cnt_i) + unsigned(ap_const_lv32_1));

    sc_FIFO_DCT_exec_cnt_o_ap_vld_assign_proc : process(ap_CS_fsm_state4, exitcond1_fu_993_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond1_fu_993_p2)))) then 
            sc_FIFO_DCT_exec_cnt_o_ap_vld <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_exec_cnt_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mA_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, tmp_2_cast_fu_1158_p1, tmp_7_0_3_cast_fu_1179_p1, tmp_7_0_5_cast_fu_1209_p1, tmp_7_0_1_cast_fu_1229_p1, tmp_2_1_cast_fu_1779_p1, tmp_7_1_1_cast_fu_1800_p1, tmp_7_1_5_cast_fu_1830_p1, tmp_7_1_3_cast_fu_1860_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_1_3_cast_fu_1860_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_1_5_cast_fu_1830_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_1_1_cast_fu_1800_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_2_1_cast_fu_1779_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_0_1_cast_fu_1229_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_0_5_cast_fu_1209_p1(6 - 1 downto 0);
        elsif (((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_7_0_3_cast_fu_1179_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            sc_FIFO_DCT_mA_address0 <= tmp_2_cast_fu_1158_p1(6 - 1 downto 0);
        else 
            sc_FIFO_DCT_mA_address0 <= "XXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mA_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, tmp_7_0_cast_fu_1169_p1, tmp_7_0_4_cast_fu_1189_p1, tmp_7_0_6_cast_fu_1219_p1, tmp_7_0_2_cast_fu_1239_p1, tmp_7_1_cast_fu_1790_p1, tmp_7_1_2_cast_fu_1810_p1, tmp_7_1_6_cast_fu_1840_p1, tmp_7_1_4_cast_fu_1870_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_1_4_cast_fu_1870_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_1_6_cast_fu_1840_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_1_2_cast_fu_1810_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_1_cast_fu_1790_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_0_2_cast_fu_1239_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_0_6_cast_fu_1219_p1(6 - 1 downto 0);
        elsif (((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_0_4_cast_fu_1189_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            sc_FIFO_DCT_mA_address1 <= tmp_7_0_cast_fu_1169_p1(6 - 1 downto 0);
        else 
            sc_FIFO_DCT_mA_address1 <= "XXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mA_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0)
    begin
        if ((((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            sc_FIFO_DCT_mA_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mA_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0)
    begin
        if ((((ap_CS_fsm_pp0_stage1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            sc_FIFO_DCT_mA_ce1 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mA_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mB_address0_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7, tmp_13_cast_fu_1572_p1, tmp_15_1_cast_fu_2196_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp3_iter7)) then 
            sc_FIFO_DCT_mB_address0 <= tmp_15_1_cast_fu_2196_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter7)) then 
            sc_FIFO_DCT_mB_address0 <= tmp_13_cast_fu_1572_p1(6 - 1 downto 0);
        else 
            sc_FIFO_DCT_mB_address0 <= "XXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mB_ce0_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter7) or (ap_const_logic_1 = ap_enable_reg_pp3_iter7))) then 
            sc_FIFO_DCT_mB_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mB_d0_assign_proc : process(tmp_19_0_6_reg_2719, tmp_19_1_6_reg_3161, ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp3_iter7)) then 
            sc_FIFO_DCT_mB_d0 <= tmp_19_1_6_reg_3161;
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter7)) then 
            sc_FIFO_DCT_mB_d0 <= tmp_19_0_6_reg_2719;
        else 
            sc_FIFO_DCT_mB_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mB_we0_assign_proc : process(ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575, ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022, ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022)))) then 
            sc_FIFO_DCT_mB_we0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mB_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mC_address0_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7, tmp_16_cast_fu_1628_p1, tmp_18_1_cast_fu_2253_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp3_iter7)) then 
            sc_FIFO_DCT_mC_address0 <= tmp_18_1_cast_fu_2253_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter7)) then 
            sc_FIFO_DCT_mC_address0 <= tmp_16_cast_fu_1628_p1(6 - 1 downto 0);
        else 
            sc_FIFO_DCT_mC_address0 <= "XXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mC_ce0_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter7) or (ap_const_logic_1 = ap_enable_reg_pp3_iter7))) then 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sc_FIFO_DCT_mC_d0_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7, tmp_15_cast_fu_1623_p1, tmp_17_1_cast_fu_2248_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp3_iter7)) then 
            sc_FIFO_DCT_mC_d0 <= tmp_17_1_cast_fu_2248_p1;
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter7)) then 
            sc_FIFO_DCT_mC_d0 <= tmp_15_cast_fu_1623_p1;
        else 
            sc_FIFO_DCT_mC_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sc_FIFO_DCT_mC_we0_assign_proc : process(ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575, ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022, ap_enable_reg_pp1_iter7, ap_enable_reg_pp3_iter7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter6_exitcond3_reg_2575)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter6_exitcond3_1_reg_3022)))) then 
            sc_FIFO_DCT_mC_we0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mC_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1536_p2 <= std_logic_vector(unsigned(tmp_11_reg_2679) + unsigned(tmp_12_0_2_reg_2689));
    tmp11_fu_1540_p2 <= std_logic_vector(unsigned(tmp_12_0_1_reg_2684) + unsigned(tmp_12_0_7_reg_2714));
    tmp12_fu_1544_p2 <= std_logic_vector(unsigned(tmp11_fu_1540_p2) + unsigned(tmp10_fu_1536_p2));
    tmp16_fu_1895_p2 <= std_logic_vector(unsigned(tmp_8_1_reg_2922) + unsigned(tmp_8_1_1_reg_2927));
    tmp17_fu_1899_p2 <= std_logic_vector(unsigned(tmp_8_1_2_reg_2932) + unsigned(tmp_8_1_3_reg_2937));
    tmp18_fu_1907_p2 <= std_logic_vector(unsigned(tmp17_reg_2957) + unsigned(tmp16_reg_2942));
    tmp19_fu_1911_p2 <= std_logic_vector(unsigned(tmp_8_1_4_reg_2962) + unsigned(tmp_8_1_5_reg_2967));
    tmp1_fu_1294_p2 <= std_logic_vector(unsigned(tmp2_reg_2495) + unsigned(tmp3_fu_1290_p2));
    tmp20_fu_1903_p2 <= std_logic_vector(unsigned(tmp_8_1_6_reg_2947) + unsigned(tmp_8_1_7_reg_2952));
    tmp21_fu_1915_p2 <= std_logic_vector(unsigned(tmp20_reg_2972) + unsigned(tmp19_fu_1911_p2));
    tmp24_fu_2140_p2 <= std_logic_vector(unsigned(tmp_12_1_5_reg_3146) + unsigned(tmp_12_1_6_reg_3151));
    tmp25_fu_2144_p2 <= std_logic_vector(unsigned(tmp_12_1_4_reg_3141) + unsigned(tmp_12_1_3_reg_3136));
    tmp26_fu_2148_p2 <= std_logic_vector(unsigned(tmp25_fu_2144_p2) + unsigned(tmp24_fu_2140_p2));
    tmp27_fu_2154_p2 <= std_logic_vector(unsigned(tmp_12_1_reg_3121) + unsigned(tmp_12_1_2_reg_3131));
    tmp28_fu_2158_p2 <= std_logic_vector(unsigned(tmp_12_1_1_reg_3126) + unsigned(tmp_12_1_7_reg_3156));
    tmp29_fu_2162_p2 <= std_logic_vector(unsigned(tmp28_fu_2158_p2) + unsigned(tmp27_fu_2154_p2));
    tmp2_fu_1274_p2 <= std_logic_vector(unsigned(tmp_8_0_1_reg_2480) + unsigned(tmp_8_reg_2475));
    tmp3_fu_1290_p2 <= std_logic_vector(unsigned(tmp_8_0_3_reg_2525) + unsigned(tmp_8_0_2_reg_2520));
    tmp4_fu_1299_p2 <= std_logic_vector(unsigned(tmp5_reg_2510) + unsigned(tmp6_reg_2530));
    tmp5_fu_1278_p2 <= std_logic_vector(unsigned(tmp_8_0_5_reg_2490) + unsigned(tmp_8_0_4_reg_2485));
    tmp6_fu_1286_p2 <= std_logic_vector(unsigned(tmp_8_0_7_reg_2505) + unsigned(tmp_8_0_6_reg_2500));
    tmp7_fu_1522_p2 <= std_logic_vector(unsigned(tmp_12_0_5_reg_2704) + unsigned(tmp_12_0_6_reg_2709));
    tmp8_fu_1526_p2 <= std_logic_vector(unsigned(tmp_12_0_4_reg_2699) + unsigned(tmp_12_0_3_reg_2694));
    tmp9_fu_1530_p2 <= std_logic_vector(unsigned(tmp8_fu_1526_p2) + unsigned(tmp7_fu_1522_p2));
    tmp_11_0_1_cast_fu_1360_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_1_fu_1354_p2),32));
    tmp_11_0_1_fu_1354_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_2);
    tmp_11_0_2_cast_fu_1371_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_2_fu_1365_p2),32));
    tmp_11_0_2_fu_1365_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_3);
    tmp_11_0_3_cast_fu_1382_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_3_fu_1376_p2),32));
    tmp_11_0_3_fu_1376_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_4);
    tmp_11_0_4_cast_fu_1393_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_4_fu_1387_p2),32));
    tmp_11_0_4_fu_1387_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_5);
    tmp_11_0_5_cast_fu_1404_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_5_fu_1398_p2),32));
    tmp_11_0_5_fu_1398_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_6);
    tmp_11_0_6_cast_fu_1415_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_6_fu_1409_p2),32));
    tmp_11_0_6_fu_1409_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_7);
    tmp_11_0_cast_fu_1349_p1 <= std_logic_vector(resize(unsigned(tmp_11_0_s_fu_1343_p2),32));
    tmp_11_0_s_fu_1343_p2 <= (tmp_4_fu_1330_p3 or ap_const_lv6_1);
    tmp_11_1_1_cast_fu_1995_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_1_fu_1989_p2),32));
    tmp_11_1_1_fu_1989_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_2);
    tmp_11_1_2_cast_fu_2006_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_2_fu_2000_p2),32));
    tmp_11_1_2_fu_2000_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_3);
    tmp_11_1_3_cast_fu_2017_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_3_fu_2011_p2),32));
    tmp_11_1_3_fu_2011_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_4);
    tmp_11_1_4_cast_fu_2028_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_4_fu_2022_p2),32));
    tmp_11_1_4_fu_2022_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_5);
    tmp_11_1_5_cast_fu_2039_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_5_fu_2033_p2),32));
    tmp_11_1_5_fu_2033_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_6);
    tmp_11_1_6_cast_fu_2050_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_6_fu_2044_p2),32));
    tmp_11_1_6_fu_2044_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_7);
    tmp_11_1_cast_fu_1984_p1 <= std_logic_vector(resize(unsigned(tmp_11_1_s_fu_1978_p2),32));
    tmp_11_1_s_fu_1978_p2 <= (tmp_4_1_fu_1965_p3 or ap_const_lv6_1);
    tmp_12_fu_1438_p2 <= std_logic_vector(unsigned(i0_cast4_reg_2277) + unsigned(tmp_4_reg_2584));
    tmp_13_1_cast_fu_1933_p1 <= std_logic_vector(resize(unsigned(tmp_13_1_fu_1927_p3),32));
    tmp_13_1_fu_1927_p3 <= (ap_pipeline_reg_pp2_iter2_tmp_27_reg_2867 & i0_1_s_reg_2731);
    tmp_13_cast_fu_1572_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp1_iter6_tmp_12_reg_2634),32));
    tmp_13_fu_1605_p3 <= 
        p_neg_t_fu_1586_p2 when (tmp_26_fu_1576_p3(0) = '1') else 
        p_lshr_f_cast_fu_1601_p1;
        tmp_14_cast_fu_1613_p1 <= std_logic_vector(resize(signed(tmp_13_fu_1605_p3),15));

    tmp_14_fu_1617_p2 <= std_logic_vector(unsigned(ap_const_lv15_7F) + unsigned(tmp_14_cast_fu_1613_p1));
    tmp_15_1_cast_fu_2196_p1 <= std_logic_vector(resize(unsigned(tmp_15_1_fu_2190_p3),32));
    tmp_15_1_fu_2190_p3 <= (ap_pipeline_reg_pp3_iter6_tmp_28_reg_3031 & i0_1_s_reg_2731);
        tmp_15_cast_fu_1623_p1 <= std_logic_vector(resize(signed(tmp_14_fu_1617_p2),32));

    tmp_15_fu_1420_p4 <= i0_reg_829(2 downto 1);
        tmp_16_1_cast_fu_2238_p1 <= std_logic_vector(resize(signed(tmp_16_1_fu_2230_p3),15));

    tmp_16_1_fu_2230_p3 <= 
        p_neg_t_1_fu_2211_p2 when (tmp_32_fu_2201_p3(0) = '1') else 
        p_lshr_f_1_cast_fu_2226_p1;
    tmp_16_cast_fu_1628_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp1_iter6_tmp_16_reg_2629),32));
    tmp_16_fu_1430_p3 <= (tmp_15_fu_1420_p4 & i1_1_reg_852);
        tmp_17_1_cast_fu_2248_p1 <= std_logic_vector(resize(signed(tmp_17_1_fu_2242_p2),32));

    tmp_17_1_fu_2242_p2 <= std_logic_vector(unsigned(ap_const_lv15_7F) + unsigned(tmp_16_1_cast_fu_2238_p1));
    tmp_18_1_cast_fu_2253_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter6_tmp_18_1_reg_3076),32));
    tmp_18_1_fu_2055_p2 <= std_logic_vector(unsigned(tmp_1_1_reg_3017) + unsigned(i1_1_1_cast_fu_1957_p1));
    tmp_19_0_6_fu_1550_p2 <= std_logic_vector(unsigned(tmp12_fu_1544_p2) + unsigned(tmp9_fu_1530_p2));
    tmp_19_1_6_fu_2168_p2 <= std_logic_vector(unsigned(tmp29_fu_2162_p2) + unsigned(tmp26_fu_2148_p2));
    tmp_19_read_fu_208_p2 <= (0=>s_done, others=>'-');
    tmp_1_1_fu_1938_p3 <= (i0_1_s_reg_2731 & ap_const_lv3_0);
    tmp_21_fu_1094_p1 <= i0_reg_829(3 - 1 downto 0);
    tmp_22_fu_1146_p1 <= i1_phi_fu_845_p4(3 - 1 downto 0);
    tmp_23_fu_1326_p1 <= i1_1_reg_852(3 - 1 downto 0);
    tmp_24_fu_1592_p4 <= tmp_19_0_6_reg_2719(31 downto 19);
    tmp_26_fu_1576_p3 <= tmp_19_0_6_reg_2719(31 downto 31);
    tmp_27_fu_1767_p1 <= i1_s_phi_fu_867_p4(3 - 1 downto 0);
    tmp_28_fu_1961_p1 <= i1_1_1_reg_874(3 - 1 downto 0);
    tmp_29_fu_2217_p4 <= tmp_19_1_6_reg_3161(31 downto 19);
    tmp_2_1_cast_fu_1779_p1 <= std_logic_vector(resize(unsigned(tmp_2_1_fu_1771_p3),32));
    tmp_2_1_fu_1771_p3 <= (tmp_27_fu_1767_p1 & ap_const_lv3_0);
    tmp_2_cast_fu_1158_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_1150_p3),32));
    tmp_2_fu_1150_p3 <= (tmp_22_fu_1146_p1 & ap_const_lv3_0);
    tmp_32_fu_2201_p3 <= tmp_19_1_6_reg_3161(31 downto 31);
    tmp_4_1_cast_fu_1973_p1 <= std_logic_vector(resize(unsigned(tmp_4_1_fu_1965_p3),32));
    tmp_4_1_fu_1965_p3 <= (tmp_28_fu_1961_p1 & ap_const_lv3_0);
    tmp_4_cast_fu_1338_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_1330_p3),32));
    tmp_4_fu_1330_p3 <= (tmp_23_fu_1326_p1 & ap_const_lv3_0);
    tmp_5_fu_1652_p2 <= (i0_reg_829 or ap_const_lv4_1);
    tmp_6_0_1_cast_fu_1014_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_1_fu_1008_p2),32));
    tmp_6_0_1_fu_1008_p2 <= (i0_reg_829 xor ap_const_lv4_8);
    tmp_6_0_2_cast_fu_1027_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_s_fu_1019_p3),32));
    tmp_6_0_2_fu_1041_p3 <= (ap_const_lv2_2 & i0_reg_829);
        tmp_6_0_3_cast1_fu_1032_p1 <= std_logic_vector(resize(signed(tmp_6_0_1_fu_1008_p2),5));

    tmp_6_0_3_cast_fu_1036_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_3_cast1_fu_1032_p1),32));
    tmp_6_0_4_cast_fu_1049_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_2_fu_1041_p3),32));
    tmp_6_0_5_cast_fu_1060_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_5_fu_1054_p2),32));
    tmp_6_0_5_fu_1054_p2 <= std_logic_vector(signed(ap_const_lv6_28) + signed(i0_cast4_fu_1004_p1));
        tmp_6_0_6_cast1_fu_1065_p1 <= std_logic_vector(resize(signed(tmp_6_0_s_fu_1019_p3),6));

    tmp_6_0_6_cast_fu_1069_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_6_cast1_fu_1065_p1),32));
        tmp_6_0_7_cast1_fu_1074_p1 <= std_logic_vector(resize(signed(tmp_6_0_1_fu_1008_p2),6));

    tmp_6_0_7_cast_fu_1078_p1 <= std_logic_vector(resize(unsigned(tmp_6_0_7_cast1_fu_1074_p1),32));
    tmp_6_0_s_fu_1019_p3 <= (ap_const_lv1_1 & i0_reg_829);
    tmp_6_1_1_cast_fu_1647_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_1_fu_1642_p2),32));
    tmp_6_1_1_fu_1642_p2 <= std_logic_vector(unsigned(i0_cast40_cast_reg_2370) + unsigned(ap_const_lv5_9));
    tmp_6_1_2_cast_fu_1666_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_s_fu_1658_p3),32));
    tmp_6_1_2_fu_1681_p3 <= (ap_const_lv2_2 & tmp_5_fu_1652_p2);
    tmp_6_1_3_cast_fu_1676_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_3_fu_1671_p2),32));
    tmp_6_1_3_fu_1671_p2 <= std_logic_vector(unsigned(i0_cast4_reg_2277) + unsigned(ap_const_lv6_19));
    tmp_6_1_4_cast_fu_1689_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_2_fu_1681_p3),32));
    tmp_6_1_5_cast_fu_1699_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_5_fu_1694_p2),32));
    tmp_6_1_5_fu_1694_p2 <= std_logic_vector(unsigned(i0_cast4_reg_2277) + unsigned(ap_const_lv6_29));
        tmp_6_1_6_cast1_fu_1704_p1 <= std_logic_vector(resize(signed(tmp_6_1_s_fu_1658_p3),6));

    tmp_6_1_6_cast_fu_1708_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_6_cast1_fu_1704_p1),32));
    tmp_6_1_7_cast_fu_1718_p1 <= std_logic_vector(resize(unsigned(tmp_6_1_7_fu_1713_p2),32));
    tmp_6_1_7_fu_1713_p2 <= std_logic_vector(unsigned(i0_cast1_reg_2360) + unsigned(ap_const_lv7_39));
    tmp_6_1_s_fu_1658_p3 <= (ap_const_lv1_1 & tmp_5_fu_1652_p2);
    tmp_7_0_1_cast_fu_1229_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_1_fu_1224_p2),32));
    tmp_7_0_1_fu_1224_p2 <= (tmp_2_reg_2424 or ap_const_lv6_2);
    tmp_7_0_2_cast_fu_1239_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_2_fu_1234_p2),32));
    tmp_7_0_2_fu_1234_p2 <= (tmp_2_reg_2424 or ap_const_lv6_3);
    tmp_7_0_3_cast_fu_1179_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_3_fu_1174_p2),32));
    tmp_7_0_3_fu_1174_p2 <= (tmp_2_reg_2424 or ap_const_lv6_4);
    tmp_7_0_4_cast_fu_1189_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_4_fu_1184_p2),32));
    tmp_7_0_4_fu_1184_p2 <= (tmp_2_reg_2424 or ap_const_lv6_5);
    tmp_7_0_5_cast_fu_1209_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_5_fu_1204_p2),32));
    tmp_7_0_5_fu_1204_p2 <= (tmp_2_reg_2424 or ap_const_lv6_6);
    tmp_7_0_6_cast_fu_1219_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_6_fu_1214_p2),32));
    tmp_7_0_6_fu_1214_p2 <= (tmp_2_reg_2424 or ap_const_lv6_7);
    tmp_7_0_cast_fu_1169_p1 <= std_logic_vector(resize(unsigned(tmp_7_0_s_fu_1163_p2),32));
    tmp_7_0_s_fu_1163_p2 <= (tmp_2_fu_1150_p3 or ap_const_lv6_1);
    tmp_7_1_1_cast_fu_1800_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_1_fu_1795_p2),32));
    tmp_7_1_1_fu_1795_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_2);
    tmp_7_1_2_cast_fu_1810_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_2_fu_1805_p2),32));
    tmp_7_1_2_fu_1805_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_3);
    tmp_7_1_3_cast_fu_1860_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_3_fu_1855_p2),32));
    tmp_7_1_3_fu_1855_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_4);
    tmp_7_1_4_cast_fu_1870_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_4_fu_1865_p2),32));
    tmp_7_1_4_fu_1865_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_5);
    tmp_7_1_5_cast_fu_1830_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_5_fu_1825_p2),32));
    tmp_7_1_5_fu_1825_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_6);
    tmp_7_1_6_cast_fu_1840_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_6_fu_1835_p2),32));
    tmp_7_1_6_fu_1835_p2 <= (tmp_2_1_reg_2872 or ap_const_lv6_7);
    tmp_7_1_cast_fu_1790_p1 <= std_logic_vector(resize(unsigned(tmp_7_1_s_fu_1784_p2),32));
    tmp_7_1_s_fu_1784_p2 <= (tmp_2_1_fu_1771_p3 or ap_const_lv6_1);
    tmp_9_cast_fu_1310_p1 <= std_logic_vector(resize(unsigned(tmp_9_reg_2515),32));
    tmp_9_fu_1282_p2 <= std_logic_vector(unsigned(i0_cast4_reg_2277) + unsigned(ap_pipeline_reg_pp0_iter1_tmp_2_reg_2424));
    tmp_read_fu_172_p2 <= (0=>s_buffered, others=>'-');
end behav;
