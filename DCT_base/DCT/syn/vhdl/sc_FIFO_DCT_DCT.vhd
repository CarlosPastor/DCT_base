-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sc_FIFO_DCT_DCT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sc_FIFO_DCT_mA_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mA_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mA_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_mB_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mB_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mB_we0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mB_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_mC_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sc_FIFO_DCT_mC_ce0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_we0 : OUT STD_LOGIC;
    sc_FIFO_DCT_mC_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_i : IN STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    sc_FIFO_DCT_exec_cnt_o_ap_vld : OUT STD_LOGIC;
    s_buffered : IN STD_LOGIC;
    s_working : OUT STD_LOGIC;
    s_working_ap_vld : OUT STD_LOGIC;
    s_DCT : OUT STD_LOGIC;
    s_DCT_ap_vld : OUT STD_LOGIC;
    s_done : IN STD_LOGIC );
end;


architecture behav of sc_FIFO_DCT_DCT is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_7F : STD_LOGIC_VECTOR (14 downto 0) := "000000001111111";

    signal b_a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_a_ce0 : STD_LOGIC;
    signal b_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_ce0 : STD_LOGIC;
    signal b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i0_cast_fu_743_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i0_cast_reg_1645 : STD_LOGIC_VECTOR (5 downto 0);
    signal i0_1_fu_753_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i0_1_reg_1656 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_2_fu_772_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_2_reg_1664 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_2_fu_782_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_1669 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond2_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_794_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1675 : STD_LOGIC_VECTOR (5 downto 0);
    signal i2_1_fu_812_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i2_1_reg_1683 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_23_fu_818_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_23_reg_1688 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond4_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_0_fu_886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_a_load_reg_1715 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sc_FIFO_DCT_mA_load_reg_1720 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_5_reg_1730 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sel_tmp_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1738 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1744 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1749 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_7_5_fu_961_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_5_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_9_fu_977_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_9_reg_1778 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_29_fu_993_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_29_reg_1783 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_30_fu_1001_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_30_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_fu_1027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal s_7_1_fu_1048_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_3_14_fu_1069_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_7_fu_1089_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_1_cast_fu_1105_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_1_cast_reg_1813 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i1_3_fu_1115_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_3_reg_1821 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_1125_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_reg_1826 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond3_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_3_fu_1183_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i2_3_reg_1835 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_30_fu_1189_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_reg_1840 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond5_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_0_2_21_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_2_21_reg_1861 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1263_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_reg_1869 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_reg_1874 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_1283_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_reg_1879 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_reg_1884 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal b_load_reg_1889 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_6_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal sel_tmp7_fu_1295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1907 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1913 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1918 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_reg_1924 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_7_34_fu_1356_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_34_reg_1942 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_36_fu_1372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_36_reg_1947 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_38_fu_1388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_38_reg_1952 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_39_fu_1396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_39_reg_1957 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_16_fu_1422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal s_7_17_fu_1443_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_33_fu_1464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_35_fu_1484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal i0_reg_299 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_read_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_7_2_reg_311 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_7_3_reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal s_6_2_reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_6_3_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_5_2_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_2_12_reg_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_4_2_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_4_reg_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_3_2_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_6_reg_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_2_2_reg_361 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_8_reg_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_1_2_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_27_reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_2_reg_381 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_reg_391 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_7_10_reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_reg_497 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_7_5_16_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_6_19_reg_607 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal s_6_5_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_6_6_reg_619 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_5_5_reg_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_32_reg_631 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_4_5_reg_541 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_11_reg_643 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_3_5_reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_12_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_2_5_reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_13_reg_667 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_1_5_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_14_reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_5_17_reg_585 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_1_reg_596 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_7_15_reg_691 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_2_reg_702 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_cast_fu_835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_cast_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_cast_fu_1100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_cast_fu_1206_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_cast_fu_1216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast_fu_1491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_1547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_1_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_19_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_20_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_21_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_22_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_23_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_24_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_25_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_14_read_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_778_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_fu_790_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_822_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_830_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i2_cast_fu_802_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_840_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp16_fu_856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp19_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_880_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel9_fu_953_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel8_fu_969_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_28_fu_985_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond2_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_1019_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel4_fu_1040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_fu_1055_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel7_fu_1061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_fu_1076_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_fu_1082_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1096_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_1121_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1193_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_1201_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i2_2_cast_fu_1173_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_1211_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp22_fu_1227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_fu_1221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp25_fu_1245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_fu_1239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp26_fu_1251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp23_fu_1233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp13_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel16_fu_1348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel19_fu_1364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_7_37_fu_1380_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond6_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel10_fu_1408_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel11_fu_1414_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel12_fu_1429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel13_fu_1435_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel14_fu_1450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel15_fu_1456_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel17_fu_1471_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel18_fu_1477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_cast_fu_1502_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_25_fu_1511_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_fu_1495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_1505_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_lshr_f_cast_fu_1520_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_fu_1524_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_cast_fu_1532_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_fu_1536_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);

    component sc_FIFO_DCT_mul_8bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sc_FIFO_DCT_mul_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_b_a IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_b IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sc_FIFO_DCT_DCT_a IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    b_a_U : component sc_FIFO_DCT_DCT_b_a
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_a_address0,
        ce0 => b_a_ce0,
        q0 => b_a_q0);

    b_U : component sc_FIFO_DCT_DCT_b
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_address0,
        ce0 => b_ce0,
        q0 => b_q0);

    a_U : component sc_FIFO_DCT_DCT_a
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => a_address0,
        ce0 => a_ce0,
        we0 => a_we0,
        d0 => s_0_reg_1709,
        q0 => a_q0);

    sc_FIFO_DCT_mul_8bkb_U0 : component sc_FIFO_DCT_mul_8bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => b_a_load_reg_1715,
        din1 => sc_FIFO_DCT_mA_load_reg_1720,
        ce => ap_const_logic_1,
        dout => grp_fu_895_p2);

    sc_FIFO_DCT_mul_3cud_U1 : component sc_FIFO_DCT_mul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_load_reg_1884,
        din1 => b_load_reg_1889,
        ce => ap_const_logic_1,
        dout => grp_fu_1290_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i0_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not((ap_const_lv1_0 = exitcond3_fu_1109_p2)))) then 
                i0_reg_299 <= i0_1_reg_1656;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_178_p2 = ap_const_lv1_0)))) then 
                i0_reg_299 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i1_1_reg_596_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                i1_1_reg_596 <= i1_3_reg_1821;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                i1_1_reg_596 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i1_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                i1_reg_391 <= i1_2_reg_1664;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                i1_reg_391 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i2_2_reg_702_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                i2_2_reg_702 <= i2_3_reg_1835;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                i2_2_reg_702 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i2_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                i2_reg_497 <= i2_1_reg_1683;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                i2_reg_497 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    s_0_2_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_0_2_reg_381 <= s_0_reg_1709;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_0_2_reg_381 <= s_0_1_fu_142;
            end if; 
        end if;
    end process;

    s_0_5_17_reg_585_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_0_5_17_reg_585 <= s_0_2_21_reg_1861;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_0_5_17_reg_585 <= s_0_2_reg_381;
            end if; 
        end if;
    end process;

    s_1_2_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_1_2_reg_371 <= s_7_27_reg_474;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_1_2_reg_371 <= s_7_19_fu_146;
            end if; 
        end if;
    end process;

    s_1_5_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_1_5_reg_574 <= s_7_14_reg_679;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_1_5_reg_574 <= s_1_2_reg_371;
            end if; 
        end if;
    end process;

    s_2_2_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_2_2_reg_361 <= s_7_8_reg_462;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_2_2_reg_361 <= s_7_20_fu_150;
            end if; 
        end if;
    end process;

    s_2_5_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_2_5_reg_563 <= s_7_13_reg_667;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_2_5_reg_563 <= s_2_2_reg_361;
            end if; 
        end if;
    end process;

    s_3_2_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_3_2_reg_351 <= s_7_6_reg_450;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_3_2_reg_351 <= s_7_21_fu_154;
            end if; 
        end if;
    end process;

    s_3_5_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_3_5_reg_552 <= s_7_12_reg_655;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_3_5_reg_552 <= s_3_2_reg_351;
            end if; 
        end if;
    end process;

    s_4_2_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_4_2_reg_341 <= s_7_4_reg_438;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_4_2_reg_341 <= s_7_22_fu_158;
            end if; 
        end if;
    end process;

    s_4_5_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_4_5_reg_541 <= s_7_11_reg_643;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_4_5_reg_541 <= s_4_2_reg_341;
            end if; 
        end if;
    end process;

    s_5_2_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_5_2_reg_331 <= s_7_2_12_reg_426;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_5_2_reg_331 <= s_7_23_fu_162;
            end if; 
        end if;
    end process;

    s_5_5_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_5_5_reg_530 <= s_7_32_reg_631;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_5_5_reg_530 <= s_5_2_reg_331;
            end if; 
        end if;
    end process;

    s_6_2_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_6_2_reg_321 <= s_6_3_reg_414;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_6_2_reg_321 <= s_7_24_fu_166;
            end if; 
        end if;
    end process;

    s_6_3_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_6_3_reg_414 <= s_7_1_fu_1048_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_6_3_reg_414 <= s_6_2_reg_321;
            end if; 
        end if;
    end process;

    s_6_5_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_6_5_reg_519 <= s_6_6_reg_619;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_6_5_reg_519 <= s_6_2_reg_321;
            end if; 
        end if;
    end process;

    s_6_6_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_6_6_reg_619 <= s_7_17_fu_1443_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_6_6_reg_619 <= s_6_5_reg_519;
            end if; 
        end if;
    end process;

    s_7_10_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_10_reg_486 <= s_7_30_reg_1788;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_10_reg_486 <= s_0_2_reg_381;
            end if; 
        end if;
    end process;

    s_7_11_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_11_reg_643 <= s_7_34_reg_1942;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_11_reg_643 <= s_4_5_reg_541;
            end if; 
        end if;
    end process;

    s_7_12_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_12_reg_655 <= s_7_35_fu_1484_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_12_reg_655 <= s_3_5_reg_552;
            end if; 
        end if;
    end process;

    s_7_13_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_13_reg_667 <= s_7_36_reg_1947;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_13_reg_667 <= s_2_5_reg_563;
            end if; 
        end if;
    end process;

    s_7_14_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_14_reg_679 <= s_7_38_reg_1952;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_14_reg_679 <= s_1_5_reg_574;
            end if; 
        end if;
    end process;

    s_7_15_reg_691_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_15_reg_691 <= s_7_39_reg_1957;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_15_reg_691 <= s_0_5_17_reg_585;
            end if; 
        end if;
    end process;

    s_7_27_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_27_reg_474 <= s_7_29_reg_1783;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_27_reg_474 <= s_1_2_reg_371;
            end if; 
        end if;
    end process;

    s_7_2_12_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_2_12_reg_426 <= s_7_3_14_fu_1069_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_2_12_reg_426 <= s_5_2_reg_331;
            end if; 
        end if;
    end process;

    s_7_2_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                s_7_2_reg_311 <= s_7_3_reg_402;
            elsif (((ap_CS_fsm_state4 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond1_fu_747_p2))) then 
                s_7_2_reg_311 <= s_7_25_fu_170;
            end if; 
        end if;
    end process;

    s_7_32_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_32_reg_631 <= s_7_33_fu_1464_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_32_reg_631 <= s_5_5_reg_530;
            end if; 
        end if;
    end process;

    s_7_3_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_3_reg_402 <= s_7_fu_1027_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_3_reg_402 <= s_7_2_reg_311;
            end if; 
        end if;
    end process;

    s_7_4_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_4_reg_438 <= s_7_5_reg_1773;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_4_reg_438 <= s_4_2_reg_341;
            end if; 
        end if;
    end process;

    s_7_5_16_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                s_7_5_16_reg_508 <= s_7_6_19_reg_607;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then 
                s_7_5_16_reg_508 <= s_7_2_reg_311;
            end if; 
        end if;
    end process;

    s_7_6_19_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                s_7_6_19_reg_607 <= s_7_16_fu_1422_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then 
                s_7_6_19_reg_607 <= s_7_5_16_reg_508;
            end if; 
        end if;
    end process;

    s_7_6_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_6_reg_450 <= s_7_7_fu_1089_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_6_reg_450 <= s_3_2_reg_351;
            end if; 
        end if;
    end process;

    s_7_8_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                s_7_8_reg_462 <= s_7_9_reg_1778;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then 
                s_7_8_reg_462 <= s_2_2_reg_361;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then
                a_load_reg_1884 <= a_q0;
                b_load_reg_1889 <= b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                b_a_load_reg_1715 <= b_a_q0;
                sc_FIFO_DCT_mA_load_reg_1720 <= sc_FIFO_DCT_mA_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state4 = ap_const_lv1_1))) then
                i0_1_reg_1656 <= i0_1_fu_753_p2;
                    i0_cast_reg_1645(3 downto 0) <= i0_cast_fu_743_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                    i1_1_cast_reg_1813(3 downto 0) <= i1_1_cast_fu_1105_p1(3 downto 0);
                i1_3_reg_1821 <= i1_3_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                i1_2_reg_1664 <= i1_2_fu_772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then
                i2_1_reg_1683 <= i2_1_fu_812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                i2_3_reg_1835 <= i2_3_fu_1183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                or_cond3_reg_1765 <= or_cond3_fu_947_p2;
                or_cond_reg_1760 <= or_cond_fu_935_p2;
                s_0_5_reg_1730 <= grp_fu_895_p2;
                s_7_29_reg_1783 <= s_7_29_fu_993_p3;
                s_7_30_reg_1788 <= s_7_30_fu_1001_p3;
                s_7_5_reg_1773 <= s_7_5_fu_961_p3;
                s_7_9_reg_1778 <= s_7_9_fu_977_p3;
                sel_tmp2_reg_1744 <= sel_tmp2_fu_905_p2;
                sel_tmp4_reg_1749 <= sel_tmp4_fu_910_p2;
                sel_tmp8_reg_1755 <= sel_tmp8_fu_920_p2;
                sel_tmp_reg_1738 <= sel_tmp_fu_900_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then
                or_cond4_reg_1929 <= or_cond4_fu_1330_p2;
                or_cond7_reg_1934 <= or_cond7_fu_1342_p2;
                s_0_6_reg_1899 <= grp_fu_1290_p2;
                s_7_34_reg_1942 <= s_7_34_fu_1356_p3;
                s_7_36_reg_1947 <= s_7_36_fu_1372_p3;
                s_7_38_reg_1952 <= s_7_38_fu_1388_p3;
                s_7_39_reg_1957 <= s_7_39_fu_1396_p3;
                sel_tmp11_reg_1924 <= sel_tmp11_fu_1315_p2;
                sel_tmp5_reg_1918 <= sel_tmp5_fu_1305_p2;
                sel_tmp7_reg_1907 <= sel_tmp7_fu_1295_p2;
                sel_tmp9_reg_1913 <= sel_tmp9_fu_1300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not((ap_const_lv1_0 = exitcond3_fu_1109_p2)))) then
                s_0_1_fu_142 <= s_0_5_17_reg_585;
                s_7_19_fu_146 <= s_1_5_reg_574;
                s_7_20_fu_150 <= s_2_5_reg_563;
                s_7_21_fu_154 <= s_3_5_reg_552;
                s_7_22_fu_158 <= s_4_5_reg_541;
                s_7_23_fu_162 <= s_5_5_reg_530;
                s_7_24_fu_166 <= s_6_5_reg_519;
                s_7_25_fu_170 <= s_7_5_16_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not((ap_const_lv1_0 = exitcond5_fu_1177_p2)))) then
                s_0_2_21_reg_1861 <= s_0_2_21_fu_1257_p2;
                tmp_16_reg_1879 <= tmp_16_fu_1283_p2;
                tmp_24_reg_1874 <= p_neg_fu_1267_p2(31 downto 19);
                tmp_8_reg_1869 <= tmp_8_fu_1263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_lv1_0 = exitcond4_fu_806_p2)))) then
                s_0_reg_1709 <= s_0_fu_886_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((exitcond2_fu_766_p2 = ap_const_lv1_0)))) then
                    tmp_1_reg_1675(5 downto 3) <= tmp_1_fu_794_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond4_fu_806_p2))) then
                tmp_23_reg_1688 <= tmp_23_fu_818_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (exitcond2_fu_766_p2 = ap_const_lv1_0))) then
                    tmp_2_reg_1669(5 downto 3) <= tmp_2_fu_782_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and (ap_const_lv1_0 = exitcond5_fu_1177_p2))) then
                tmp_30_reg_1840 <= tmp_30_fu_1189_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = exitcond3_fu_1109_p2))) then
                    tmp_4_reg_1826(5 downto 3) <= tmp_4_fu_1125_p3(5 downto 3);
            end if;
        end if;
    end process;
    i0_cast_reg_1645(5 downto 4) <= "00";
    tmp_2_reg_1669(2 downto 0) <= "000";
    tmp_1_reg_1675(2 downto 0) <= "000";
    i1_1_cast_reg_1813(5 downto 4) <= "00";
    tmp_4_reg_1826(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond2_fu_766_p2, exitcond4_fu_806_p2, exitcond3_fu_1109_p2, exitcond5_fu_1177_p2, tmp_read_fu_178_p2, exitcond1_fu_747_p2, tmp_14_read_fu_214_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (not((tmp_read_fu_178_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((ap_const_lv1_0 = exitcond1_fu_747_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((exitcond2_fu_766_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_806_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state14 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_1109_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_1177_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (not((tmp_14_read_fu_214_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state13, tmp_3_cast_fu_1100_p1, tmp_10_cast_fu_1206_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            a_address0 <= tmp_10_cast_fu_1206_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            a_address0 <= tmp_3_cast_fu_1100_p1(6 - 1 downto 0);
        else 
            a_address0 <= "XXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            a_we0 <= ap_const_logic_1;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    b_a_address0 <= tmp_6_cast_fu_835_p1(6 - 1 downto 0);

    b_a_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            b_a_ce0 <= ap_const_logic_1;
        else 
            b_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    b_address0 <= tmp_11_cast_fu_1216_p1(6 - 1 downto 0);

    b_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_747_p2 <= "1" when (i0_reg_299 = ap_const_lv4_8) else "0";
    exitcond2_fu_766_p2 <= "1" when (i1_reg_391 = ap_const_lv4_8) else "0";
    exitcond3_fu_1109_p2 <= "1" when (i1_1_reg_596 = ap_const_lv4_8) else "0";
    exitcond4_fu_806_p2 <= "1" when (i2_reg_497 = ap_const_lv4_8) else "0";
    exitcond5_fu_1177_p2 <= "1" when (i2_2_reg_702 = ap_const_lv4_8) else "0";
    i0_1_fu_753_p2 <= std_logic_vector(unsigned(i0_reg_299) + unsigned(ap_const_lv4_1));
    i0_cast_fu_743_p1 <= std_logic_vector(resize(unsigned(i0_reg_299),6));
    i1_1_cast_fu_1105_p1 <= std_logic_vector(resize(unsigned(i1_1_reg_596),6));
    i1_2_fu_772_p2 <= std_logic_vector(unsigned(i1_reg_391) + unsigned(ap_const_lv4_1));
    i1_3_fu_1115_p2 <= std_logic_vector(unsigned(i1_1_reg_596) + unsigned(ap_const_lv4_1));
    i2_1_fu_812_p2 <= std_logic_vector(unsigned(i2_reg_497) + unsigned(ap_const_lv4_1));
    i2_2_cast_fu_1173_p1 <= std_logic_vector(resize(unsigned(i2_2_reg_702),6));
    i2_3_fu_1183_p2 <= std_logic_vector(unsigned(i2_2_reg_702) + unsigned(ap_const_lv4_1));
    i2_cast_fu_802_p1 <= std_logic_vector(resize(unsigned(i2_reg_497),6));
    newSel10_fu_1408_p3 <= 
        s_7_6_19_reg_607 when (sel_tmp7_reg_1907(0) = '1') else 
        s_0_6_reg_1899;
    newSel11_fu_1414_p3 <= 
        s_7_6_19_reg_607 when (or_cond6_fu_1404_p2(0) = '1') else 
        newSel10_fu_1408_p3;
    newSel12_fu_1429_p3 <= 
        s_0_6_reg_1899 when (sel_tmp7_reg_1907(0) = '1') else 
        s_6_6_reg_619;
    newSel13_fu_1435_p3 <= 
        s_6_6_reg_619 when (or_cond6_fu_1404_p2(0) = '1') else 
        newSel12_fu_1429_p3;
    newSel14_fu_1450_p3 <= 
        s_7_32_reg_631 when (sel_tmp5_reg_1918(0) = '1') else 
        s_0_6_reg_1899;
    newSel15_fu_1456_p3 <= 
        newSel14_fu_1450_p3 when (or_cond6_fu_1404_p2(0) = '1') else 
        s_7_32_reg_631;
    newSel16_fu_1348_p3 <= 
        grp_fu_1290_p2 when (sel_tmp5_fu_1305_p2(0) = '1') else 
        s_7_11_reg_643;
    newSel17_fu_1471_p3 <= 
        s_7_12_reg_655 when (sel_tmp11_reg_1924(0) = '1') else 
        s_0_6_reg_1899;
    newSel18_fu_1477_p3 <= 
        s_7_12_reg_655 when (or_cond4_reg_1929(0) = '1') else 
        newSel17_fu_1471_p3;
    newSel19_fu_1364_p3 <= 
        grp_fu_1290_p2 when (sel_tmp11_fu_1315_p2(0) = '1') else 
        s_7_13_reg_667;
    newSel1_fu_1019_p3 <= 
        s_7_3_reg_402 when (or_cond2_fu_1009_p2(0) = '1') else 
        newSel_fu_1013_p3;
    newSel2_fu_1076_p3 <= 
        s_7_6_reg_450 when (sel_tmp8_reg_1755(0) = '1') else 
        s_0_5_reg_1730;
    newSel3_fu_1034_p3 <= 
        s_0_5_reg_1730 when (sel_tmp_reg_1738(0) = '1') else 
        s_6_3_reg_414;
    newSel4_fu_1040_p3 <= 
        s_6_3_reg_414 when (or_cond2_fu_1009_p2(0) = '1') else 
        newSel3_fu_1034_p3;
    newSel5_fu_1082_p3 <= 
        s_7_6_reg_450 when (or_cond_reg_1760(0) = '1') else 
        newSel2_fu_1076_p3;
    newSel6_fu_1055_p3 <= 
        s_7_2_12_reg_426 when (sel_tmp4_reg_1749(0) = '1') else 
        s_0_5_reg_1730;
    newSel7_fu_1061_p3 <= 
        newSel6_fu_1055_p3 when (or_cond2_fu_1009_p2(0) = '1') else 
        s_7_2_12_reg_426;
    newSel8_fu_969_p3 <= 
        grp_fu_895_p2 when (sel_tmp8_fu_920_p2(0) = '1') else 
        s_7_8_reg_462;
    newSel9_fu_953_p3 <= 
        grp_fu_895_p2 when (sel_tmp4_fu_910_p2(0) = '1') else 
        s_7_4_reg_438;
    newSel_fu_1013_p3 <= 
        s_7_3_reg_402 when (sel_tmp_reg_1738(0) = '1') else 
        s_0_5_reg_1730;
    or_cond1_fu_941_p2 <= (sel_tmp8_fu_920_p2 or sel_tmp6_fu_915_p2);
    or_cond2_fu_1009_p2 <= (sel_tmp4_reg_1749 or sel_tmp2_reg_1744);
    or_cond3_fu_947_p2 <= (or_cond_fu_935_p2 or or_cond1_fu_941_p2);
    or_cond4_fu_1330_p2 <= (sel_tmp13_fu_1325_p2 or sel_tmp12_fu_1320_p2);
    or_cond5_fu_1336_p2 <= (sel_tmp11_fu_1315_p2 or sel_tmp10_fu_1310_p2);
    or_cond6_fu_1404_p2 <= (sel_tmp5_reg_1918 or sel_tmp9_reg_1913);
    or_cond7_fu_1342_p2 <= (or_cond4_fu_1330_p2 or or_cond5_fu_1336_p2);
    or_cond_fu_935_p2 <= (sel_tmp3_fu_930_p2 or sel_tmp1_fu_925_p2);
    p_lshr_cast_fu_1502_p1 <= std_logic_vector(resize(unsigned(tmp_24_reg_1874),14));
    p_lshr_f_cast_fu_1520_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_1511_p4),14));
    p_neg_fu_1267_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(s_0_2_21_fu_1257_p2));
    p_neg_t_fu_1505_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(p_lshr_cast_fu_1502_p1));
    s_0_2_21_fu_1257_p2 <= std_logic_vector(unsigned(tmp26_fu_1251_p2) + unsigned(tmp23_fu_1233_p2));
    s_0_fu_886_p2 <= std_logic_vector(unsigned(tmp20_fu_880_p2) + unsigned(tmp17_fu_862_p2));
    s_7_16_fu_1422_p3 <= 
        s_7_6_19_reg_607 when (or_cond7_reg_1934(0) = '1') else 
        newSel11_fu_1414_p3;
    s_7_17_fu_1443_p3 <= 
        s_6_6_reg_619 when (or_cond7_reg_1934(0) = '1') else 
        newSel13_fu_1435_p3;
    s_7_1_fu_1048_p3 <= 
        s_6_3_reg_414 when (or_cond3_reg_1765(0) = '1') else 
        newSel4_fu_1040_p3;
    s_7_28_fu_985_p3 <= 
        grp_fu_895_p2 when (sel_tmp1_fu_925_p2(0) = '1') else 
        s_7_27_reg_474;
    s_7_29_fu_993_p3 <= 
        s_7_27_reg_474 when (sel_tmp3_fu_930_p2(0) = '1') else 
        s_7_28_fu_985_p3;
    s_7_30_fu_1001_p3 <= 
        grp_fu_895_p2 when (sel_tmp3_fu_930_p2(0) = '1') else 
        s_7_10_reg_486;
    s_7_33_fu_1464_p3 <= 
        s_7_32_reg_631 when (or_cond7_reg_1934(0) = '1') else 
        newSel15_fu_1456_p3;
    s_7_34_fu_1356_p3 <= 
        s_7_11_reg_643 when (or_cond7_fu_1342_p2(0) = '1') else 
        newSel16_fu_1348_p3;
    s_7_35_fu_1484_p3 <= 
        newSel18_fu_1477_p3 when (or_cond7_reg_1934(0) = '1') else 
        s_7_12_reg_655;
    s_7_36_fu_1372_p3 <= 
        s_7_13_reg_667 when (or_cond4_fu_1330_p2(0) = '1') else 
        newSel19_fu_1364_p3;
    s_7_37_fu_1380_p3 <= 
        grp_fu_1290_p2 when (sel_tmp12_fu_1320_p2(0) = '1') else 
        s_7_14_reg_679;
    s_7_38_fu_1388_p3 <= 
        s_7_14_reg_679 when (sel_tmp13_fu_1325_p2(0) = '1') else 
        s_7_37_fu_1380_p3;
    s_7_39_fu_1396_p3 <= 
        grp_fu_1290_p2 when (sel_tmp13_fu_1325_p2(0) = '1') else 
        s_7_15_reg_691;
    s_7_3_14_fu_1069_p3 <= 
        s_7_2_12_reg_426 when (or_cond3_reg_1765(0) = '1') else 
        newSel7_fu_1061_p3;
    s_7_5_fu_961_p3 <= 
        s_7_4_reg_438 when (or_cond3_fu_947_p2(0) = '1') else 
        newSel9_fu_953_p3;
    s_7_7_fu_1089_p3 <= 
        newSel5_fu_1082_p3 when (or_cond3_reg_1765(0) = '1') else 
        s_7_6_reg_450;
    s_7_9_fu_977_p3 <= 
        s_7_8_reg_462 when (or_cond_fu_935_p2(0) = '1') else 
        newSel8_fu_969_p3;
    s_7_fu_1027_p3 <= 
        s_7_3_reg_402 when (or_cond3_reg_1765(0) = '1') else 
        newSel1_fu_1019_p3;

    s_DCT_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, tmp_14_read_fu_214_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state24) and not((tmp_14_read_fu_214_p2 = ap_const_lv1_0)))) then 
            s_DCT <= ap_const_logic_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            s_DCT <= ap_const_logic_1;
        else 
            s_DCT <= 'X';
        end if; 
    end process;


    s_DCT_ap_vld_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, tmp_14_read_fu_214_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not((tmp_14_read_fu_214_p2 = ap_const_lv1_0))))) then 
            s_DCT_ap_vld <= ap_const_logic_1;
        else 
            s_DCT_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    s_working_assign_proc : process(ap_CS_fsm_state3, tmp_read_fu_178_p2, ap_CS_fsm_state23)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            s_working <= ap_const_logic_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_178_p2 = ap_const_lv1_0)))) then 
            s_working <= ap_const_logic_1;
        else 
            s_working <= 'X';
        end if; 
    end process;


    s_working_ap_vld_assign_proc : process(ap_CS_fsm_state3, tmp_read_fu_178_p2, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and not((tmp_read_fu_178_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            s_working_ap_vld <= ap_const_logic_1;
        else 
            s_working_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_exec_cnt_o <= std_logic_vector(unsigned(sc_FIFO_DCT_exec_cnt_i) + unsigned(ap_const_lv32_1));

    sc_FIFO_DCT_exec_cnt_o_ap_vld_assign_proc : process(ap_CS_fsm_state4, exitcond1_fu_747_p2)
    begin
        if (((ap_CS_fsm_state4 = ap_const_lv1_1) and not((ap_const_lv1_0 = exitcond1_fu_747_p2)))) then 
            sc_FIFO_DCT_exec_cnt_o_ap_vld <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_exec_cnt_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_mA_address0 <= tmp_7_cast_fu_845_p1(6 - 1 downto 0);

    sc_FIFO_DCT_mA_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            sc_FIFO_DCT_mA_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mA_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_mB_address0 <= tmp_8_cast_fu_1491_p1(6 - 1 downto 0);

    sc_FIFO_DCT_mB_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            sc_FIFO_DCT_mB_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mB_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_mB_d0 <= s_0_2_21_reg_1861;

    sc_FIFO_DCT_mB_we0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state22)))) then 
            sc_FIFO_DCT_mB_we0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mB_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sc_FIFO_DCT_mC_address0 <= tmp_16_cast_fu_1547_p1(6 - 1 downto 0);

    sc_FIFO_DCT_mC_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mC_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sc_FIFO_DCT_mC_d0 <= std_logic_vector(resize(signed(tmp_15_fu_1536_p2),32));


    sc_FIFO_DCT_mC_we0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state22)))) then 
            sc_FIFO_DCT_mC_we0 <= ap_const_logic_1;
        else 
            sc_FIFO_DCT_mC_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp10_fu_1310_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_3) else "0";
    sel_tmp11_fu_1315_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_2) else "0";
    sel_tmp12_fu_1320_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_1) else "0";
    sel_tmp13_fu_1325_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_0) else "0";
    sel_tmp1_fu_925_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_1) else "0";
    sel_tmp2_fu_905_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_5) else "0";
    sel_tmp3_fu_930_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_0) else "0";
    sel_tmp4_fu_910_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_4) else "0";
    sel_tmp5_fu_1305_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_4) else "0";
    sel_tmp6_fu_915_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_3) else "0";
    sel_tmp7_fu_1295_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_6) else "0";
    sel_tmp8_fu_920_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_2) else "0";
    sel_tmp9_fu_1300_p2 <= "1" when (tmp_30_reg_1840 = ap_const_lv3_5) else "0";
    sel_tmp_fu_900_p2 <= "1" when (tmp_23_reg_1688 = ap_const_lv3_6) else "0";
    tmp15_fu_850_p2 <= std_logic_vector(unsigned(s_7_2_12_reg_426) + unsigned(s_6_3_reg_414));
    tmp16_fu_856_p2 <= std_logic_vector(unsigned(s_7_4_reg_438) + unsigned(s_7_6_reg_450));
    tmp17_fu_862_p2 <= std_logic_vector(unsigned(tmp16_fu_856_p2) + unsigned(tmp15_fu_850_p2));
    tmp18_fu_868_p2 <= std_logic_vector(unsigned(s_7_10_reg_486) + unsigned(s_7_8_reg_462));
    tmp19_fu_874_p2 <= std_logic_vector(unsigned(s_7_27_reg_474) + unsigned(s_7_3_reg_402));
    tmp20_fu_880_p2 <= std_logic_vector(unsigned(tmp19_fu_874_p2) + unsigned(tmp18_fu_868_p2));
    tmp21_fu_1221_p2 <= std_logic_vector(unsigned(s_7_32_reg_631) + unsigned(s_6_6_reg_619));
    tmp22_fu_1227_p2 <= std_logic_vector(unsigned(s_7_11_reg_643) + unsigned(s_7_12_reg_655));
    tmp23_fu_1233_p2 <= std_logic_vector(unsigned(tmp22_fu_1227_p2) + unsigned(tmp21_fu_1221_p2));
    tmp24_fu_1239_p2 <= std_logic_vector(unsigned(s_7_15_reg_691) + unsigned(s_7_13_reg_667));
    tmp25_fu_1245_p2 <= std_logic_vector(unsigned(s_7_14_reg_679) + unsigned(s_7_6_19_reg_607));
    tmp26_fu_1251_p2 <= std_logic_vector(unsigned(tmp25_fu_1245_p2) + unsigned(tmp24_fu_1239_p2));
    tmp_10_cast_fu_1206_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_1201_p2),32));
    tmp_10_fu_1201_p2 <= std_logic_vector(unsigned(i0_cast_reg_1645) + unsigned(tmp_9_fu_1193_p3));
    tmp_11_cast_fu_1216_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_1211_p2),32));
    tmp_11_fu_1211_p2 <= std_logic_vector(unsigned(tmp_4_reg_1826) + unsigned(i2_2_cast_fu_1173_p1));
        tmp_13_cast_fu_1532_p1 <= std_logic_vector(resize(signed(tmp_13_fu_1524_p3),15));

    tmp_13_fu_1524_p3 <= 
        p_neg_t_fu_1505_p2 when (tmp_29_fu_1495_p3(0) = '1') else 
        p_lshr_f_cast_fu_1520_p1;
    tmp_14_read_fu_214_p2 <= (0=>s_done, others=>'-');
    tmp_15_fu_1536_p2 <= std_logic_vector(signed(tmp_13_cast_fu_1532_p1) + signed(ap_const_lv15_7F));
    tmp_16_cast_fu_1547_p1 <= std_logic_vector(resize(unsigned(tmp_16_reg_1879),32));
    tmp_16_fu_1283_p2 <= std_logic_vector(unsigned(tmp_1_reg_1675) + unsigned(i1_1_cast_reg_1813));
    tmp_1_fu_794_p3 <= (tmp_20_fu_790_p1 & ap_const_lv3_0);
    tmp_20_fu_790_p1 <= i0_reg_299(3 - 1 downto 0);
    tmp_21_fu_778_p1 <= i1_reg_391(3 - 1 downto 0);
    tmp_22_fu_1121_p1 <= i1_1_reg_596(3 - 1 downto 0);
    tmp_23_fu_818_p1 <= i2_reg_497(3 - 1 downto 0);
    tmp_25_fu_1511_p4 <= s_0_2_21_reg_1861(31 downto 19);
    tmp_29_fu_1495_p3 <= s_0_2_21_reg_1861(31 downto 31);
    tmp_2_fu_782_p3 <= (tmp_21_fu_778_p1 & ap_const_lv3_0);
    tmp_30_fu_1189_p1 <= i2_2_reg_702(3 - 1 downto 0);
    tmp_3_cast_fu_1100_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_1096_p2),32));
    tmp_3_fu_1096_p2 <= std_logic_vector(unsigned(tmp_2_reg_1669) + unsigned(i0_cast_reg_1645));
    tmp_4_fu_1125_p3 <= (tmp_22_fu_1121_p1 & ap_const_lv3_0);
    tmp_5_fu_822_p3 <= (tmp_23_fu_818_p1 & ap_const_lv3_0);
    tmp_6_cast_fu_835_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_830_p2),32));
    tmp_6_fu_830_p2 <= std_logic_vector(unsigned(i0_cast_reg_1645) + unsigned(tmp_5_fu_822_p3));
    tmp_7_cast_fu_845_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_840_p2),32));
    tmp_7_fu_840_p2 <= std_logic_vector(unsigned(tmp_2_reg_1669) + unsigned(i2_cast_fu_802_p1));
    tmp_8_cast_fu_1491_p1 <= std_logic_vector(resize(unsigned(tmp_8_reg_1869),32));
    tmp_8_fu_1263_p2 <= std_logic_vector(unsigned(i0_cast_reg_1645) + unsigned(tmp_4_reg_1826));
    tmp_9_fu_1193_p3 <= (tmp_30_fu_1189_p1 & ap_const_lv3_0);
    tmp_read_fu_178_p2 <= (0=>s_buffered, others=>'-');
end behav;
