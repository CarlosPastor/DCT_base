// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sc_FIFO_DCT_buffering.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sc_FIFO_DCT_buffering::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sc_FIFO_DCT_buffering::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state1 = "1";
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state2 = "10";
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state3 = "100";
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state4 = "1000";
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state5 = "10000";
const sc_lv<6> sc_FIFO_DCT_buffering::ap_ST_fsm_state6 = "100000";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_3 = "11";
const sc_lv<1> sc_FIFO_DCT_buffering::ap_const_lv1_1 = "1";
const sc_lv<1> sc_FIFO_DCT_buffering::ap_const_lv1_0 = "0";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_1 = "1";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_2 = "10";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_4 = "100";
const sc_lv<32> sc_FIFO_DCT_buffering::ap_const_lv32_40 = "1000000";

sc_FIFO_DCT_buffering::sc_FIFO_DCT_buffering(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_din_blk_n);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_din_read);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );

    SC_METHOD(thread_grp_read_fu_92_p2);
    sensitive << ( s_working );
    sensitive << ( grp_read_fu_92_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_138_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_2_fu_165_p2);
    sensitive << ( i_fu_88 );

    SC_METHOD(thread_s_buffered);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );
    sensitive << ( tmp_8_fu_171_p2 );
    sensitive << ( grp_read_fu_92_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_s_buffered_ap_vld);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );
    sensitive << ( tmp_8_fu_171_p2 );
    sensitive << ( grp_read_fu_92_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sc_FIFO_DCT_mA_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_fu_88 );

    SC_METHOD(thread_sc_FIFO_DCT_mA_ce0);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );

    SC_METHOD(thread_sc_FIFO_DCT_mA_d0);
    sensitive << ( din_dout );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sc_FIFO_DCT_mA_we0);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );

    SC_METHOD(thread_tmp_4_fu_138_p0);
    sensitive << ( s_working );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_4_fu_138_p2);
    sensitive << ( tmp_4_fu_138_p0 );

    SC_METHOD(thread_tmp_5_nbreadreq_fu_98_p3);
    sensitive << ( din_empty_n );

    SC_METHOD(thread_tmp_8_fu_171_p2);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );
    sensitive << ( i_2_fu_165_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( din_empty_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_5_nbreadreq_fu_98_p3 );
    sensitive << ( tmp_8_fu_171_p2 );
    sensitive << ( grp_read_fu_92_p2 );
    sensitive << ( tmp_4_fu_138_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sc_FIFO_DCT_buffering_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, din_dout, "(port)din_dout");
    sc_trace(mVcdFile, din_empty_n, "(port)din_empty_n");
    sc_trace(mVcdFile, din_read, "(port)din_read");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_address0, "(port)sc_FIFO_DCT_mA_address0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_ce0, "(port)sc_FIFO_DCT_mA_ce0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_we0, "(port)sc_FIFO_DCT_mA_we0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_d0, "(port)sc_FIFO_DCT_mA_d0");
    sc_trace(mVcdFile, s_buffered, "(port)s_buffered");
    sc_trace(mVcdFile, s_buffered_ap_vld, "(port)s_buffered_ap_vld");
    sc_trace(mVcdFile, s_working, "(port)s_working");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, din_blk_n, "din_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_5_nbreadreq_fu_98_p3, "tmp_5_nbreadreq_fu_98_p3");
    sc_trace(mVcdFile, i_fu_88, "i_fu_88");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_2_fu_165_p2, "i_2_fu_165_p2");
    sc_trace(mVcdFile, tmp_8_fu_171_p2, "tmp_8_fu_171_p2");
    sc_trace(mVcdFile, grp_read_fu_92_p2, "grp_read_fu_92_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_138_p2, "tmp_4_fu_138_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_4_fu_138_p0, "tmp_4_fu_138_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sc_FIFO_DCT_buffering::~sc_FIFO_DCT_buffering() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sc_FIFO_DCT_buffering::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read()))) {
        i_fu_88 = i_2_fu_165_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
                (esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read())))) {
        i_fu_88 = ap_const_lv32_0;
    }
}

void sc_FIFO_DCT_buffering::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void sc_FIFO_DCT_buffering::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void sc_FIFO_DCT_buffering::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void sc_FIFO_DCT_buffering::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void sc_FIFO_DCT_buffering::thread_din_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1))) {
        din_blk_n = din_empty_n.read();
    } else {
        din_blk_n = ap_const_logic_1;
    }
}

void sc_FIFO_DCT_buffering::thread_din_read() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)))) {
        din_read = ap_const_logic_1;
    } else {
        din_read = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_buffering::thread_grp_read_fu_92_p2() {
    grp_read_fu_92_p2 =  (sc_lv<1>) (s_working.read());
}

void sc_FIFO_DCT_buffering::thread_i_2_fu_165_p2() {
    i_2_fu_165_p2 = (!i_fu_88.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_fu_88.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sc_FIFO_DCT_buffering::thread_s_buffered() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,1,1>(grp_read_fu_92_p2.read(), ap_const_lv1_0))) {
        s_buffered =  (sc_logic) (ap_const_lv1_0[0]);
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read()))) {
        s_buffered =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        s_buffered = sc_logic('X');
    }
}

void sc_FIFO_DCT_buffering::thread_s_buffered_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
          !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
          !esl_seteq<1,1,1>(grp_read_fu_92_p2.read(), ap_const_lv1_0)))) {
        s_buffered_ap_vld = ap_const_logic_1;
    } else {
        s_buffered_ap_vld = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_buffering::thread_sc_FIFO_DCT_mA_address0() {
    sc_FIFO_DCT_mA_address0 =  (sc_lv<6>) (i_fu_88.read());
}

void sc_FIFO_DCT_buffering::thread_sc_FIFO_DCT_mA_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)))) {
        sc_FIFO_DCT_mA_ce0 = ap_const_logic_1;
    } else {
        sc_FIFO_DCT_mA_ce0 = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_buffering::thread_sc_FIFO_DCT_mA_d0() {
    sc_FIFO_DCT_mA_d0 = esl_zext<32,8>(din_dout.read());
}

void sc_FIFO_DCT_buffering::thread_sc_FIFO_DCT_mA_we0() {
    if (((esl_seteq<1,1,1>(ap_CS_fsm_state4.read(), ap_const_lv1_1) && 
          !(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0))))) {
        sc_FIFO_DCT_mA_we0 = ap_const_logic_1;
    } else {
        sc_FIFO_DCT_mA_we0 = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_buffering::thread_tmp_4_fu_138_p0() {
    tmp_4_fu_138_p0 =  (sc_lv<1>) (s_working.read());
}

void sc_FIFO_DCT_buffering::thread_tmp_4_fu_138_p2() {
    tmp_4_fu_138_p2 = (tmp_4_fu_138_p0.read() ^ ap_const_lv1_1);
}

void sc_FIFO_DCT_buffering::thread_tmp_5_nbreadreq_fu_98_p3() {
    tmp_5_nbreadreq_fu_98_p3 =  (sc_lv<1>) (din_empty_n.read());
}

void sc_FIFO_DCT_buffering::thread_tmp_8_fu_171_p2() {
    tmp_8_fu_171_p2 = (!i_2_fu_165_p2.read().is_01() || !ap_const_lv32_40.is_01())? sc_lv<1>(): sc_lv<1>(i_2_fu_165_p2.read() == ap_const_lv32_40);
}

void sc_FIFO_DCT_buffering::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(tmp_4_fu_138_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((!(esl_seteq<1,1,1>(tmp_5_nbreadreq_fu_98_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(din_empty_n.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_171_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(grp_read_fu_92_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

