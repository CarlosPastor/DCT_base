// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sc_FIFO_DCT_data_out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sc_FIFO_DCT_data_out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sc_FIFO_DCT_data_out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state2 = "10";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state3 = "100";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state4 = "1000";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state5 = "10000";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state6 = "100000";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> sc_FIFO_DCT_data_out::ap_const_lv32_4 = "100";
const sc_lv<1> sc_FIFO_DCT_data_out::ap_const_lv1_1 = "1";
const sc_lv<32> sc_FIFO_DCT_data_out::ap_const_lv32_3 = "11";
const sc_lv<1> sc_FIFO_DCT_data_out::ap_const_lv1_0 = "0";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_const_lv7_0 = "0000000";
const sc_lv<32> sc_FIFO_DCT_data_out::ap_const_lv32_2 = "10";
const sc_lv<32> sc_FIFO_DCT_data_out::ap_const_lv32_5 = "101";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_const_lv7_40 = "1000000";
const sc_lv<7> sc_FIFO_DCT_data_out::ap_const_lv7_1 = "1";

sc_FIFO_DCT_data_out::sc_FIFO_DCT_data_out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_dout_blk_n);
    sensitive << ( dout_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dout_din);
    sensitive << ( dout_full_n );
    sensitive << ( sc_FIFO_DCT_mC_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dout_write);
    sensitive << ( dout_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond_fu_152_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_grp_read_fu_96_p2);
    sensitive << ( s_DCT );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_read_fu_96_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_169_p2 );

    SC_METHOD(thread_i_1_fu_158_p2);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_i_cast1_fu_147_p1);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_s_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_169_p2 );

    SC_METHOD(thread_s_done_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_169_p2 );

    SC_METHOD(thread_sc_FIFO_DCT_mC_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_cast1_fu_147_p1 );

    SC_METHOD(thread_sc_FIFO_DCT_mC_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_2_fu_169_p0);
    sensitive << ( s_DCT );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_2_fu_169_p2);
    sensitive << ( tmp_2_fu_169_p0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( dout_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_152_p2 );
    sensitive << ( grp_read_fu_96_p2 );
    sensitive << ( tmp_2_fu_169_p2 );

    ap_CS_fsm = "0000010";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sc_FIFO_DCT_data_out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, dout_din, "(port)dout_din");
    sc_trace(mVcdFile, dout_full_n, "(port)dout_full_n");
    sc_trace(mVcdFile, dout_write, "(port)dout_write");
    sc_trace(mVcdFile, sc_FIFO_DCT_mC_address0, "(port)sc_FIFO_DCT_mC_address0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mC_ce0, "(port)sc_FIFO_DCT_mC_ce0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mC_q0, "(port)sc_FIFO_DCT_mC_q0");
    sc_trace(mVcdFile, s_DCT, "(port)s_DCT");
    sc_trace(mVcdFile, s_done, "(port)s_done");
    sc_trace(mVcdFile, s_done_ap_vld, "(port)s_done_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, dout_blk_n, "dout_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_1_fu_158_p2, "i_1_fu_158_p2");
    sc_trace(mVcdFile, i_1_reg_184, "i_1_reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_fu_152_p2, "exitcond_fu_152_p2");
    sc_trace(mVcdFile, i_reg_130, "i_reg_130");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_read_fu_96_p2, "grp_read_fu_96_p2");
    sc_trace(mVcdFile, i_cast1_fu_147_p1, "i_cast1_fu_147_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_2_fu_169_p2, "tmp_2_fu_169_p2");
    sc_trace(mVcdFile, tmp_2_fu_169_p0, "tmp_2_fu_169_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sc_FIFO_DCT_data_out::~sc_FIFO_DCT_data_out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sc_FIFO_DCT_data_out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state2;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state5.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(dout_full_n.read(), ap_const_logic_0))) {
        i_reg_130 = i_1_reg_184.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(grp_read_fu_96_p2.read(), ap_const_lv1_0))) {
        i_reg_130 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        i_1_reg_184 = i_1_fu_158_p2.read();
    }
}

void sc_FIFO_DCT_data_out::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void sc_FIFO_DCT_data_out::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void sc_FIFO_DCT_data_out::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void sc_FIFO_DCT_data_out::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void sc_FIFO_DCT_data_out::thread_dout_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state5.read(), ap_const_lv1_1))) {
        dout_blk_n = dout_full_n.read();
    } else {
        dout_blk_n = ap_const_logic_1;
    }
}

void sc_FIFO_DCT_data_out::thread_dout_din() {
    dout_din = sc_FIFO_DCT_mC_q0.read().range(8-1, 0);
}

void sc_FIFO_DCT_data_out::thread_dout_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state5.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(dout_full_n.read(), ap_const_logic_0))) {
        dout_write = ap_const_logic_1;
    } else {
        dout_write = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_data_out::thread_exitcond_fu_152_p2() {
    exitcond_fu_152_p2 = (!i_reg_130.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_130.read() == ap_const_lv7_40);
}

void sc_FIFO_DCT_data_out::thread_grp_read_fu_96_p2() {
    grp_read_fu_96_p2 =  (sc_lv<1>) (s_DCT.read());
}

void sc_FIFO_DCT_data_out::thread_i_1_fu_158_p2() {
    i_1_fu_158_p2 = (!i_reg_130.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_130.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sc_FIFO_DCT_data_out::thread_i_cast1_fu_147_p1() {
    i_cast1_fu_147_p1 = esl_zext<32,7>(i_reg_130.read());
}

void sc_FIFO_DCT_data_out::thread_s_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
         !esl_seteq<1,1,1>(tmp_2_fu_169_p2.read(), ap_const_lv1_0))) {
        s_done =  (sc_logic) (ap_const_lv1_0[0]);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(exitcond_fu_152_p2.read(), ap_const_lv1_0))) {
        s_done =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        s_done = sc_logic('X');
    }
}

void sc_FIFO_DCT_data_out::thread_s_done_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
          !esl_seteq<1,1,1>(tmp_2_fu_169_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(exitcond_fu_152_p2.read(), ap_const_lv1_0)))) {
        s_done_ap_vld = ap_const_logic_1;
    } else {
        s_done_ap_vld = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_data_out::thread_sc_FIFO_DCT_mC_address0() {
    sc_FIFO_DCT_mC_address0 =  (sc_lv<6>) (i_cast1_fu_147_p1.read());
}

void sc_FIFO_DCT_data_out::thread_sc_FIFO_DCT_mC_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        sc_FIFO_DCT_mC_ce0 = ap_const_logic_1;
    } else {
        sc_FIFO_DCT_mC_ce0 = ap_const_logic_0;
    }
}

void sc_FIFO_DCT_data_out::thread_tmp_2_fu_169_p0() {
    tmp_2_fu_169_p0 =  (sc_lv<1>) (s_DCT.read());
}

void sc_FIFO_DCT_data_out::thread_tmp_2_fu_169_p2() {
    tmp_2_fu_169_p2 = (tmp_2_fu_169_p0.read() ^ ap_const_lv1_1);
}

void sc_FIFO_DCT_data_out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(grp_read_fu_96_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_152_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(dout_full_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(tmp_2_fu_169_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

