// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sc_FIFO_DCT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sc_FIFO_DCT::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<1> sc_FIFO_DCT::ap_const_lv1_0 = "0";
const sc_lv<1> sc_FIFO_DCT::ap_const_lv1_1 = "1";
const sc_lv<32> sc_FIFO_DCT::ap_const_lv32_1 = "1";
const sc_lv<2> sc_FIFO_DCT::ap_const_lv2_0 = "00";
const sc_logic sc_FIFO_DCT::ap_const_logic_0 = sc_dt::Log_0;

sc_FIFO_DCT::sc_FIFO_DCT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sc_FIFO_DCT_mA_V_U = new sc_FIFO_DCT_sc_FIeOg("sc_FIFO_DCT_mA_V_U");
    sc_FIFO_DCT_mA_V_U->clk(clock);
    sc_FIFO_DCT_mA_V_U->reset(reset);
    sc_FIFO_DCT_mA_V_U->address0(sc_FIFO_DCT_mA_V_address0);
    sc_FIFO_DCT_mA_V_U->ce0(sc_FIFO_DCT_mA_V_ce0);
    sc_FIFO_DCT_mA_V_U->we0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0);
    sc_FIFO_DCT_mA_V_U->d0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0);
    sc_FIFO_DCT_mA_V_U->q0(sc_FIFO_DCT_mA_V_q0);
    sc_FIFO_DCT_mB_V_U = new sc_FIFO_DCT_sc_FIfYi("sc_FIFO_DCT_mB_V_U");
    sc_FIFO_DCT_mB_V_U->clk(clock);
    sc_FIFO_DCT_mB_V_U->reset(reset);
    sc_FIFO_DCT_mB_V_U->address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0);
    sc_FIFO_DCT_mB_V_U->ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0);
    sc_FIFO_DCT_mB_V_U->we0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0);
    sc_FIFO_DCT_mB_V_U->d0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0);
    grp_sc_FIFO_DCT_Prc2_fu_86 = new sc_FIFO_DCT_Prc2("grp_sc_FIFO_DCT_Prc2_fu_86");
    grp_sc_FIFO_DCT_Prc2_fu_86->ap_clk(clock);
    grp_sc_FIFO_DCT_Prc2_fu_86->ap_rst(reset);
    grp_sc_FIFO_DCT_Prc2_fu_86->data_ok(grp_sc_FIFO_DCT_Prc2_fu_86_data_ok);
    grp_sc_FIFO_DCT_Prc2_fu_86->data_ok_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld);
    grp_sc_FIFO_DCT_Prc2_fu_86->done(grp_sc_FIFO_DCT_Prc2_fu_86_done);
    grp_sc_FIFO_DCT_Prc2_fu_86->done_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld);
    grp_sc_FIFO_DCT_Prc2_fu_86->dout(grp_sc_FIFO_DCT_Prc2_fu_86_dout);
    grp_sc_FIFO_DCT_Prc2_fu_86->dout_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld);
    grp_sc_FIFO_DCT_Prc2_fu_86->s_start_i(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i);
    grp_sc_FIFO_DCT_Prc2_fu_86->s_start_o(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o);
    grp_sc_FIFO_DCT_Prc2_fu_86->s_start_o_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld);
    grp_sc_FIFO_DCT_Prc2_fu_86->s_working(grp_sc_FIFO_DCT_Prc2_fu_86_s_working);
    grp_sc_FIFO_DCT_Prc2_fu_86->s_working_ap_vld(grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mA_V_address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mA_V_ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mA_V_q0(sc_FIFO_DCT_mA_V_q0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mB_V_address0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mB_V_ce0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mB_V_we0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0);
    grp_sc_FIFO_DCT_Prc2_fu_86->sc_FIFO_DCT_mB_V_d0(grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0);
    grp_sc_FIFO_DCT_Prc1_fu_118 = new sc_FIFO_DCT_Prc1("grp_sc_FIFO_DCT_Prc1_fu_118");
    grp_sc_FIFO_DCT_Prc1_fu_118->ap_clk(clock);
    grp_sc_FIFO_DCT_Prc1_fu_118->ap_rst(reset);
    grp_sc_FIFO_DCT_Prc1_fu_118->sync(sync);
    grp_sc_FIFO_DCT_Prc1_fu_118->error(grp_sc_FIFO_DCT_Prc1_fu_118_error);
    grp_sc_FIFO_DCT_Prc1_fu_118->error_ap_vld(grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld);
    grp_sc_FIFO_DCT_Prc1_fu_118->din(din);
    grp_sc_FIFO_DCT_Prc1_fu_118->s_start(grp_sc_FIFO_DCT_Prc1_fu_118_s_start);
    grp_sc_FIFO_DCT_Prc1_fu_118->s_start_ap_vld(grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld);
    grp_sc_FIFO_DCT_Prc1_fu_118->s_working(grp_sc_FIFO_DCT_Prc1_fu_118_s_working);
    grp_sc_FIFO_DCT_Prc1_fu_118->sc_FIFO_DCT_mA_V_address0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0);
    grp_sc_FIFO_DCT_Prc1_fu_118->sc_FIFO_DCT_mA_V_ce0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0);
    grp_sc_FIFO_DCT_Prc1_fu_118->sc_FIFO_DCT_mA_V_we0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0);
    grp_sc_FIFO_DCT_Prc1_fu_118->sc_FIFO_DCT_mA_V_d0(grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0);

    SC_METHOD(thread_data_ok);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_done);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_dout);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_error);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_s_start);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_s_working);
    dont_initialize();
    sensitive << ( clock.pos() );

    SC_METHOD(thread_ap_CS_fsm);

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_sc_FIFO_DCT_Prc1_fu_118_s_working);
    sensitive << ( sc_FIFO_DCT_ssdm_s_load_fu_146_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( s_working );

    SC_METHOD(thread_grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i);
    sensitive << ( sc_FIFO_DCT_ssdm_s_load_fu_146_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( s_start );

    SC_METHOD(thread_sc_FIFO_DCT_mA_V_address0);
    sensitive << ( grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0 );
    sensitive << ( grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0 );
    sensitive << ( grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0 );
    sensitive << ( grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0 );

    SC_METHOD(thread_sc_FIFO_DCT_mA_V_ce0);
    sensitive << ( grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0 );
    sensitive << ( grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0 );

    SC_METHOD(thread_sc_FIFO_DCT_ssdm_s_load_fu_146_p1);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( clock.pos() );

    done.initialize(SC_LOGIC_0);
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sc_FIFO_DCT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, clock, "(port)clock");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, sync, "(port)sync");
    sc_trace(mVcdFile, data_ok, "(port)data_ok");
    sc_trace(mVcdFile, done, "(port)done");
    sc_trace(mVcdFile, error, "(port)error");
    sc_trace(mVcdFile, din, "(port)din");
    sc_trace(mVcdFile, dout, "(port)dout");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_V_address0, "sc_FIFO_DCT_mA_V_address0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_V_ce0, "sc_FIFO_DCT_mA_V_ce0");
    sc_trace(mVcdFile, sc_FIFO_DCT_mA_V_q0, "sc_FIFO_DCT_mA_V_q0");
    sc_trace(mVcdFile, sc_FIFO_DCT_ssdm_s_load_fu_146_p1, "sc_FIFO_DCT_ssdm_s_load_fu_146_p1");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_data_ok, "grp_sc_FIFO_DCT_Prc2_fu_86_data_ok");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld, "grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_done, "grp_sc_FIFO_DCT_Prc2_fu_86_done");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld, "grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_dout, "grp_sc_FIFO_DCT_Prc2_fu_86_dout");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld, "grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i, "grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o, "grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld, "grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_s_working, "grp_sc_FIFO_DCT_Prc2_fu_86_s_working");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld, "grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_address0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_ce0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_we0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0, "grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mB_V_d0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_error, "grp_sc_FIFO_DCT_Prc1_fu_118_error");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld, "grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_s_start, "grp_sc_FIFO_DCT_Prc1_fu_118_s_start");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld, "grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_s_working, "grp_sc_FIFO_DCT_Prc1_fu_118_s_working");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0, "grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0, "grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0, "grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_we0");
    sc_trace(mVcdFile, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0, "grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_d0");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, s_start, "s_start");
    sc_trace(mVcdFile, s_working, "s_working");
#endif

    }
    mHdltvinHandle.open("sc_FIFO_DCT.hdltvin.dat");
    mHdltvoutHandle.open("sc_FIFO_DCT.hdltvout.dat");
}

sc_FIFO_DCT::~sc_FIFO_DCT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sc_FIFO_DCT_mA_V_U;
    delete sc_FIFO_DCT_mB_V_U;
    delete grp_sc_FIFO_DCT_Prc2_fu_86;
    delete grp_sc_FIFO_DCT_Prc1_fu_118;
}

void sc_FIFO_DCT::thread_data_ok() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_data_ok_ap_vld.read())) {
        data_ok = grp_sc_FIFO_DCT_Prc2_fu_86_data_ok.read();
    }
}

void sc_FIFO_DCT::thread_done() {
    if ( reset.read() == ap_const_logic_1) {
        done =  (sc_logic) (ap_const_lv1_0[0]);
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_done_ap_vld.read())) {
            done = grp_sc_FIFO_DCT_Prc2_fu_86_done.read();
        }
    }
}

void sc_FIFO_DCT::thread_dout() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_dout_ap_vld.read())) {
        dout = grp_sc_FIFO_DCT_Prc2_fu_86_dout.read();
    }
}

void sc_FIFO_DCT::thread_error() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc1_fu_118_error_ap_vld.read())) {
        error = grp_sc_FIFO_DCT_Prc1_fu_118_error.read();
    }
}

void sc_FIFO_DCT::thread_s_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc1_fu_118_s_start_ap_vld.read())) {
        s_start =  (sc_lv<1>) (grp_sc_FIFO_DCT_Prc1_fu_118_s_start.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o_ap_vld.read())) {
        s_start =  (sc_lv<1>) (grp_sc_FIFO_DCT_Prc2_fu_86_s_start_o.read());
    }
}

void sc_FIFO_DCT::thread_s_working() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_s_working_ap_vld.read())) {
        s_working =  (sc_lv<1>) (grp_sc_FIFO_DCT_Prc2_fu_86_s_working.read());
    }
}

void sc_FIFO_DCT::thread_ap_CS_fsm() {
    ap_CS_fsm = ap_const_lv2_0;
}

void sc_FIFO_DCT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void sc_FIFO_DCT::thread_grp_sc_FIFO_DCT_Prc1_fu_118_s_working() {
    grp_sc_FIFO_DCT_Prc1_fu_118_s_working =  (sc_logic) (s_working.read()[0]);
}

void sc_FIFO_DCT::thread_grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i() {
    grp_sc_FIFO_DCT_Prc2_fu_86_s_start_i =  (sc_logic) (s_start.read()[0]);
}

void sc_FIFO_DCT::thread_sc_FIFO_DCT_mA_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0.read())) {
        sc_FIFO_DCT_mA_V_address0 = grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0.read())) {
        sc_FIFO_DCT_mA_V_address0 = grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_address0.read();
    } else {
        sc_FIFO_DCT_mA_V_address0 = "XXXXXX";
    }
}

void sc_FIFO_DCT::thread_sc_FIFO_DCT_mA_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0.read())) {
        sc_FIFO_DCT_mA_V_ce0 = grp_sc_FIFO_DCT_Prc1_fu_118_sc_FIFO_DCT_mA_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0.read())) {
        sc_FIFO_DCT_mA_V_ce0 = grp_sc_FIFO_DCT_Prc2_fu_86_sc_FIFO_DCT_mA_V_ce0.read();
    } else {
        sc_FIFO_DCT_mA_V_ce0 = sc_logic('X');
    }
}

void sc_FIFO_DCT::thread_sc_FIFO_DCT_ssdm_s_load_fu_146_p1() {
    sc_FIFO_DCT_ssdm_s_load_fu_146_p1 = ap_const_lv1_0;
}

void sc_FIFO_DCT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"reset\" :  \"" << reset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sync\" :  \"" << sync.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"data_ok\" :  \"" << data_ok.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"done\" :  \"" << done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"error\" :  \"" << error.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"din\" :  \"" << din.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout\" :  \"" << dout.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

