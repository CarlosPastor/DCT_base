// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sc_FIFO_DCT_buffering_HH_
#define _sc_FIFO_DCT_buffering_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct sc_FIFO_DCT_buffering : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > din_dout;
    sc_in< sc_logic > din_empty_n;
    sc_out< sc_logic > din_read;
    sc_out< sc_lv<6> > sc_FIFO_DCT_mA_address0;
    sc_out< sc_logic > sc_FIFO_DCT_mA_ce0;
    sc_out< sc_logic > sc_FIFO_DCT_mA_we0;
    sc_out< sc_lv<32> > sc_FIFO_DCT_mA_d0;
    sc_out< sc_logic > s_buffered;
    sc_out< sc_logic > s_buffered_ap_vld;
    sc_in< sc_logic > s_working;


    // Module declarations
    sc_FIFO_DCT_buffering(sc_module_name name);
    SC_HAS_PROCESS(sc_FIFO_DCT_buffering);

    ~sc_FIFO_DCT_buffering();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > din_blk_n;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_5_nbreadreq_fu_98_p3;
    sc_signal< sc_lv<32> > i_fu_88;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > i_2_fu_165_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_171_p2;
    sc_signal< sc_lv<1> > grp_read_fu_92_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_4_fu_138_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_4_fu_138_p0;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_40;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_din_blk_n();
    void thread_din_read();
    void thread_grp_read_fu_92_p2();
    void thread_i_2_fu_165_p2();
    void thread_s_buffered();
    void thread_s_buffered_ap_vld();
    void thread_sc_FIFO_DCT_mA_address0();
    void thread_sc_FIFO_DCT_mA_ce0();
    void thread_sc_FIFO_DCT_mA_d0();
    void thread_sc_FIFO_DCT_mA_we0();
    void thread_tmp_4_fu_138_p0();
    void thread_tmp_4_fu_138_p2();
    void thread_tmp_5_nbreadreq_fu_98_p3();
    void thread_tmp_8_fu_171_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
