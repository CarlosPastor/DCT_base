#include "sc_FIFO_DCT.h"

static const int b[] = {
		90,   90,   90,   90,   90,   90,   90,   90,
		125,  106,   71,   24, -24, -71, -106, -125,
		118,   48, -48, -118, -118, -48,   48,  118,
		106, -24, -125, -71,   71,  125,   24, -106,
		90, -90, -90,   90,   90, -90, -90,   90,
		71, -125,   24,  106, -106, -24,  125, -71,
		48, -118,  118, -48, -48,  118, -118,   48,
		24, -71,  106, -125,  125, -106,   71, -24,
};

static const int b_a[] = {
		90,  125,  118,  106,   90,   71,   48,   24,
		90,  106,   48, -24, -90, -125, -118, -71,
		90,   71, -48, -125, -90,   24,  118,  106,
		90,   24, -118, -71,   90,  106, -48, -125,
		90, -24, -118,   71,   90, -106, -48,  125,
		90, -71, -48,  125, -90, -24,  118, -106,
		90, -106,   48,   24, -90,  125, -118,   71,
		90, -125,  118, -106,   90, -71,   48, -24,
};

// static const double b_a[] = { 0.3536, 0.4904, 0.4619, 0.4157, 0.3536, 0.2778,
// 		0.1913, 0.0975, 0.3536, 0.4157, 0.1913, -0.0975, -0.3536, -0.4904, -0.4619,
// 		-0.2778, 0.3536, 0.2778, -0.1913, -0.4904, -0.3536, 0.0975, 0.4619, 0.4157,
// 		0.3536, 0.0975, -0.4619, -0.2778, 0.3536, 0.4157, -0.1913, -0.4904, 0.3536,
// 		-0.0975, -0.4619, 0.2778, 0.3536, -0.4157, -0.1913, 0.4904, 0.3536, -0.2778,
// 		-0.1913, 0.4904, -0.3536, -0.0975, 0.4619, -0.4157, 0.3536, -0.4157, 0.1913,
// 		0.0975, -0.3536, 0.4904, -0.4619, 0.2778, 0.3536, -0.4904, 0.4619, -0.4157,
// 		0.3536, -0.2778, 0.1913, -0.0975 };
//
// static const double b[] = { 0.3536, 0.3536, 0.3536, 0.3536, 0.3536, 0.3536,
// 		0.3536, 0.3536, 0.4904, 0.4157, 0.2778, 0.0975, -0.0975, -0.2778, -0.4157,
// 		-0.4904, 0.4619, 0.1913, -0.1913, -0.4619, -0.4619, -0.1913, 0.1913, 0.4619,
// 		0.4157, -0.0975, -0.4904, -0.2778, 0.2778, 0.4904, 0.0975, -0.4157, 0.3536,
// 		-0.3536, -0.3536, 0.3536, 0.3536, -0.3536, -0.3536, 0.3536, 0.2778, -0.4904,
// 		0.0975, 0.4157, -0.4157, -0.0975, 0.4904, -0.2778, 0.1913, -0.4619, 0.4619,
// 		-0.1913, -0.1913, 0.4619, -0.4619, 0.1913, 0.0975, -0.2778, 0.4157, -0.4904,
// 		0.4904, -0.4157, 0.2778, -0.0975 };


void sc_FIFO_DCT::Prc1()
{
   //Initialization
   write_done = false;

   wait();
   while(true)
   {
      while (din.num_available() < 64 ) wait();

      for(int i=0;i<64; i++)
        mA[i] = (int) din.read();

      write_done = true;
      wait();
			write_done = false;
   } //end of while(true)
}

void sc_FIFO_DCT::Prc2()
{
   //Initialization
   done = false;
   int a[64];
   int i0 = 0;
   int i1 = 0;
   int i2 = 0;

   wait();

   while(true)
   {
      //while (!start.read()) wait();
      while (!write_done) wait();

			for (i0 = 0; i0 < 8; i0++) {
				for (i1 = 0; i1 < 8; i1++) {
					a[i0 + (i1 << 3)] = 0.0;
					for (i2 = 0; i2 < 8; i2++) {
						a[i0 + (i1 << 3)] += b_a[i0 + (i2 << 3)] * ( mA[i2 + (i1 << 3)] );
					}
				}
				for (i1 = 0; i1 < 8; i1++) {
					mB[i0 + (i1 << 3)] = 0.0;
					for (i2 = 0; i2 < 8; i2++) {
						mB[i0 + (i1 << 3)] += a[i0 + (i2 << 3)] * b[i2 + (i1 << 3)];
					}
					dout.write( (sc_uint<8>)((mB[i0 + (i1 << 3)]/65536)/8 + 127));
				}
			}

      done = true;
      cout << "Simulating DCT" << (exec_cnt++) << endl;
      wait();
   } //end of while(true)
}
